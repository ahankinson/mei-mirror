<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="xml"?>
<TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>MEI (Music Encoding Initiative)</title>
        <respStmt>
          <resp>automated and manual editing</resp>
          <name xml:id="RV">Raffaele Viglianti</name>
          <name xml:id="PR">Perry Roland</name>
        </respStmt>
      </titleStmt>
      <publicationStmt>
        <p>Converted from RNG with XSLT script ../Styles/rng2odd.xsl</p>
      </publicationStmt>
      <sourceDesc>
        <p>created on 2010-08-27T14:55:42.928+02:00</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change who="#RV" when="2010-08-27+02:00"> Converted RNG Datatypes
        Declarations into ODD Datatype Macros according to TEI guidelines. <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/html/ST.html#DTYPES"
          >Chapter 1, §1.4.2</ref>. </change>
      <change who="#RV" when="2010-08-27+02:00"> Converted RNG Attribute Classes
        Declarations into ODD Attribute Classes according to TEI guidelines.
          <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/html/ST.html#STECAT"
          >Chapter 1, §1.3.1</ref>. </change>
      <change who="#RV" when="2010-08-27+02:00"> Converted RNG Model Classes
        Declarations into ODD Model Classes according to TEI guidelines. <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/ST.html#STECCM"
          >Chapter 1, §1.3.2</ref>. See also <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDCLA"
          >Chapter 22, §22.4.6</ref> for references to models. </change>
      <change who="#RV" when="2010-08-27+02:00"> Converted RNG Model Classes
        Declarations into ODD Macro Classes (when appropriate) according to TEI
        guidelines. <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDENT"
          >Chapter 22, §22.4.7</ref>. </change>
      <change who="#RV" when="2010-08-27+02:00"> Converted RNG Element
        Declarations into ODD Element Declarations according to TEI guidelines.
          <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDcrystals"
          >Chapter 22, §22.3</ref>. See also <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html#TDCLA"
          >Chapter 22, §22.4.6</ref> for references to models. </change>
      <change who="#PR" when="2010-08-27+02:00">Changed order of content and
        attlist declarations, fixed problem generating @usage</change>
      <change who="#RV" when="2010-08-27+02:00">Integrated Schematron rules
        within element declarations.</change>
      <change who="#RV" when="2010-08-27+02:00">Integrated modules.</change>
      <change who="#PR" when="2010-12-10">Added descriptions in attribute
        definitions</change>
      <change who="#PR" when="2010-12-10">Corrected typos in the description of
        list</change>
      <change who="#PR" when="2010-12-10">Corrected omission of att.width on
        graphic</change>
      <change who="#PR" when="2010-12-10">Revised description of
      att.calendared</change>
      <change who="#PR" when="2010-12-10">Modified attribute classes</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <p>MEI</p>
      <!--****-->
      <!--Modules-->
      <!--****-->
      <moduleSpec ident="mei">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="shared">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="header">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="cmn">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="mensural">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="neumes">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="analysis">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="cmnOrnaments">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="corpus">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="critapp">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="edittrans">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="facsimile">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="figtable">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="harmony">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="linkalign">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="lyrics">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="midi">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="namesdates">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="ptrref">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="tablature">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="text">
        <desc/>
      </moduleSpec>
      <moduleSpec ident="usersymbols">
        <desc/>
      </moduleSpec>
      <!--****-->
      <!--Datatype Macros-->
      <!--****-->
      <macroSpec module="mei" type="dt" ident="data.BEND.AMOUNT">
        <desc>Either a decimal value or a token. The decimal values are limited
          to .25, .5, .75, or 1, while the token values are restricted to
          'full'.</desc>
        <content>
          <rng:choice>
            <rng:data type="decimal">
              <rng:param name="pattern">1|\.25|\.5|\.75</rng:param>
            </rng:data>
            <rng:data type="token">
              <rng:param name="pattern">full</rng:param>
            </rng:data>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BEAT">
        <desc>A beat location, i.e., [0-9]+(\.?[0-9]*)? The value must fall
          between 0 and the numerator of the time signature + 1, where 0
          represents the left barline and the upper bound represents the right
          barline. For example, in 12/8 the value must be in the range from 0 to
          13.</desc>
        <content>
          <rng:data type="decimal">
            <rng:param name="minInclusive">0</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BEATRPT.REND">
        <desc>Visual and performance information for a repeated beat
          symbol.</desc>
        <content>
          <rng:choice>
            <rng:data type="positiveInteger">
              <rng:param name="pattern">4|8|16|32|64|128</rng:param>
            </rng:data>
            <rng:data type="token">
              <rng:param name="pattern">mixed</rng:param>
            </rng:data>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.COLOR">
        <desc>Either a hexadecimal color value, ie., x[0-9A-Fa-f]{6,6} OR a
          descriptive word, i.e., aqua, black, blue, fuchsia, gray, green, lime,
          maroon, navy, olive, purple, red, silver, teal, white, or yellow, for
          colors defined by the HTML 4.01 specification.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern"
              >(x[0-9A-Fa-f]{6,6}|aqua|black|fuchsia|gray|green|lime|maroon|navy|olive|purple|red|silver|teal|white|yellow)</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.COLORS">
        <desc>One or more values from the list given in the definition of
          data.COLOR.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.COLOR"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.DEGREES">
        <desc>360th-unit measure of a cirle's circumference; optionally signed
          decimal number, i.e., [+-]?[0-9]+(\.?[0-9]*)?</desc>
        <content>
          <rng:data type="decimal"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FINGER.FRET">
        <desc>In a guitar chord diagram, a label indicating which finger, if
          any, should be used to play an individual string. The values 'x' and
          'o' indicate stopped and open strings, respectively.</desc>
        <content>
          <rng:choice>
            <rng:data type="positiveInteger">
              <rng:param name="minInclusive">1</rng:param>
              <rng:param name="maxInclusive">4</rng:param>
            </rng:data>
            <rng:data type="token">
              <rng:param name="pattern">x|o</rng:param>
            </rng:data>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FRET">
        <desc>In a guitar chord diagram, the fret where the finger should be
          placed. Since guitar chord diagrams are limited to the range of frets
          that fall under the hand, the value here is also limited. The pos
          (position) attribute on the chorddef element must be used to indicate
          at which fret this range begins.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">1</rng:param>
            <rng:param name="maxInclusive">5</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ISODATE">
        <desc>ISO date formats</desc>
        <content>
          <rng:choice>
            <rng:data type="date"/>
            <rng:data type="gYear"/>
            <rng:data type="gMonth"/>
            <rng:data type="gDay"/>
            <rng:data type="gYearMonth"/>
            <rng:data type="gMonthDay"/>
            <rng:data type="time"/>
            <rng:data type="dateTime"/>
            <rng:data type="token">
              <rng:param name="pattern">[0-9.,DHMPRSTWYZ/:+\-]+</rng:param>
            </rng:data>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ISOTIME">
        <desc>ISO 24-hour time format: HH:MM:SS.ss, i.e.,
          [0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.?[0-9]*)?</desc>
        <content>
          <rng:data type="time"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MEASUREBEAT">
        <desc>A duration expressed as a count of measures plus a beat location,
          i.e., [0-9]+m *\+ *[0-9]+(\.?[0-9]*)?, e.g., dur="1m + 3.5" indicates
          a duration of 1 measure plus 3 and one half beats or, in other words,
          on the 2nd half of the 3rd beat of the next measure. The measure
          number must be in the range of 0 to the number of remaining measures
          and the beat number must be in the range from 0 to the numerator of
          the time signature plus 1. For example, for an event starting in the
          first measure of a piece containing 6 measures in 6/8, the measure
          number must be between 0 to 5 and the beat number must be within the
          range from 0 to 7, e.g., "4m+3".</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern"
              >([0-9]+m\s*\+\s*)?[0-9]+(\.?[0-9]*)?</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MIDINAMES">
        <desc>General MIDI instrument names</desc>
        <content>
          <rng:choice>
            <rng:value>Acoustic_Grand_Piano</rng:value>
            <rng:value>Bright_Acoustic_Piano</rng:value>
            <rng:value>Electric_Grand_Piano</rng:value>
            <rng:value>Honky-tonk_Piano</rng:value>
            <rng:value>Electric_Piano_1</rng:value>
            <rng:value>Electric_Piano_2</rng:value>
            <rng:value>Harpsichord</rng:value>
            <rng:value>Clavi</rng:value>
            <rng:value>Celesta</rng:value>
            <rng:value>Glockenspiel</rng:value>
            <rng:value>Music_Box</rng:value>
            <rng:value>Vibraphone</rng:value>
            <rng:value>Marimba</rng:value>
            <rng:value>Xylophone</rng:value>
            <rng:value>Tubular_Bells</rng:value>
            <rng:value>Dulcimer</rng:value>
            <rng:value>Drawbar_Organ</rng:value>
            <rng:value>Percussive_Organ</rng:value>
            <rng:value>Rock_Organ</rng:value>
            <rng:value>Church_Organ</rng:value>
            <rng:value>Reed_Organ</rng:value>
            <rng:value>Accordion</rng:value>
            <rng:value>Harmonica</rng:value>
            <rng:value>Tango_Accordion</rng:value>
            <rng:value>Acoustic_Guitar_nylon</rng:value>
            <rng:value>Acoustic_Guitar_steel</rng:value>
            <rng:value>Electric_Guitar_jazz</rng:value>
            <rng:value>Electric_Guitar_clean</rng:value>
            <rng:value>Electric_Guitar_muted</rng:value>
            <rng:value>Overdriven_Guitar</rng:value>
            <rng:value>Distortion_Guitar</rng:value>
            <rng:value>Guitar_harmonics</rng:value>
            <rng:value>Acoustic_Bass</rng:value>
            <rng:value>Electric_Bass_finger</rng:value>
            <rng:value>Electric_Bass_pick</rng:value>
            <rng:value>Fretless_Bass</rng:value>
            <rng:value>Slap_Bass_1</rng:value>
            <rng:value>Slap_Bass_2</rng:value>
            <rng:value>Synth_Bass_1</rng:value>
            <rng:value>Synth_Bass_2</rng:value>
            <rng:value>Violin</rng:value>
            <rng:value>Viola</rng:value>
            <rng:value>Cello</rng:value>
            <rng:value>Contrabass</rng:value>
            <rng:value>Tremolo_Strings</rng:value>
            <rng:value>Pizzicato_Strings</rng:value>
            <rng:value>Orchestral_Harp</rng:value>
            <rng:value>Timpani</rng:value>
            <rng:value>String_Ensemble_1</rng:value>
            <rng:value>String_Ensemble_2</rng:value>
            <rng:value>SynthStrings_1</rng:value>
            <rng:value>SynthStrings_2</rng:value>
            <rng:value>Choir_Aahs</rng:value>
            <rng:value>Voice_Oohs</rng:value>
            <rng:value>Synth_Voice</rng:value>
            <rng:value>Orchestra_Hit</rng:value>
            <rng:value>Trumpet</rng:value>
            <rng:value>Trombone</rng:value>
            <rng:value>Tuba</rng:value>
            <rng:value>Muted_Trumpet</rng:value>
            <rng:value>French_Horn</rng:value>
            <rng:value>Brass_Section</rng:value>
            <rng:value>SynthBrass_1</rng:value>
            <rng:value>SynthBrass_2</rng:value>
            <rng:value>Soprano_Sax</rng:value>
            <rng:value>Alto_Sax</rng:value>
            <rng:value>Tenor_Sax</rng:value>
            <rng:value>Baritone_Sax</rng:value>
            <rng:value>Oboe</rng:value>
            <rng:value>English_Horn</rng:value>
            <rng:value>Bassoon</rng:value>
            <rng:value>Clarinet</rng:value>
            <rng:value>Piccolo</rng:value>
            <rng:value>Flute</rng:value>
            <rng:value>Recorder</rng:value>
            <rng:value>Pan_Flute</rng:value>
            <rng:value>Blown_Bottle</rng:value>
            <rng:value>Shakuhachi</rng:value>
            <rng:value>Whistle</rng:value>
            <rng:value>Ocarina</rng:value>
            <rng:value>Lead_1_square</rng:value>
            <rng:value>Lead_2_sawtooth</rng:value>
            <rng:value>Lead_3_calliope</rng:value>
            <rng:value>Lead_4_chiff</rng:value>
            <rng:value>Lead_5_charang</rng:value>
            <rng:value>Lead_6_voice</rng:value>
            <rng:value>Lead_7_fifths</rng:value>
            <rng:value>Lead_8_bass_and_lead</rng:value>
            <rng:value>Pad_1_new_age</rng:value>
            <rng:value>Pad_2_warm</rng:value>
            <rng:value>Pad_3_polysynth</rng:value>
            <rng:value>Pad_4_choir</rng:value>
            <rng:value>Pad_5_bowed</rng:value>
            <rng:value>Pad_6_metallic</rng:value>
            <rng:value>Pad_7_halo</rng:value>
            <rng:value>Pad_8_sweep</rng:value>
            <rng:value>FX_1_rain</rng:value>
            <rng:value>FX_2_soundtrack</rng:value>
            <rng:value>FX_3_crystal</rng:value>
            <rng:value>FX_4_atmosphere</rng:value>
            <rng:value>FX_5_brightness</rng:value>
            <rng:value>FX_6_goblins</rng:value>
            <rng:value>FX_7_echoes</rng:value>
            <rng:value>FX_8_sci-fi</rng:value>
            <rng:value>Sitar</rng:value>
            <rng:value>Banjo</rng:value>
            <rng:value>Shamisen</rng:value>
            <rng:value>Koto</rng:value>
            <rng:value>Kalimba</rng:value>
            <rng:value>Bagpipe</rng:value>
            <rng:value>Fiddle</rng:value>
            <rng:value>Shanai</rng:value>
            <rng:value>Tinkle_Bell</rng:value>
            <rng:value>Agogo</rng:value>
            <rng:value>Steel_Drums</rng:value>
            <rng:value>Woodblock</rng:value>
            <rng:value>Taiko_Drum</rng:value>
            <rng:value>Melodic_Tom</rng:value>
            <rng:value>Synth_Drum</rng:value>
            <rng:value>Reverse_Cymbal</rng:value>
            <rng:value>Guitar_Fret_Noise</rng:value>
            <rng:value>Breath_Noise</rng:value>
            <rng:value>Seashore</rng:value>
            <rng:value>Bird_Tweet</rng:value>
            <rng:value>Telephone_Ring</rng:value>
            <rng:value>Helicopter</rng:value>
            <rng:value>Applause</rng:value>
            <rng:value>Gunshot</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MIDITEMPO">
        <desc>MIDI quarter notes per minute: positive integer in the range
          10-1000</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">10</rng:param>
            <rng:param name="maxInclusive">1000</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MODUSMAIOR">
        <desc>Maxima-long relationship values.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">2</rng:param>
            <rng:param name="maxInclusive">3</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MODUSMINOR">
        <desc>Long-breve relationship values.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">2</rng:param>
            <rng:param name="maxInclusive">3</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.OCTAVE.DIS">
        <desc>The amount of octave displacement; that is, '8' (as in '8va' for 1
          octave), '15' (for 2 octaves), or rarely '22' (for 3 octaves).</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="pattern">8|15|22</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ORIENTATION">
        <desc>Rotation or reflection of base symbol values.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">reversed|90CW|90CCW</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PAGE.PANELS">
        <desc>The number of panels per page.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">1</rng:param>
            <rng:param name="maxInclusive">2</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PERCENT">
        <desc>Positive decimal number plus '%', i.e.,
          [0-9]+(\.?[0-9]*)?\%</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[0-9]+(\.?[0-9]*)?%</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PROLATIO">
        <desc>Semibreve-minim relationship values.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">2</rng:param>
            <rng:param name="maxInclusive">3</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.RATIO">
        <desc>A ratio, i.e., [0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)? For example,
          "40:7.2319"</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern"
              >[0-9]+(\.?[0-9]*)?:[0-9]+(\.?[0-9]*)?</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.SLASH">
        <desc>The number of slashes to be rendered for tremolandi.</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">1</rng:param>
            <rng:param name="maxInclusive">6</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STRINGNUMBER">
        <desc>In string tablature, the number of the string to be played, i.e.,
          [1-9]+.</desc>
        <content>
          <rng:data type="positiveInteger"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TEMPOVALUE">
        <desc>Beats (meter signature denominator) per minute, e.g. 120.</desc>
        <content>
          <rng:data type="positiveInteger"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TEMPUS">
        <desc>Breve-semibreve relationship values</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">2</rng:param>
            <rng:param name="maxInclusive">3</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TSTAMPOFFSET">
        <desc>A positive or negative offset from the value given in the tstamp
          attribute in terms of musical time, i.e., beats[.fractional beat
          part]</desc>
        <content>
          <rng:data type="decimal"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.URI">
        <desc>a Uniform Resource Identifier, see [RFC2396]</desc>
        <content>
          <rng:data type="anyURI"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ACCIDENTAL.EXPLICIT">
        <desc>Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
          x=dblsharp, ff = dblflat, xs = triple sharp, tb = triple flat, n =
          natural, nf = naturalflat, ns = naturalsharp. ss indicates the use of
          2 sharp signs, while x indicates the use of a single double sharp. nf
          and ns are used to cancel dbflats and dblsharps, respectively. su =
          sharp note qtr. tone up, sd = sharp note qtr. tone down, fu = flat
          note qtr. tone up, fd = flat note qtr. tone down, nu = natural note
          qtr. tone up, nd = natural note quarter tone down.</desc>
        <content>
          <rng:choice>
            <rng:value>s</rng:value>
            <rng:value>f</rng:value>
            <rng:value>ss</rng:value>
            <rng:value>x</rng:value>
            <rng:value>ff</rng:value>
            <rng:value>xs</rng:value>
            <rng:value>tb</rng:value>
            <rng:value>n</rng:value>
            <rng:value>nf</rng:value>
            <rng:value>ns</rng:value>
            <rng:value>su</rng:value>
            <rng:value>sd</rng:value>
            <rng:value>fu</rng:value>
            <rng:value>fd</rng:value>
            <rng:value>nu</rng:value>
            <rng:value>nd</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ACCIDENTAL.IMPLICIT">
        <desc>Accidental attribute values: s = sharp, f = flat, ss = dblsharp,
          x=dblsharp, ff = dblflat, n = natural.</desc>
        <content>
          <rng:choice>
            <rng:value>s</rng:value>
            <rng:value>f</rng:value>
            <rng:value>ss</rng:value>
            <rng:value>ff</rng:value>
            <rng:value>n</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ARTICULATION">
        <desc>The following list of articulations mostly corresponds to symbols
          1D110-1D111, 1D17B-1D182, 1D185-1D189, 1D1AA-1D1AD, 1D1B3-1D1B5 from
          the Western Musical Symbols portion of the Unicode Standard, v. 3.1.
          The dot and stroke values may be used in cases where interpretation is
          difficult or not desirable.</desc>
        <content>
          <rng:choice>
            <rng:value>acc</rng:value>
            <rng:value>stacc</rng:value>
            <rng:value>ten</rng:value>
            <rng:value>stacciss</rng:value>
            <rng:value>marc</rng:value>
            <rng:value>marc-stacc</rng:value>
            <rng:value>acc-marc</rng:value>
            <rng:value>spicc</rng:value>
            <rng:value>rip</rng:value>
            <rng:value>doit</rng:value>
            <rng:value>plop</rng:value>
            <rng:value>fall</rng:value>
            <rng:value>bend</rng:value>
            <rng:value>flip</rng:value>
            <rng:value>smear</rng:value>
            <rng:value>dnbow</rng:value>
            <rng:value>upbow</rng:value>
            <rng:value>harm</rng:value>
            <rng:value>snap</rng:value>
            <rng:value>fingernail</rng:value>
            <rng:value>ten-stacc</rng:value>
            <rng:value>damp</rng:value>
            <rng:value>dampall</rng:value>
            <rng:value>open</rng:value>
            <rng:value>stop</rng:value>
            <rng:value>dbltongue</rng:value>
            <rng:value>trpltongue</rng:value>
            <rng:value>heel</rng:value>
            <rng:value>toe</rng:value>
            <rng:value>tap</rng:value>
            <rng:value>lhpizz</rng:value>
            <rng:value>dot</rng:value>
            <rng:value>stroke</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ARTICULATIONS">
        <desc>One or more values from the list given in the definition of
          data.ARTICULATION.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.ARTICULATION"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.AUGMENTDOT">
        <desc>Dots attribute values (number of augmentation dots) (Read,
          113-119, ex. 8-21)</desc>
        <content>
          <rng:data type="nonNegativeInteger">
            <rng:param name="maxInclusive">4</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BARPLACE">
        <desc>Placement of barlines: 'mensur' = between staves only, 'staff' =
          between and across staves as necessary, 'takt' = short line above
          staff or through top line. The default value is 'staff'.</desc>
        <content>
          <rng:choice>
            <rng:value>mensur</rng:value>
            <rng:value>staff</rng:value>
            <rng:value>takt</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BARRENDITION">
        <desc>Renderings of barlines</desc>
        <content>
          <rng:choice>
            <rng:value>dashed</rng:value>
            <rng:value>dotted</rng:value>
            <rng:value>dbl</rng:value>
            <rng:value>dbldashed</rng:value>
            <rng:value>dbldotted</rng:value>
            <rng:value>end</rng:value>
            <rng:value>invis</rng:value>
            <rng:value>rptstart</rng:value>
            <rng:value>rptboth</rng:value>
            <rng:value>rptend</rng:value>
            <rng:value>single</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BEAM">
        <desc>Beam attribute values: initial, medial, terminal. Nested beaming
          is permitted.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[i|m|t][1-6]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BEAMS">
        <desc>One or more from the list given in the definition of the BEAM
          datatype.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.BEAM"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.BOOLEAN">
        <desc>Boolean attribute values</desc>
        <content>
          <rng:choice>
            <rng:value>true</rng:value>
            <rng:value>false</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.CERTAINTY">
        <desc>Values for certainty attribute</desc>
        <content>
          <rng:choice>
            <rng:value>high</rng:value>
            <rng:value>medium</rng:value>
            <rng:value>low</rng:value>
            <rng:value>unknown</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.CLEFLINE">
        <desc>Clef line attribute values</desc>
        <content>
          <rng:data type="positiveInteger"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.CLEFSHAPE">
        <desc>Clef shape attribute values (Read, p.53-56)</desc>
        <content>
          <rng:choice>
            <rng:value>G</rng:value>
            <rng:value>GG</rng:value>
            <rng:value>F</rng:value>
            <rng:value>C</rng:value>
            <rng:value>perc</rng:value>
            <rng:value>TAB</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.CLUSTER">
        <desc>Tone-clusters</desc>
        <content>
          <rng:choice>
            <rng:value>whbox</rng:value>
            <rng:value>blbox</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.CURVERENDITION">
        <desc>Renderings of curves</desc>
        <content>
          <rng:choice>
            <rng:value>medium</rng:value>
            <rng:value>wide</rng:value>
            <rng:value>dashed</rng:value>
            <rng:value>dotted</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.DURATION">
        <desc>Logical, that is, written, duration attribute values for the CMN
          repertoire. Whole note duration = '1'.</desc>
        <content>
          <rng:choice>
            <rng:value>long</rng:value>
            <rng:value>breve</rng:value>
            <rng:value>1</rng:value>
            <rng:value>2</rng:value>
            <rng:value>4</rng:value>
            <rng:value>8</rng:value>
            <rng:value>16</rng:value>
            <rng:value>32</rng:value>
            <rng:value>64</rng:value>
            <rng:value>128</rng:value>
            <rng:value>256</rng:value>
            <rng:value>512</rng:value>
            <rng:value>1024</rng:value>
            <rng:value>2048</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.ENCLOSURE">
        <desc>Enclosures for editorial notes and accidentals</desc>
        <content>
          <rng:choice>
            <rng:value>paren</rng:value>
            <rng:value>brack</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FONTFAMILY">
        <desc>Font family (for text) attribute values. Mup-acceptable values:
          avantgarde, bookman, courier, helvetica, newcentury, palatino,
          times.</desc>
        <content>
          <rng:data type="token"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FONTNAME">
        <desc>Font name (for text) attribute values. Mup-acceptable values: rom,
          ital, bold, boldital</desc>
        <content>
          <rng:data type="token"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FONTSTYLE">
        <desc>Font style (for text) attribute values. 'normal' = 'rom' in
          Mup.</desc>
        <content>
          <rng:choice>
            <rng:value>ital</rng:value>
            <rng:value>normal</rng:value>
            <rng:value>oblique</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FONTWEIGHT">
        <desc>Font weight (for text) attribute values</desc>
        <content>
          <rng:choice>
            <rng:value>bold</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.FRETNUMBER">
        <desc>In string tablature, the fret number, i.e., [1-9]. The value 'o'
          may be used instead of a numerica value to indicate the open
          string.</desc>
        <content>
          <rng:choice>
            <rng:data type="nonNegativeInteger">
              <rng:param name="minInclusive">1</rng:param>
              <rng:param name="maxInclusive">9</rng:param>
            </rng:data>
            <rng:data type="token">
              <rng:param name="pattern">o</rng:param>
            </rng:data>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.GLISSANDO">
        <desc>Analytical glissando attribute values: i(nitial), m(edial),
          t(erminal)</desc>
        <content>
          <rng:choice>
            <rng:value>i</rng:value>
            <rng:value>m</rng:value>
            <rng:value>t</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.GRACE">
        <desc>Do grace notes get time from the current (acc) or previous (unacc)
          one?</desc>
        <content>
          <rng:choice>
            <rng:value>acc</rng:value>
            <rng:value>unacc</rng:value>
            <rng:value>unknown</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.HEADSHAPE">
        <desc>Notehead shapes</desc>
        <content>
          <rng:choice>
            <rng:value>quarter</rng:value>
            <rng:value>half</rng:value>
            <rng:value>whole</rng:value>
            <rng:value>dblwhole</rng:value>
            <rng:value>filldiamond</rng:value>
            <rng:value>diamond</rng:value>
            <rng:value>dwdiamond</rng:value>
            <rng:value>fillisotriangle</rng:value>
            <rng:value>isotriangle</rng:value>
            <rng:value>dwhisotriangle</rng:value>
            <rng:value>fillpiewedge</rng:value>
            <rng:value>piewedge</rng:value>
            <rng:value>dwhpiewedge</rng:value>
            <rng:value>fillrectangle</rng:value>
            <rng:value>rectangle</rng:value>
            <rng:value>dwhrectangle</rng:value>
            <rng:value>fillrtriangle</rng:value>
            <rng:value>rtriangle</rng:value>
            <rng:value>dwrtriangle</rng:value>
            <rng:value>fillurtriangle</rng:value>
            <rng:value>urtriangle</rng:value>
            <rng:value>dwurtriangle</rng:value>
            <rng:value>fillsemicircle</rng:value>
            <rng:value>semicircle</rng:value>
            <rng:value>dwsemicircle</rng:value>
            <rng:value>fillslash</rng:value>
            <rng:value>slash</rng:value>
            <rng:value>dwslash</rng:value>
            <rng:value>x</rng:value>
            <rng:value>blank</rng:value>
            <rng:value>circlex</rng:value>
            <rng:value>cross</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.INEUMENAME">
        <desc>Interrupted neume, i.e. neume written as 2 or more
          sub-neumes</desc>
        <content>
          <rng:choice>
            <rng:value>pessubpunctis</rng:value>
            <rng:value>climacus</rng:value>
            <rng:value>scandicus</rng:value>
            <rng:value>bistropha</rng:value>
            <rng:value>tristropha</rng:value>
            <rng:value>pressusminor</rng:value>
            <rng:value>pressusmaior</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.INEUMEFORM">
        <desc>Interrupted neume forms</desc>
        <content>
          <rng:choice>
            <rng:value>liquescent1</rng:value>
            <rng:value>liquescent2</rng:value>
            <rng:value>tied</rng:value>
            <rng:value>tiedliquescent1</rng:value>
            <rng:value>tiedliquescent2</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.KEYSIGTOKEN">
        <desc>A token describing the pitch name, inflection, and octave number
          of an altered pitch in a key signature.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern"
              >[a-g][s|f|ss|x|ff|n|nf|ns|su|sd|fu|fd|nu|nd][0-9]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.KEYSIGNATURE">
        <desc>Key signature may be indicated by a value showing where the key is
          in the circle of fifths. Mixed key signatures, e.g. those consisting
          of a mixture of flats and sharps, and key signatures with unorthodox
          placement of the accidentals (Read, p. 143) must be indicated by
          setting the key.sig attribute to 'mixed' and providing explicit keysig
          info in the key.sig.mixed attribute.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">mixed|0|[1-7][f|s]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.LAYERSCHEME">
        <desc>Indicates how stems should be drawn when more than one layer is
          present and stem directions are not indicated on the notes/chords
          themselves. '1' indicates that there is only a single layer on a
          staff. '2o' means there are two layers with opposing stems. '2f'
          indicates two 'free' layers; that is, opposing stems will be drawn
          unless one of the layers has 'space'. In that case, stem direction in
          the remaining layer will be determined as if there were only one
          layer. '3o' and '3f' are analogous to '2o' and '2f' with three layers
          allowed. What about more than 3 layers?</desc>
        <content>
          <rng:choice>
            <rng:value>1</rng:value>
            <rng:value>2o</rng:value>
            <rng:value>2f</rng:value>
            <rng:value>3o</rng:value>
            <rng:value>3f</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.LIGATUREFORM">
        <desc>Ligature forms</desc>
        <content>
          <rng:choice>
            <rng:value>recta</rng:value>
            <rng:value>obliqua</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.LINERENDITION">
        <desc>Renderings of lines</desc>
        <content>
          <rng:choice>
            <rng:value>narrow</rng:value>
            <rng:value>medium</rng:value>
            <rng:value>wide</rng:value>
            <rng:value>dashed</rng:value>
            <rng:value>dotted</rng:value>
            <rng:value>wavy</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MENSURATIONSIGN">
        <desc>Mensuration attribute values</desc>
        <content>
          <rng:choice>
            <rng:value>C</rng:value>
            <rng:value>O</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.METERSIGN">
        <desc>Meter.sym attribute values for CMN notation</desc>
        <content>
          <rng:choice>
            <rng:value>common</rng:value>
            <rng:value>cut</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MIDICHANNEL">
        <desc>MIDI channel numbers</desc>
        <content>
          <rng:data type="positiveInteger">
            <rng:param name="maxInclusive">16</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MIDIVALUE">
        <desc>MIDI values are in the following range</desc>
        <content>
          <rng:data type="nonNegativeInteger">
            <rng:param name="maxInclusive">127</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MODE">
        <desc>Modes</desc>
        <content>
          <rng:choice>
            <rng:value>major</rng:value>
            <rng:value>minor</rng:value>
            <rng:value>dorian</rng:value>
            <rng:value>phrygian</rng:value>
            <rng:value>lydian</rng:value>
            <rng:value>mixolydian</rng:value>
            <rng:value>aeolian</rng:value>
            <rng:value>locrian</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.MUSICFONT">
        <desc>Music font family</desc>
        <content>
          <rng:data type="token"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.OCTAVE">
        <desc>Oct attribute values. The default values conform to Acoustical
          Society of America representation. Read, p. 44.</desc>
        <content>
          <rng:data type="nonNegativeInteger">
            <rng:param name="maxInclusive">9</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PGSCALE">
        <desc>Page scale factor. Page.scale may be expressed as a percentage of
          a programmatically-determined "usual" size or as a ratio of virtual
          units to real-world units.</desc>
        <content>
          <rng:choice>
            <rng:ref name="data.PERCENT"/>
            <rng:ref name="data.RATIO"/>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PGUNITS">
        <desc>Values for real-world unit attributes</desc>
        <content>
          <rng:choice>
            <rng:value>in</rng:value>
            <rng:value>cm</rng:value>
            <rng:value>mm</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PITCHCLASS">
        <desc>Pclass (pitch class) attribute values</desc>
        <content>
          <rng:data type="nonNegativeInteger">
            <rng:param name="maxInclusive">11</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PITCHNAME">
        <desc>The pitch names (gamut) used within a single octave. The default
          values conform to Acoustical Society of America representation.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[a-g]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PITCHNAME.GES">
        <desc>Gestural pitch names need an additional value for when the notated
          pitch is not to be sounded.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[a-g]|none</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PITCHNUMBER">
        <desc>Pnum (pitch number, e.g. MIDI) attribute values</desc>
        <content>
          <rng:data type="nonNegativeInteger"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PLIST">
        <desc>Participant list referencing method.</desc>
        <content>
          <rng:data type="IDREFS"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.PLACE">
        <desc>Location of symbol relative to other notational components.</desc>
        <content>
          <rng:choice>
            <rng:value>above</rng:value>
            <rng:value>below</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.OTHERSTAFF">
        <desc>For musical material designated to appear on another staff, the
          location of the staff relative to the current one; i.e., the staff
          above or the staff below.</desc>
        <content>
          <rng:choice>
            <rng:value>above</rng:value>
            <rng:value>below</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STAFFREL">
        <desc>Location of musical material relative to a staff.</desc>
        <content>
          <rng:choice>
            <rng:value>above</rng:value>
            <rng:value>below</rng:value>
            <rng:value>within</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.SIZE">
        <desc>Relative size attribute values</desc>
        <content>
          <rng:choice>
            <rng:value>normal</rng:value>
            <rng:value>cue</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.SLUR">
        <desc>i=initial, m=medial, t=terminal. Number is used to match endpoints
          of the slur when slurs are nested or overlap, e.g. &lt;note slur='i1
          i2'/&gt;&lt;note slur='t1'/&gt;&lt;note slur='t2'/&gt; encodes the
          fact that two slurs begin on note 1, one which terminates on note 2
          and one which terminates on note 3.</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[i|m|t][1-6]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.SLURS">
        <desc>One or more from the list given in the definition of
          data.SLUR.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.SLUR"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.SLURDIRECTION">
        <desc>Slur direction</desc>
        <content>
          <rng:choice>
            <rng:value>up</rng:value>
            <rng:value>down</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STAFFLOC">
        <desc>Staff location. Staff location includes staff lines, spaces, and
          the spaces directly above and below the staff. The value ranges
          between 0 (just below the staff) to 2 * number of staff lines
          (directly above the staff). For example, on a 5-line staff the lines
          would be numbered 1,3,5,7, and 9 while the spaces would be numbered
          0,2,4,6,8,10.</desc>
        <content>
          <rng:data type="nonNegativeInteger"/>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STEMDIRECTION">
        <desc>Stem direction</desc>
        <content>
          <rng:choice>
            <rng:value>up</rng:value>
            <rng:value>down</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STEMMODIFIER">
        <desc>Stem modification</desc>
        <content>
          <rng:choice>
            <rng:value>1slash</rng:value>
            <rng:value>2slash</rng:value>
            <rng:value>3slash</rng:value>
            <rng:value>4slash</rng:value>
            <rng:value>5slash</rng:value>
            <rng:value>6slash</rng:value>
            <rng:value>sprech</rng:value>
            <rng:value>z</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.STEMPOSITION">
        <desc>Which side of stem?</desc>
        <content>
          <rng:choice>
            <rng:value>left</rng:value>
            <rng:value>right</rng:value>
            <rng:value>center</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TEMPERAMENT">
        <desc>Temperament</desc>
        <content>
          <rng:choice>
            <rng:value>equal</rng:value>
            <rng:value>just</rng:value>
            <rng:value>mean</rng:value>
            <rng:value>pythagorean</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TEXTRENDITION">
        <desc>Text rendition values</desc>
        <content>
          <rng:choice>
            <rng:value>box</rng:value>
            <rng:value>circle</rng:value>
            <rng:value>dblunderline</rng:value>
            <rng:value>none</rng:value>
            <rng:value>quote</rng:value>
            <rng:value>bslash</rng:value>
            <rng:value>fslash</rng:value>
            <rng:value>smcaps</rng:value>
            <rng:value>strike</rng:value>
            <rng:value>sub</rng:value>
            <rng:value>sup</rng:value>
            <rng:value>underline</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TIE">
        <desc>Tie attribute values: initial, medial, terminal</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[i|m|t]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TIEDIRECTION">
        <desc>Tie direction</desc>
        <content>
          <rng:choice>
            <rng:value>up</rng:value>
            <rng:value>down</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TIES">
        <desc>One or more from the list given in the definition of
          data.TIE.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.TIE"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TUPLET">
        <desc>Tuplet attribute values: initial, medial, terminal</desc>
        <content>
          <rng:data type="token">
            <rng:param name="pattern">[i|m|t][1-6]</rng:param>
          </rng:data>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.TUPLETS">
        <desc>One or more from the list given in the definition of
          data.TUPLET.</desc>
        <content>
          <rng:list>
            <rng:oneOrMore>
              <rng:ref name="data.TUPLET"/>
            </rng:oneOrMore>
          </rng:list>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.UNEUMENAME">
        <desc>Basic, i.e., single, uninterrupted, neume names</desc>
        <content>
          <rng:choice>
            <rng:value>punctum</rng:value>
            <rng:value>virga</rng:value>
            <rng:value>pes</rng:value>
            <rng:value>clivis</rng:value>
            <rng:value>torculus</rng:value>
            <rng:value>torculusresupinus</rng:value>
            <rng:value>porrectus</rng:value>
            <rng:value>porrectusflexus</rng:value>
            <rng:value>apostropha</rng:value>
            <rng:value>oriscus</rng:value>
            <rng:value>pressusmaior</rng:value>
            <rng:value>pressusminor</rng:value>
            <rng:value>virgastrata</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.UNEUMEFORM">
        <desc>Basic, i.e., single, uninterrupted, neume forms</desc>
        <content>
          <rng:choice>
            <rng:value>liquescent1</rng:value>
            <rng:value>liquescent2</rng:value>
            <rng:value>liquescent3</rng:value>
            <rng:value>quilismatic</rng:value>
            <rng:value>rectangular</rng:value>
            <rng:value>rhombic</rng:value>
            <rng:value>tied</rng:value>
          </rng:choice>
        </content>
      </macroSpec>
      <macroSpec module="mei" type="dt" ident="data.INTERLINE">
        <desc>Distance expressed in terms of staff interline distance; that is,
          units of 1/2 the distance between adjacent staves.</desc>
        <content>
          <rng:data type="decimal"/>
        </content>
      </macroSpec>
      <!--****-->
      <!--Attribute Classes-->
      <!--****-->
      <classSpec type="atts" module="MEI.shared" ident="att.accidental">
        <desc>Attributes for capturing momentary pitch inflection</desc>
        <attList>
          <attDef ident="accid" usage="opt">
            <desc>captures a written accidental.</desc>
            <datatype>
              <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared"
        ident="att.accidental.performed">
        <desc>Attributes for capturing momentary pitch inflection in the
          gestural domain</desc>
        <attList>
          <attDef ident="accid.ges" usage="opt">
            <desc>records the performed pitch inflection when it differs from
              the written accidental.</desc>
            <datatype>
              <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.altsym">
        <desc>Attributes supplying pointers to user-defined symbols</desc>
        <attList>
          <attDef ident="altsym" usage="opt">
            <desc>provides a way of pointing to a user-defined symbol. It must
              contain an ID of a &lt;symboldef&gt; element elsewhere in the
              document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.articulation">
        <desc>Attributes for capturing the written signs that describe the
          method of performance</desc>
        <attList>
          <attDef ident="artic" usage="opt">
            <desc>encodes the written articulation(s). Articulations are
              normally encoded in order from the notehead outward; that is, away
              from the stem. See additional notes at att.vis.note. Only
              articulations should be encoded in the artic attribute; fingerings
              should be encoded using the &lt;dir&gt; element.</desc>
            <datatype>
              <rng:ref name="data.ARTICULATIONS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared"
        ident="att.articulation.performed">
        <desc>Attributes describing the method of performance</desc>
        <attList>
          <attDef ident="artic.ges" usage="opt">
            <desc>records performed articulation that differs from the written
              value.</desc>
            <datatype>
              <rng:ref name="data.ARTICULATIONS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.augmentdots">
        <desc>Attributes that record the number of dots of augmentation</desc>
        <attList>
          <attDef ident="dots" usage="opt">
            <desc>records the number of augmentation dots required by a dotted
              duration.</desc>
            <datatype>
              <rng:ref name="data.AUGMENTDOT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.authorized">
        <desc>Attributes that describe the source of an controlled value</desc>
        <attList>
          <attDef ident="authority" usage="opt">
            <desc>a name or label associated with the controlled vocabulary from
              which the value is taken.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.barplacement">
        <desc>Attributes that capture the placement of barlines</desc>
        <attList>
          <attDef ident="barplace" usage="opt">
            <desc>records the location of a barline.</desc>
            <datatype>
              <rng:ref name="data.BARPLACE"/>
            </datatype>
          </attDef>
          <attDef ident="taktplace" usage="opt">
            <desc>If takt barlines are to be used, then the taktplace attribute
              may be used to denote the staff location of the shortened barline.
              The location may include staff lines, spaces, and the spaces
              directly above and below the staff. The value ranges between 0
              (just below the staff) to 2 * number of staff lines (directly
              above the staff). For example, on a 5-line staff the lines would
              be numbered 1,3,5,7, and 9 while the spaces would be numbered
              0,2,4,6,8,10. For example, a value of '9' puts the barline through
              the top line of a 5-line staff.</desc>
            <datatype>
              <rng:ref name="data.STAFFLOC"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.beaming.vis">
        <desc>Used by layerdef, staffdef, and scoredef to provide default values
          for attributes in the visual domain related to beaming</desc>
        <attList>
          <attDef ident="beam.rend" usage="opt">
            <desc>encodes whether a beam is feathered and in which
              direction.</desc>
            <valList type="closed">
              <valItem ident="acc"/>
              <valItem ident="rit"/>
              <valItem ident="norm"/>
            </valList>
          </attDef>
          <attDef ident="beam.slope" usage="opt">
            <desc>captures beam slope.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.bibl">
        <desc>Bibliographic attributes</desc>
        <attList>
          <attDef ident="analog" usage="opt">
            <desc>contains a reference to a field or element in another
              descriptive encoding system to which this MEI element is
              comparable. Mapping elements from one system to another may help a
              repository harvest selected data from the MEI file to build a
              basic catalog record. The encoding system from which fields are
              taken must be specified. When possible, subfields as well as
              fields should be specified, e.g., subfields within MARC
              fields.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.calendared">
        <desc>Attributes that indicate the calendar system of a date datable
          element.</desc>
        <attList>
          <attDef ident="calendar" usage="opt">
            <desc>indicates the calendar system to which a date belongs, for
              example, Gregorian, Julian, Roman, Mosaic, Revolutionary, Islamic,
              etc.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.cleffing.log">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the logical domain related to clefs</desc>
        <attList>
          <attDef ident="clef.shape" usage="opt">
            <desc>encodes a value for the clef symbol.</desc>
            <datatype>
              <rng:ref name="data.CLEFSHAPE"/>
            </datatype>
          </attDef>
          <attDef ident="clef.line" usage="opt">
            <desc>contains a default value for the position of the clef.</desc>
            <datatype>
              <rng:ref name="data.CLEFLINE"/>
            </datatype>
          </attDef>
          <attDef ident="clef.dis" usage="opt">
            <desc>records the amount of octave displacement to be applied to the
              clef.</desc>
            <datatype>
              <rng:ref name="data.OCTAVE.DIS"/>
            </datatype>
          </attDef>
          <attDef ident="clef.dis.place" usage="opt">
            <desc>records the direction of octave displacement to be applied to
              the clef.</desc>
            <datatype>
              <rng:ref name="data.PLACE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.cleffing.vis">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the visual domain related to clefs</desc>
        <attList>
          <attDef ident="clef.color" usage="opt">
            <desc>describes the color of the clef.</desc>
            <datatype>
              <rng:ref name="data.COLOR"/>
            </datatype>
          </attDef>
          <attDef ident="clef.visible" usage="opt">
            <desc>determines whether the clef is to be displayed.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clefshape">
        <desc>Attributes that record the shape of a clef</desc>
        <attList>
          <attDef ident="shape" usage="opt">
            <desc>describes a clef's shape.</desc>
            <datatype>
              <rng:ref name="data.CLEFSHAPE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.color">
        <desc>Visual color attributes</desc>
        <attList>
          <attDef ident="color" usage="opt">
            <desc>used to indicate visual appearance. Do not confuse this with
              the musical term 'color' as used in pre-CMN notation.</desc>
            <datatype>
              <rng:ref name="data.COLOR"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.coloration">
        <desc>Indication of coloration</desc>
        <attList>
          <attDef ident="colored" usage="opt">
            <desc>indicates this feature is 'colored'; that is, it is a
              participant in a change in rhythmic values. In mensural notation,
              coloration is indicated by colored notes (red, black, etc.) where
              void notes would otherwise occur. In CMN notation, coloration is
              indicated by an inverse color; that is, the notehead is void when
              it would otherwise be filled and vice versa.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.common">
        <desc>Common attributes</desc>
        <attList>
          <attDef ident="xml:id" usage="opt">
            <desc>regularizes the naming of an element and thus facilitates
              building links between it and other resources. Each id attribute
              within a document must have a unique value.</desc>
            <datatype>
              <rng:data type="ID"/>
            </datatype>
          </attDef>
          <attDef ident="n" usage="opt">
            <desc>provides a label (name or number) for an element. While its
              value need not be unique, it is required to be a single
              token.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.controlevent">
        <desc>Attributes shared by events which rely on other events for their
          existence. For example, a slur/phrase marking must be drawn between or
          over a group of notes. The slur is therefore a control event.</desc>
        <classes>
          <memberOf key="att.participantident"/>
          <memberOf key="att.timestamp.musical"/>
          <memberOf key="att.timestamp.performed"/>
          <memberOf key="att.staffident.required"/>
        </classes>
        <attList>
          <attDef ident="layer" usage="opt">
            <desc>identifies the layer to which a feature applies.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.coordinated">
        <desc>This attribute class records the position of a feature within a
          two-dimensional coordinate system.</desc>
        <attList>
          <attDef ident="ulx" usage="opt">
            <desc>indicates the upper-left corner x coordinate.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger"/>
            </datatype>
          </attDef>
          <attDef ident="uly" usage="opt">
            <desc>indicates the upper-left corner y coordinate.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger"/>
            </datatype>
          </attDef>
          <attDef ident="lrx" usage="opt">
            <desc>indicates the lower-right corner x coordinate.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger"/>
            </datatype>
          </attDef>
          <attDef ident="lry" usage="opt">
            <desc>indicates the lower-left corner x coordinate.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.curvature">
        <desc>Attributes that describe curvature</desc>
        <attList>
          <attDef ident="bezier" usage="opt">
            <desc>records the placement of Bezier control points as a series of
              space-separated xy coordinates, eg. 19 45 -32 118.</desc>
          </attDef>
          <attDef ident="bulge" usage="opt">
            <desc>describes a curve as a set of distance values above or below
              an imaginary line connecting the endpoints of the curve. The bulge
              attribute must contain one or more decimal values expressed in
              inter-line units.</desc>
          </attDef>
          <attDef ident="curvedir" usage="opt">
            <desc>describes a curve with a generic term indicating whether the
              curve bows upward or downward. Upward curves go above the items
              they cover, while downward curves go under them.</desc>
            <valList type="closed">
              <valItem ident="above"/>
              <valItem ident="below"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.curverend">
        <desc>Attributes that record the visual rendition of curves</desc>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>describes the line style of the curve.</desc>
            <datatype>
              <rng:ref name="data.CURVERENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.datable">
        <desc>Attributes common to dates</desc>
        <attList>
          <attDef ident="enddate" usage="opt">
            <desc>contains the end point of a date range.</desc>
            <datatype>
              <rng:ref name="data.ISODATE"/>
            </datatype>
          </attDef>
          <attDef ident="notafter" usage="opt">
            <desc>contains an upper boundary for an uncertain date.</desc>
            <datatype>
              <rng:ref name="data.ISODATE"/>
            </datatype>
          </attDef>
          <attDef ident="notbefore" usage="opt">
            <desc>contains a lower boundary for an uncertain date.</desc>
            <datatype>
              <rng:ref name="data.ISODATE"/>
            </datatype>
          </attDef>
          <attDef ident="reg" usage="opt">
            <datatype>
              <rng:ref name="data.ISODATE"/>
            </datatype>
          </attDef>
          <attDef ident="startdate" usage="opt">
            <desc>contains the starting point of a date range.</desc>
            <datatype>
              <rng:ref name="data.ISODATE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.datapointing">
        <desc>Attributes for linking metadata to data</desc>
        <attList>
          <attDef ident="data" usage="opt">
            <desc>used to link metadata elements to one or more data-containing
              elements.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.distances">
        <desc>Attributes that describe distance from the staff</desc>
        <attList>
          <attDef ident="dynam.dist" usage="opt">
            <desc>records the distance from the staff for dynamic marks in 1/2
              inter-line units.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="harm.dist" usage="opt">
            <desc>records the default distance from the staff of harmonic
              indications, such as guitar chord grids or functional
              labels.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="text.dist" usage="opt">
            <desc>determines how far from the staff to render text
              elements.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.duration.default">
        <desc>Attributes that provide a durational default value</desc>
        <attList>
          <attDef ident="dur.default" usage="opt">
            <desc>contains a default duration in those situations when the first
              note, rest, chord, etc. in a measure does not have a duration
              specified.</desc>
            <datatype>
              <rng:ref name="data.DURATION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.duration.musical">
        <desc>Attributes that express duration in musical terms</desc>
        <attList>
          <attDef ident="dur" usage="opt">
            <desc>records the duration of a feature using the relative
              durational values provided by the data.DURATION datatype.</desc>
            <datatype>
              <rng:ref name="data.DURATION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.duration.performed">
        <desc>Attributes that record performed duration that differs from a
          feature's written duration.</desc>
        <attList>
          <attDef ident="dur.ges" usage="opt">
            <desc>records performed duration information that differs from
              written duration. Its value may be expressed in any convenient
              form, such as measures[s]+ beat[s].beatpart, ppq (MIDI clicks),
              Humdrum **recip values, or MusicXML 'divisions', etc.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.duration.ratio">
        <desc>Attributes that describe duration as a ratio</desc>
        <attList>
          <attDef ident="num" usage="opt">
            <desc>along with numbase, describes duration as a ratio. num is the
              first value in the ratio, while numbase is the second.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="numbase" usage="opt">
            <desc>along with num, describes duration as a ratio. num is the
              first value in the ratio, while numbase is the second.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.duration.timestamp">
        <desc>Attributes that express duration as a timestamp for the ending
          point</desc>
        <attList>
          <attDef ident="dur" usage="opt">
            <desc>records the duration of a feature using the relative
              durational values provided by the data.MEASUREBEAT
              datatype.</desc>
            <datatype>
              <rng:ref name="data.MEASUREBEAT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.enclosingchars">
        <desc>Attributes that capture characters used to enclose symbols having
          a cautionary or editorial function</desc>
        <attList>
          <attDef ident="enclose" usage="opt">
            <desc>records the characters often used to mark accidentals,
              articulations, and sometimes notes as having a cautionary or
              editorial function. For an example of cautionary accidentals
              enclosed in parentheses, see Read, p. 131, ex. 9-14.</desc>
            <datatype>
              <rng:ref name="data.ENCLOSURE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.event">
        <desc>Attributes that apply to all written events, e.g., beam, beatrpt,
          chord, note, etc.</desc>
        <classes>
          <memberOf key="att.timestamp.musical"/>
          <memberOf key="att.timestamp.performed"/>
          <memberOf key="att.staffident.optional"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.fermatapresent">
        <desc>Attributes indicating the attachment of a fermata to the
          feature</desc>
        <attList>
          <attDef ident="fermata" usage="opt">
            <desc>indicates the attachment of a fermata to this element. If
              visual information about the fermata needs to be recorded, then a
              &lt;fermata&gt; element should be employed instead.</desc>
            <datatype>
              <rng:ref name="data.STAFFREL"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffgroupingsym">
        <desc>Attributes that describe the symbol used to group a set of
          staves</desc>
        <attList>
          <attDef ident="symbol" usage="opt">
            <desc>specifies the symbol used to group a set of staves.</desc>
            <valList type="closed">
              <valItem ident="brace"/>
              <valItem ident="bracket"/>
              <valItem ident="line"/>
              <valItem ident="none"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.handident">
        <desc>Attributes which identify a document hand</desc>
        <attList>
          <attDef ident="hand" usage="opt">
            <desc>signifies the hand responsible for an action. The value must
              be the ID of a &lt;hand&gt; element declared in the header.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.horizontalalign">
        <desc>Attributes that record horizontal alignment</desc>
        <attList>
          <attDef ident="halign" usage="opt">
            <desc>records horizontal alignment.</desc>
            <valList type="closed">
              <valItem ident="left"/>
              <valItem ident="right"/>
              <valItem ident="center"/>
              <valItem ident="justify"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.instrumentident">
        <desc>Attributes which identify a MIDI instrument</desc>
        <attList>
          <attDef ident="instr" usage="opt">
            <desc>provides a way of pointing to a MIDI instrument definition. It
              must contain the ID of an &lt;instrdef&gt; element elsewhere in
              the document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.internetmedia">
        <desc/>
        <attList>
          <attDef ident="mimetype" usage="opt">
            <desc>specifies the applicable MIME (multimedia internet mail
              extension) type. The value should be a valid MIME media type
              defined by the Internet Engineering Task Force in RFC 2046.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.joined">
        <desc>Attributes indicating that elements are semantically linked; that
          is, while the parts are encoded separately, together they may be
          thought of as a single intellectual object</desc>
        <attList>
          <attDef ident="join" usage="opt">
            <desc>used for linking visually separate slurs, sometimes necessary
              due to system breaks, that form a single musical phrase. Also used
              to indicate a measure which metrically completes the current one.
              Record the IDs of the separately encoded components, excluding
              this one.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.keysigs.log">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the logical domain related to key signatures</desc>
        <attList>
          <attDef ident="key.accid" usage="opt">
            <desc>contains an accidental for the tonic key, if one is required,
              e.g., if key.pname equals 'c' and key.accid equals 's', then a
              tonic of C# is indicated.</desc>
            <datatype>
              <rng:ref name="data.ACCIDENTAL.IMPLICIT"/>
            </datatype>
          </attDef>
          <attDef ident="key.mode" usage="opt">
            <desc>indicates major, minor, or other tonality.</desc>
            <datatype>
              <rng:ref name="data.MODE"/>
            </datatype>
          </attDef>
          <attDef ident="key.pname" usage="opt">
            <desc>holds the pitch name of the tonic key, e.g. 'c' for the key of
              C.</desc>
            <datatype>
              <rng:ref name="data.PITCHNAME"/>
            </datatype>
          </attDef>
          <attDef ident="key.sig" usage="opt">
            <desc>indicates where the key lies in the circle of fifths.</desc>
            <datatype>
              <rng:ref name="data.KEYSIGNATURE"/>
            </datatype>
          </attDef>
          <attDef ident="key.sig.mixed" usage="opt">
            <desc>Mixed key signatures, e.g. those consisting of a mixture of
              flats and sharps (Read, p. 143, ex. 9-39), and key signatures with
              unorthodox placement of the accidentals (Read, p. 141) must be
              indicated by setting the key.sig attribute to 'mixed' and
              providing explicit keysig info in the key.sig.mixed attribute or
              in the &lt;keysig&gt; element. It is intended that key.sig.mixed
              contain a series of tokens with each token containing pitch name,
              accidental, and octave, such as 'A4 Cs5 Ef5' that indicate what
              key accidentals should be rendered and where they should be
              placed.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.keysigs.vis">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the visual domain related to key signatures</desc>
        <attList>
          <attDef ident="key.sig.show" usage="opt">
            <desc>indicates whether the key signature should be
              displayed.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="key.sig.showchange" usage="opt">
            <desc>determines whether cautionary accidentals should be displayed
              at a key change.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.labels">
        <desc>Attributes that record display labels for a feature</desc>
        <attList>
          <attDef ident="label.abbr" usage="opt">
            <desc>provides a label for a group of staves on pages after the
              first page. Usually, this label takes an abbreviated form.</desc>
          </attDef>
          <attDef ident="label.full" usage="opt">
            <desc>provides a label for a group of staves on the first page;
              label.abbr is used thereafter.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.lang">
        <desc>Language attributes common to text elements</desc>
        <attList>
          <attDef ident="xml:lang" usage="opt">
            <desc>identifies the language of the element's content. The values
              for this attribute are language 'tags' as defined in BCP 47. All
              language tags that make use of private use subtags must be
              documented in a corresponding language element in the MEI header
              whose id attribute is the same as the language tag's value.</desc>
            <datatype>
              <rng:data type="language"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layerident">
        <desc>Attributes that identify the layer to which a feature
          applies</desc>
        <attList>
          <attDef ident="layer" usage="opt">
            <desc>identifies the layer to which a feature applies.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.lineloc">
        <desc>Attributes for identifying the staff line with which a feature is
          associated</desc>
        <attList>
          <attDef ident="line" usage="opt">
            <desc>indicates the line upon which a feature stands. The value must
              be in the range between 1 and the number of lines on the
              staff.</desc>
            <datatype>
              <rng:ref name="data.CLEFLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.linerend">
        <desc>Attributes that record the visual rendition of lines</desc>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>records the appearance of a line.</desc>
            <datatype>
              <rng:ref name="data.LINERENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.link.common">
        <desc>Attributes common to all linking elements</desc>
        <attList>
          <attDef ns="http://www.w3.org/1999/xlink" ident="actuate" usage="opt">
            <desc>defines whether a link occurs automatically or must be
              requested by the user. It is used in conjunction with the show
              attribute to determine link behavior.</desc>
            <valList type="closed">
              <valItem ident="onLoad"/>
              <valItem ident="onRequest"/>
              <valItem ident="other"/>
              <valItem ident="none"/>
            </valList>
          </attDef>
          <attDef ns="http://www.w3.org/1999/xlink" ident="role" usage="opt">
            <desc>indicates a property of the entire link. The value of the role
              attribute must be a URI reference as defined in [IETF RFC 2396],
              except that if the URI scheme used is allowed to have absolute and
              relative forms, the URI portion must be absolute. The URI
              reference identifies some resource that describes the intended
              property. When no value is supplied, no particular role value is
              to be inferred.</desc>
            <datatype>
              <rng:data type="anyURI"/>
            </datatype>
          </attDef>
          <attDef ns="http://www.w3.org/1999/xlink" ident="show" usage="opt">
            <desc>defines whether a remote resource that is the target of a link
              appears at the point of the link, replaces the existing link, or
              appears in a new window.</desc>
            <valList type="closed">
              <valItem ident="new"/>
              <valItem ident="replace"/>
              <valItem ident="other"/>
              <valItem ident="none"/>
            </valList>
          </attDef>
          <attDef ident="targettype" usage="opt">
            <desc>in contrast with the role attribute, allows the target
              resource to be characterized using any convenient classification
              scheme or typology.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
          <attDef ns="http://www.w3.org/1999/xlink" ident="title" usage="opt">
            <desc>contains a human-readable description of the entire link. A
              value is optional; if a value is supplied, it should contain a
              string that describes the resource. The use of this information is
              highly dependent on the type of processing being done. It may be
              used, for example, to make titles available to applications used
              by visually impaired users, or to create a table of links, or to
              present help text that appears when a user lets a mouse pointer
              hover over a starting resource.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.link.external">
        <desc>Linking attributes for external referencing elements</desc>
        <attList>
          <attDef ident="entityref" usage="opt">
            <desc>uses a previously-declared entity to identify an external
              electronic object.</desc>
            <datatype>
              <rng:data type="ENTITY"/>
            </datatype>
          </attDef>
          <attDef ns="http://www.w3.org/1999/xlink" ident="href" usage="opt">
            <desc>allows the use of an previously-undeclared URI to identify an
              external electronic object.</desc>
            <datatype>
              <rng:ref name="data.URI"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.link.internal">
        <desc>Linking attributes for internal referencing elements</desc>
        <classes>
          <memberOf key="att.participantident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.lyricstyle">
        <desc>Attributes that describe default typography of lyrics</desc>
        <attList>
          <attDef ident="lyric.align" usage="opt">
            <desc>describes the alignment of lyric syllables associated with a
              note or chord.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="lyric.fam" usage="opt">
            <desc>sets the font family default value for lyrics.</desc>
            <datatype>
              <rng:ref name="data.FONTFAMILY"/>
            </datatype>
          </attDef>
          <attDef ident="lyric.name" usage="opt">
            <desc>sets the font name default value for lyrics.</desc>
            <datatype>
              <rng:ref name="data.FONTNAME"/>
            </datatype>
          </attDef>
          <attDef ident="lyric.size" usage="opt">
            <desc>sets the default font size value for lyrics.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="lyric.style" usage="opt">
            <desc>sets the default font style value for lyrics.</desc>
            <datatype>
              <rng:ref name="data.FONTSTYLE"/>
            </datatype>
          </attDef>
          <attDef ident="lyric.weight" usage="opt">
            <desc>sets the default font weight value for lyrics.</desc>
            <datatype>
              <rng:ref name="data.FONTWEIGHT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.measurement">
        <desc>Attributes that record the unit of measurement in which a value is
          expressed</desc>
        <attList>
          <attDef ident="unit" usage="opt">
            <desc>indicates the units used for a measurement, usually using the
              standard symbol for the desired unit.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.width">
        <desc>Attributes that describe horizontal dimensions</desc>
        <attList>
          <attDef ident="width" usage="opt">
            <desc>measurement of the horizontal dimension of an entity. This
              value can only be interpreted meaningfully in combination with the
              units attribute. The width attribute may be used to capture
              measure width data for interchange with music printing systems
              that utilize this information for printing. On &lt;barline&gt; the
              width attribute captures the width of the preceding
              measure.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.medium">
        <desc>Attributes describing a writing medium, such as pencil or
          ink</desc>
        <attList>
          <attDef ident="medium" usage="opt">
            <desc>describes the writing medium.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.meiversion">
        <desc>Attributes that record the version of MEI in use</desc>
        <attList>
          <attDef ident="meiversion" usage="opt">
            <desc>records the version of MEI used by the file.</desc>
            <defaultVal>2010-05</defaultVal>
            <valList type="closed">
              <valItem ident="2010-05"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.meterbar">
        <desc>Attributes indicating the relationship between a measure or
          barline and the prevailing meter</desc>
        <attList>
          <attDef ident="complete" usage="opt">
            <desc>a value of 'c' (complete) indicates a metrically complete
              measure, 'i' (incomplete) indicates a measure with not enough
              beats, while 'o' (overfull) is for measures with too many
              beats.</desc>
            <valList type="closed">
              <valItem ident="c"/>
              <valItem ident="i"/>
              <valItem ident="o"/>
            </valList>
          </attDef>
          <attDef ident="control" usage="opt">
            <desc>indicates whether or not a barline is "controlling"; that is,
              if it indicates a point of alignment across all the parts.
              Barlines within a score are usually controlling; that is, they
              "line up". Barlines within parts may or may not be controlling.
              When applied to &lt;measure&gt;, this attribute indicates the
              nature of the right barline but not the left.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.meters.log">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the logical domain related to meter signature</desc>
        <attList>
          <attDef ident="meter.count" usage="opt">
            <desc>captures the number of beats in a measure, that is, the top
              number of the meter signature.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="meter.unit" usage="opt">
            <desc>contains the number indicating the beat unit, that is, the
              bottom number of the meter signature.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.meters.vis">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the visual domain related to meter signature</desc>
        <attList>
          <attDef ident="meter.rend" usage="opt">
            <desc>contains indication of how the meter signature should be
              rendered.</desc>
            <valList type="closed">
              <valItem ident="denomsym"/>
              <valItem ident="norm"/>
              <valItem ident="invis"/>
            </valList>
          </attDef>
          <attDef ident="meter.showchange" usage="opt">
            <desc>determines whether a new meter signature should be displayed
              when the meter signature changes.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="meter.sym" usage="opt">
            <desc>indicates the use of a meter symbol instead of a numeric meter
              signature, that is, 'C' for common time or 'C' with a slash for
              cut time.</desc>
            <datatype>
              <rng:ref name="data.METERSIGN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.mmtempo">
        <desc>Attributes that record tempo in terms of beats per minute</desc>
        <attList>
          <attDef ident="mm" usage="opt">
            <desc>used to describe tempo in terms of beats (meter signature
              denominator) per minute, ala M.M. (Maezel's Metronome).</desc>
            <datatype>
              <rng:ref name="data.TEMPOVALUE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.multinummeasures">
        <desc>Attributes that indicate programmatic numbering</desc>
        <attList>
          <attDef ident="multi.number" usage="opt">
            <desc>indicates whether programmatically calculated counts of
              multiple measures of rest (mrest) and whole measure repeats (mrpt)
              in parts should be rendered.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.name">
        <desc>Attributes shared by names</desc>
        <classes>
          <memberOf key="att.authorized"/>
        </classes>
        <attList>
          <attDef ident="dbkey" usage="opt">
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
          <attDef ident="nymref" usage="opt">
            <desc>used to record a pointer to the regularized form of the name
              elsewhere in the document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
          <attDef ident="role" usage="opt">
            <desc>used to specify further information about the entity
              referenced by this name, for example, the occupation of a person
              or the status of a place.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.octave">
        <desc>Attributes that record written octave</desc>
        <attList>
          <attDef ident="oct" usage="opt">
            <desc>captures written octave information.</desc>
            <datatype>
              <rng:ref name="data.OCTAVE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.octavedefault">
        <desc>Attributes that record a default value for octave</desc>
        <attList>
          <attDef ident="octave.default" usage="opt">
            <desc>contains a default octave specification for use when the first
              note, rest, chord, etc. in a measure does not have an octave value
              specified.</desc>
            <datatype>
              <rng:ref name="data.OCTAVE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.onelinestaff">
        <desc>Attributes that record placement of notes on a single-line
          staff</desc>
        <attList>
          <attDef ident="ontheline" usage="opt">
            <desc>determines the placement of notes on a 1-line staff. A value
              of 'true' places all notes on the line, while a value of 'false'
              places stems-up notes above the line and stems-down notes below
              the line.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.octavedisplacement">
        <desc>Attributes describing the amount and direction of octave
          displacement</desc>
        <attList>
          <attDef ident="dis" usage="opt">
            <desc>records the amount of octave displacement.</desc>
            <datatype>
              <rng:ref name="data.OCTAVE.DIS"/>
            </datatype>
          </attDef>
          <attDef ident="dis.place" usage="opt">
            <desc>records the direction of octave displacement.</desc>
            <datatype>
              <rng:ref name="data.PLACE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.participantident">
        <desc>Attributes listing the participants in a collection</desc>
        <attList>
          <attDef ident="plist" usage="opt">
            <desc>contains a space separated list of ID references that identify
              logical events that participate in a collection, such as notes
              under a phrase mark.</desc>
            <datatype>
              <rng:ref name="data.PLIST"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pitch">
        <desc>Attributes that record written pitch name</desc>
        <attList>
          <attDef ident="pname" usage="opt">
            <desc>contains a written pitch name.</desc>
            <datatype>
              <rng:ref name="data.PITCHNAME"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pitched">
        <desc>Attributes that record written pitch name and octave number</desc>
        <classes>
          <memberOf key="att.pitch"/>
          <memberOf key="att.octave"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.placement">
        <desc>Attributes capturing placement information</desc>
        <attList>
          <attDef ident="place" usage="opt">
            <desc>captures the placement of the item with respect to the staff
              with which it is associated.</desc>
            <datatype>
              <rng:ref name="data.STAFFREL"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.relativesize">
        <desc>Attributes that record relative size</desc>
        <attList>
          <attDef ident="size" usage="opt">
            <desc>describes the relative size of a feature.</desc>
            <datatype>
              <rng:ref name="data.SIZE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.responsibility">
        <desc>Attributes capturing information regarding responsibility for some
          aspect of the text's creation, transcription, editing, or
          encoding.</desc>
        <attList>
          <attDef ident="resp" usage="opt">
            <desc>captures information regarding responsibility for some aspect
              of the text's creation, transcription, editing, or encoding. Its
              value must point to one or more identifiers declared in the
              document header.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.scalable">
        <desc>Attributes that describe relative size</desc>
        <attList>
          <attDef ident="scale" usage="opt">
            <desc>scale factor to be applied to the feature to make it the
              desired display size.</desc>
            <datatype>
              <rng:ref name="data.PERCENT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.sequence">
        <desc/>
        <attList>
          <attDef ident="seq" usage="opt">
            <desc>used to assign a sequence number related to the order in which
              the encoded features carrying this attribute are believed to have
              occurred.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.slashcount">
        <desc>Attributes for recording the number of slashes that accompany a
          feature</desc>
        <attList>
          <attDef ident="slash" usage="opt">
            <desc>indicates the number of slashes to be rendered along with the
              feature.</desc>
            <datatype>
              <rng:ref name="data.SLASH"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.slurpresent">
        <desc>Attributes for marking the presence of a slur</desc>
        <attList>
          <attDef ident="slur" usage="opt">
            <desc>indicates that this element participates in a slur. If visual
              information about the slur needs to be recorded, then a
              &lt;slur&gt; element should be employed.</desc>
            <datatype>
              <rng:ref name="data.SLURS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffident.required">
        <desc/>
        <attList>
          <attDef ident="staff" usage="req">
            <desc>signifies the staff on which a notated event occurs or to
              which a control event applies.</desc>
            <datatype>
              <rng:list>
                <rng:oneOrMore>
                  <rng:data type="positiveInteger"/>
                </rng:oneOrMore>
              </rng:list>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffident.optional">
        <desc/>
        <attList>
          <attDef ident="staff" usage="opt">
            <desc>signifies the staff on which a notated event occurs or to
              which a control event applies.</desc>
            <datatype>
              <rng:list>
                <rng:oneOrMore>
                  <rng:data type="positiveInteger"/>
                </rng:oneOrMore>
              </rng:list>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffloc">
        <desc>Attributes that identify location on a staff in terms of lines and
          spaces</desc>
        <attList>
          <attDef ident="loc" usage="opt">
            <desc>holds the staff location of the feature.</desc>
            <datatype>
              <rng:ref name="data.STAFFLOC"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.startid">
        <desc/>
        <attList>
          <attDef ident="startid" usage="opt">
            <desc>holds a reference to the first element in a sequence of events
              to which the feature applies.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.startendid">
        <desc>Attributes recording the IDs of the first and last elements of a
          sequence of elements to which the current element is
          associated.</desc>
        <classes>
          <memberOf key="att.startid"/>
        </classes>
        <attList>
          <attDef ident="endid" usage="opt">
            <desc>indicates the final element in a sequence of events to which
              the feature applies.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.stemmed">
        <desc>Attributes that describe the properties of stemmed features; that
          is, chords and notes</desc>
        <classes>
          <memberOf key="att.stemmed.cmn"/>
        </classes>
        <attList>
          <attDef ident="stem.dir" usage="opt">
            <desc>describes the direction of a stem.</desc>
            <datatype>
              <rng:ref name="data.STEMDIRECTION"/>
            </datatype>
          </attDef>
          <attDef ident="stem.len" usage="opt">
            <desc>encodes the stem length.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="stem.pos" usage="opt">
            <desc>records the position of the stem in relation to the
              notehead(s).</desc>
            <datatype>
              <rng:ref name="data.STEMPOSITION"/>
            </datatype>
          </attDef>
          <attDef ident="stem.x" usage="opt">
            <desc>records the output x coordinate of the stem's attachment
              point.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="stem.y" usage="opt">
            <desc>records the output y coordinate of the stem's attachment
              point.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.syltext">
        <desc>Attributes that hold associated sung text syllables</desc>
        <attList>
          <attDef ident="syl" usage="opt">
            <desc>holds an associated sung text syllable.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.textstyle">
        <desc>Attributes that describe default text typography</desc>
        <attList>
          <attDef ident="text.fam" usage="opt">
            <desc>provides a default value for the font family name of text
              (other than lyrics) when this information is not provided on the
              individual elements.</desc>
            <datatype>
              <rng:ref name="data.FONTFAMILY"/>
            </datatype>
          </attDef>
          <attDef ident="text.name" usage="opt">
            <desc>provides a default value for the font name of text (other than
              lyrics) when this information is not provided on the individual
              elements.</desc>
            <datatype>
              <rng:ref name="data.FONTNAME"/>
            </datatype>
          </attDef>
          <attDef ident="text.size" usage="opt">
            <desc>provides a default value for the font size of text (other than
              lyrics) when this information is not provided on the individual
              elements.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="text.style" usage="opt">
            <desc>provides a default value for the font style of text (other
              than lyrics) when this information is not provided on the
              individual elements.</desc>
            <datatype>
              <rng:ref name="data.FONTSTYLE"/>
            </datatype>
          </attDef>
          <attDef ident="text.weight" usage="opt">
            <desc>provides a default value for the font weight for text (other
              than lyrics) when this information is not provided on the
              individual elements.</desc>
            <datatype>
              <rng:ref name="data.FONTWEIGHT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tiepresent">
        <desc>Attributes that indicate the presence of a tie</desc>
        <attList>
          <attDef ident="tie" usage="opt">
            <desc>indicates that this element participates in a tie. If visual
              information about the tie needs to be recorded, then a &lt;tie&gt;
              element should be employed.</desc>
            <datatype>
              <rng:ref name="data.TIES"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.timestamp.musical">
        <desc>Attributes that record a time stamp in terms of musical time,
          i.e., beats[.fractional beat part]</desc>
        <attList>
          <attDef ident="tstamp" usage="opt">
            <desc>encodes the onset time in terms of musical time, i.e.,
              beats[.fractional_beat_part]</desc>
            <datatype>
              <rng:ref name="data.BEAT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.timestamp.performed">
        <desc>Attributes that record a time stamp in terms of relative or real
          time.</desc>
        <attList>
          <attDef ident="tstamp.ges" usage="opt">
            <desc>used to record the onset time in pulses per quarter note (ppq,
              MusicXML divisions, or MIDI clicks) since the start of the
              file.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger"/>
            </datatype>
          </attDef>
          <attDef ident="tstamp.real" usage="opt">
            <desc>used to record the onset time in terms of ISO time since the
              start of the file.</desc>
            <datatype>
              <rng:ref name="data.ISOTIME"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.transposition">
        <desc>Attributes that describe transposition</desc>
        <attList>
          <attDef ident="trans.diat" usage="opt">
            <desc>records the amount of diatonic pitch shift, e.g. C to
              C&#x266f; = 0, C to D&#x266d; = 1. Transposition requires both
              trans.diat and trans.semi attributes in order to distinguish the
              difference, for example, between a transposition from C to
              C&#x266f; and one from C to D&#x266d;.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="trans.semi" usage="opt">
            <desc>contains the amount of pitch shift in semitones, C to
              C&#x266f; = 1, C to D&#x266d; = 1. Transposition requires both
              trans.diat and trans.semi attributes in order to distinguish the
              difference, for example, between a transposition from C to
              C&#x266f; and one from C to D&#x266d;. </desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tupletpresent">
        <desc>Attributes for indicating the presence of a tuplet</desc>
        <attList>
          <attDef ident="tuplet" usage="opt">
            <desc>indicates that this feature participates in a tuplet. If
              visual information about the tuplet needs to be recorded, then a
              &lt;tuplet&gt; element should be employed.</desc>
            <datatype>
              <rng:ref name="data.TUPLETS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.typed">
        <desc>Attributes which can be used to classify or subclassify
          features</desc>
        <attList>
          <attDef ident="type" usage="opt">
            <desc>characterizes the element in some sense, using any convenient
              classification scheme or typology.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
          <attDef ident="subtype" usage="opt">
            <desc>provide any sub-classification for the element, additional to
              that given by its type attribute.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.typography">
        <desc>Typographical attributes</desc>
        <attList>
          <attDef ident="fontfam" usage="opt">
            <desc>contains the name of a font-family.</desc>
            <datatype>
              <rng:ref name="data.FONTFAMILY"/>
            </datatype>
          </attDef>
          <attDef ident="fontname" usage="opt">
            <desc>holds the name of a font.</desc>
            <datatype>
              <rng:ref name="data.FONTNAME"/>
            </datatype>
          </attDef>
          <attDef ident="fontsize" usage="opt">
            <desc>indicates the size of a font in printers' points, i.e., 1/72nd
              of an inch.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="fontstyle" usage="opt">
            <desc>records the style of a font, i.e, italic, oblique, or
              normal.</desc>
            <datatype>
              <rng:ref name="data.FONTSTYLE"/>
            </datatype>
          </attDef>
          <attDef ident="fontweight" usage="opt">
            <desc>used to indicate bold type.</desc>
            <datatype>
              <rng:ref name="data.FONTWEIGHT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visibility">
        <desc>Attributes describing whether a feature should be displayed</desc>
        <attList>
          <attDef ident="visible" usage="opt">
            <desc>indicates if a feature should be rendered when the notation is
              presented graphically or sounded when it is presented in an aural
              form.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset.ho">
        <desc>Horizontal offset attributes</desc>
        <attList>
          <attDef ident="ho" usage="opt">
            <desc>records a horizontal adjustment to a feature's
              programmatically-determined location in terms of staff interline
              distance; that is, in units of 1/2 the distance between adjacent
              staff lines.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset.to">
        <desc>Horizontal offset attributes specified in terms of time</desc>
        <attList>
          <attDef ident="to" usage="opt">
            <desc>records a timestamp adjustment of a feature's
              programmatically-determined location in terms of musical time;
              that is, beats.</desc>
            <datatype>
              <rng:ref name="data.TSTAMPOFFSET"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset.vo">
        <desc>Vertical offset attributes</desc>
        <attList>
          <attDef ident="vo" usage="opt">
            <desc>records the vertical adjustment of a feature's
              programmatically-determined location in terms of staff interline
              distance; that is, in units of 1/2 the distance between adjacent
              staff lines.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset">
        <desc>Visual offset attributes. Some items may have their location
          recorded in terms of offsets from their programmatically-determined
          location. The ho attribute records the horizontal offset while vo
          records the vertical. The to attribute holds a timestamp offset, the
          most common use of which is as an alternative to the ho
          attribute.</desc>
        <classes>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.visualoffset.to"/>
          <memberOf key="att.visualoffset.vo"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset2.ho">
        <desc>Horizontal offset requiring a pair of attributes</desc>
        <attList>
          <attDef ident="startho" usage="opt">
            <desc>records the horizontal adjustment of a feature's
              programmatically-determined start point.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
          <attDef ident="endho" usage="opt">
            <desc>records the horizontal adjustment of a feature's
              programmatically-determined end point.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset2.to">
        <desc>Horizontal offset attributes requiring a pair of attributes
          specified in terms of time</desc>
        <attList>
          <attDef ident="startto" usage="opt">
            <desc>records a timestamp adjustment of a feature's
              programmatically-determined start point.</desc>
            <datatype>
              <rng:ref name="data.TSTAMPOFFSET"/>
            </datatype>
          </attDef>
          <attDef ident="endto" usage="opt">
            <desc>records a timestamp adjustment of a feature's
              programmatically-determined end point.</desc>
            <datatype>
              <rng:ref name="data.TSTAMPOFFSET"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset2.vo">
        <desc>Vertical offset attributes requiring a pair of attributes</desc>
        <attList>
          <attDef ident="startvo" usage="opt">
            <desc>records a vertical adjustment of a feature's
              programmatically-determined start point.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
          <attDef ident="endvo" usage="opt">
            <desc>records a vertical adjustment of a feature's
              programmatically-determined end point.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.visualoffset2">
        <desc>Visual offset attributes. Some items may have their location
          recorded in terms of pairs of offsets from their
          programmatically-determined location. The startho and endho attributes
          record the horizontal offsets of the start and end points of the item,
          respectively. Similarly, the startvo and endvo attributes record the
          vertical offsets of the start and end points of the item. The startto
          and endto attributes hold timestamp offsets, the most common use of
          which is as alternatives to the ho attributes.</desc>
        <classes>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.visualoffset2.vo"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.xy">
        <desc>Output coordinate attributes. Some elements may have their exact
          rendered *output* coordinates recorded. x and y attributes indicate
          where to place the rendered output. Recording the coordinates of a
          feature in a facsimile requires the use of the facs attribute.</desc>
        <attList>
          <attDef ident="x" usage="opt">
            <desc>encodes an x coordinate for a feature in an output coordinate
              system. When it is necessary to record the placement of a feature
              in a facsimile image, use the facs attribute.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="y" usage="opt">
            <desc>encodes an y coordinate for a feature in an output coordinate
              system. When it is necessary to record the placement of a feature
              in a facsimile image, use the facs attribute.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.xy2">
        <desc>Output coordinate attributes. Some elements may need 2 coordinate
          pairs to record their rendered *output* coordinates.</desc>
        <attList>
          <attDef ident="x2" usage="opt">
            <desc>encodes the optional 2nd x coordinate.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="y2" usage="opt">
            <desc>encodes the optional 2nd y coordinate.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.accid.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.accid.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.accid.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.accidental"/>
        </classes>
        <attList>
          <attDef ident="func" usage="opt">
            <desc>records whether the accidental has an editorial or cautionary
              function.</desc>
            <valList type="closed">
              <valItem ident="caution"/>
              <valItem ident="edit"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.accid.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.visualoffset.vo"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.enclosingchars"/>
        </classes>
        <attList>
          <attDef ident="place" usage="opt">
            <desc>captures the placement of the accidental relative to the
              staff.</desc>
            <valList type="closed">
              <valItem ident="above"/>
              <valItem ident="below"/>
              <valItem ident="staff"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.annot.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.annot.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.annot.log">
        <desc>Logical domain attributes for annot. Values for the type attribute
          can be taken from any convenient typology of annotation suitable to
          the work in hand; e.g. annotation, gloss, citation, digression,
          preliminary, temporary, etc.</desc>
        <classes>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
          <memberOf key="att.layerident"/>
          <memberOf key="att.timestamp.musical"/>
          <memberOf key="att.timestamp.performed"/>
          <memberOf key="att.staffident.optional"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.annot.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.artic.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.artic.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.artic.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.articulation"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.artic.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.enclosingchars"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.barline.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.barline.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.timestamp.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.barline.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.meterbar"/>
        </classes>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>records the appearance and usually the function of the
              barline.</desc>
            <datatype>
              <rng:ref name="data.BARRENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.barline.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.barplacement"/>
          <memberOf key="att.color"/>
          <memberOf key="att.measurement"/>
          <memberOf key="att.width"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.chord.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.melodicfunction"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.chord.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.articulation.performed"/>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
          <memberOf key="att.chord.ges.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.chord.log">
        <desc>Logical domain attributes for chord. The artic, dots, and dur
          attributes encode the written articulations, augmentation dots, and
          duration values. The beam, fermata, lv, slur, syl, tie, and tuplet
          attributes may be used to indicate the attachment of these things to
          this chord. If visual information about these things needs to be
          recorded, then either the elements corresponding to these attributes
          or the attributes available in the att.vis.chord class should be
          employed.</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.articulation"/>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.duration.musical"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.syltext"/>
          <memberOf key="att.slurpresent"/>
          <memberOf key="att.tiepresent"/>
          <memberOf key="att.tupletpresent"/>
          <memberOf key="att.chord.log.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.chord.vis">
        <desc>Visual domain attributes for chord. The slur, slur.dir, slur.rend,
          tie, tie.dir, and tie.rend attributes here are syntactic sugar for
          these attributes on each of the chord's individual notes. The values
          here apply to all the notes in the chord. If some notes are slurred or
          tied while others aren't, then the individual note attributes must be
          used.</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.relativesize"/>
          <memberOf key="att.stemmed"/>
          <memberOf key="att.visibility"/>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.visualoffset.to"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.chord.vis.cmn"/>
        </classes>
        <attList>
          <attDef ident="cluster" usage="opt">
            <desc>indicates a single alternative notehead should be displayed
              instead of individual noteheads. See Read, p. 320-321, re: tone
              clusters.</desc>
            <datatype>
              <rng:ref name="data.CLUSTER"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clef.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clef.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clef.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.clefshape"/>
          <memberOf key="att.lineloc"/>
          <memberOf key="att.octave"/>
          <memberOf key="att.octavedisplacement"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clef.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clefchange.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clefchange.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clefchange.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.clefshape"/>
          <memberOf key="att.lineloc"/>
          <memberOf key="att.octave"/>
          <memberOf key="att.octavedisplacement"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.clefchange.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.custos.anl">
        <desc>Analytical domain attributess</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.custos.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.custos.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.pitched"/>
        </classes>
        <attList>
          <attDef ident="target" usage="opt">
            <desc>encodes the target note when its pitch differs from the pitch
              at which the custos appears.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.custos.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dir.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dir.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dir.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dir.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dot.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dot.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dot.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.staffloc"/>
        </classes>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>records the function of the dot; that is, whether it is a dot
              of augmentation or a dot of division.</desc>
            <valList type="closed">
              <valItem ident="aug"/>
              <valItem ident="div"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dot.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.visualoffset.vo"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dynam.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dynam.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.midivalue"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dynam.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.dynam.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.ending.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.ending.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.ending.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.ending.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.grpsym.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.grpsym.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.grpsym.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.staffgroupingsym"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.grpsym.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layer.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layer.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layer.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layer.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.visibility"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layerdef.anl">
        <desc>Analytical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layerdef.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.instrumentident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layerdef.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.duration.default"/>
          <memberOf key="att.octavedefault"/>
          <memberOf key="att.layerdef.log.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.layerdef.vis">
        <desc/>
        <classes>
          <memberOf key="att.visibility"/>
          <memberOf key="att.beaming.vis"/>
          <memberOf key="att.textstyle"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.measure.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.measure.ges">
        <desc>Gestural domain attributes. The tstamp.ges and tstamp.real
          attributes encode the onset time of the measure. In reality, this is
          usually the same as the onset time of the first event in the
          measure.</desc>
        <classes>
          <memberOf key="att.timestamp.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.measure.log">
        <desc>Logical domain attributes. The n attribute contains a name or
          number associated with the measure (Read, p. 445). Often, this is an
          integer, but not always. For example, some measures, especially
          incomplete measures or those under an ending mark, may have labels
          that contain an integer plus a suffix, such as '12a'. Measures may
          even have labels, especially in editorial or analytical uses of MEI,
          that are entirely non-numeric strings. Measure numbers may be
          machine-generated instead of encoding them in the markup. However, an
          explicit measure number should restart numbering with the given value.
          The join attribute may be used to indicate another measure which
          metrically completes the current, incomplete one one.</desc>
        <classes>
          <memberOf key="att.meterbar"/>
          <memberOf key="att.joined"/>
        </classes>
        <attList>
          <attDef ident="left" usage="opt">
            <desc>indicates the visual rendition of the left barline. It is
              present here only for facilitation of translation from legacy
              encodings which use it. Usually, it can be safely ignored.</desc>
            <datatype>
              <rng:ref name="data.BARRENDITION"/>
            </datatype>
          </attDef>
          <attDef ident="right" usage="opt">
            <desc>indicates the function of the right barline and is
              structurally important.</desc>
            <datatype>
              <rng:ref name="data.BARRENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.note.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.harmonicfunction"/>
          <memberOf key="att.intervallicdesc"/>
          <memberOf key="att.melodicfunction"/>
          <memberOf key="att.pitchclass"/>
          <memberOf key="att.solfa"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.note.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.accidental.performed"/>
          <memberOf key="att.articulation.performed"/>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
          <memberOf key="att.note.ges.cmn"/>
          <memberOf key="att.note.ges.mensural"/>
          <memberOf key="att.note.ges.tablature"/>
        </classes>
        <attList>
          <attDef ident="oct.ges" usage="opt">
            <desc>records performed octave information that differs from the
              written value.</desc>
            <datatype>
              <rng:ref name="data.OCTAVE"/>
            </datatype>
          </attDef>
          <attDef ident="pname.ges" usage="opt">
            <desc>contains a performed pitch name that differs from the written
              value.</desc>
            <datatype>
              <rng:ref name="data.PITCHNAME.GES"/>
            </datatype>
          </attDef>
          <attDef ident="pnum" usage="opt">
            <desc>holds a pitch-to-number mapping, a base-40 or MIDI note
              number, for example.</desc>
            <datatype>
              <rng:ref name="data.PITCHNUMBER"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.note.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.accidental"/>
          <memberOf key="att.articulation"/>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.duration.musical"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.pitched"/>
          <memberOf key="att.syltext"/>
          <memberOf key="att.slurpresent"/>
          <memberOf key="att.tiepresent"/>
          <memberOf key="att.tupletpresent"/>
          <memberOf key="att.note.log.cmn"/>
          <memberOf key="att.note.log.mensural"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.note.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.coloration"/>
          <memberOf key="att.enclosingchars"/>
          <memberOf key="att.relativesize"/>
          <memberOf key="att.stemmed"/>
          <memberOf key="att.visibility"/>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.visualoffset.to"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.note.vis.cmn"/>
        </classes>
        <attList>
          <attDef ident="headshape" usage="opt">
            <desc>used to override the headshape normally used for the given
              duration.</desc>
            <datatype>
              <rng:ref name="data.HEADSHAPE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pad.anl">
        <desc>Analytical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pad.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pad.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
        </classes>
        <attList>
          <attDef ident="num" usage="req">
            <desc>amount of "padding" to be added, in interline units.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.pad.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.part.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.part.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.part.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.part.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.parts.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.parts.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.parts.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.parts.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.phrase.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.joined"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.phrase.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.phrase.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.phrase.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.phrase.vis.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.rest.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.rest.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
          <memberOf key="att.rest.ges.mensural"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.rest.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.event"/>
          <memberOf key="att.duration.musical"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.tupletpresent"/>
          <memberOf key="att.rest.log.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.rest.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.relativesize"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.rest.vis.cmn"/>
          <memberOf key="att.rest.vis.mensural"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.sb.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.sb.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.sb.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.sb.vis">
        <desc>Visual domain attributes</desc>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>indicates whether hash marks should be rendered between
              systems. See Read, p. 436, ex. 26-3.</desc>
            <valList type="closed">
              <valItem ident="hash"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.score.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.score.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.score.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.score.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.scoredef.anl">
        <desc>Analytical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.scoredef.ges">
        <desc>Gestural domain attributes for scoredef. The values set in these
          attributes act as score-wide defaults for attributes that are not set
          in descendant elements. For example, the grace attribute value here
          applies to all the grace attribute values in the score (or, more
          accurately, until the next &lt;scoredef&gt; element) without having to
          individually set each note's grace attribute value. The midi.*
          attributes function as default values when creating sounding output.
          The tune.* attributes provide the capability of recording a tuning
          reference pitch. </desc>
        <classes>
          <memberOf key="att.channelized"/>
          <memberOf key="att.timebase"/>
          <memberOf key="att.miditempo"/>
          <memberOf key="att.mmtempo"/>
        </classes>
        <attList>
          <attDef ident="tune.pname" usage="opt">
            <desc>holds the pitch name of a tuning reference pitch.</desc>
            <datatype>
              <rng:ref name="data.PITCHNAME"/>
            </datatype>
          </attDef>
          <attDef ident="tune.Hz" usage="opt">
            <desc>holds a value for cycles per second, i.e., Hertz, for a tuning
              reference pitch.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="tune.temper" usage="opt">
            <desc>provides an indication of the tuning system, 'just', for
              example.</desc>
            <datatype>
              <rng:ref name="data.TEMPERAMENT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.scoredef.log">
        <desc>Logical domain attributes for scoredef in the CMN repertoire. The
          values set in these attributes act as score-wide defaults for
          attributes that are not set in descendant elements. </desc>
        <classes>
          <memberOf key="att.cleffing.log"/>
          <memberOf key="att.duration.default"/>
          <memberOf key="att.keysigs.log"/>
          <memberOf key="att.meters.log"/>
          <memberOf key="att.octavedefault"/>
          <memberOf key="att.transposition"/>
          <memberOf key="att.scoredef.log.cmn"/>
          <memberOf key="att.scoredef.log.mensural"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.scoredef.vis">
        <desc>Visual domain attributes for scoredef in the CMN repertoire</desc>
        <classes>
          <memberOf key="att.barplacement"/>
          <memberOf key="att.cleffing.vis"/>
          <memberOf key="att.distances"/>
          <memberOf key="att.keysigs.vis"/>
          <memberOf key="att.lyricstyle"/>
          <memberOf key="att.meters.vis"/>
          <memberOf key="att.multinummeasures"/>
          <memberOf key="att.onelinestaff"/>
          <memberOf key="att.textstyle"/>
          <memberOf key="att.scoredef.vis.cmn"/>
          <memberOf key="att.scoredef.vis.mensural"/>
        </classes>
        <attList>
          <attDef ident="ending.rend" usage="opt">
            <desc>describes where ending marks should be displayed.</desc>
            <valList type="closed">
              <valItem ident="top"/>
              <valItem ident="barred"/>
              <valItem ident="grouped"/>
            </valList>
          </attDef>
          <attDef ident="mnum.visible" usage="opt">
            <desc>indicates whether measure numbers should be displayed.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="music.name" usage="opt">
            <desc>sets the default music font name.</desc>
            <datatype>
              <rng:ref name="data.MUSICFONT"/>
            </datatype>
          </attDef>
          <attDef ident="music.size" usage="opt">
            <desc>sets the default music font size.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="optimize" usage="opt">
            <desc>indicates whether staves without notes, rests, etc. should be
              displayed. When the value is 'true', empty staves are
              displayed.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="page.height" usage="opt">
            <desc>describes the physical height of the rendered output
              page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.width" usage="opt">
            <desc>describes the physical width of the rendered output
              page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.units" usage="opt">
            <desc>contains the real-world measurement units (inches,
              centimeters, millimeters) used to describe the rendered page
              height, width, and margins.</desc>
            <datatype>
              <rng:ref name="data.PGUNITS"/>
            </datatype>
          </attDef>
          <attDef ident="page.topmar" usage="opt">
            <desc>indicates the amount of whitespace at the top of a rendered
              score page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.botmar" usage="opt">
            <desc>indicates the amount of whitespace at the bottom of a rendered
              score page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.leftmar" usage="opt">
            <desc>indicates the amount of whitespace at the left side of a
              rendered score page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.rightmar" usage="opt">
            <desc>indicates the amount of whitespace at the right side of a
              rendered score page.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="page.panels" usage="opt">
            <desc>indicates the number of logical pages to be rendered on a
              single physical page.</desc>
            <datatype>
              <rng:ref name="data.PAGE.PANELS"/>
            </datatype>
          </attDef>
          <attDef ident="page.scale" usage="opt">
            <desc>indicates how the page should be scaled when rendered.</desc>
            <datatype>
              <rng:ref name="data.PGSCALE"/>
            </datatype>
          </attDef>
          <attDef ident="spacing.packexp" usage="opt">
            <desc>describes a note's spacing relative to its time value.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="spacing.packfact" usage="opt">
            <desc>describes the note spacing of output.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="spacing.staff" usage="opt">
            <desc>sets the minimum amount of space between staves in the same
              system.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="spacing.system" usage="opt">
            <desc>contains a space-separated pair of numbers describing the
              minimum and maximum amount of space between systems.</desc>
          </attDef>
          <attDef ident="system.leftmar" usage="opt">
            <desc>describes the amount of whitespace at the left system margin
              relative to page.leftmar.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="system.rightmar" usage="opt">
            <desc>describes the amount of whitespace at the right system margin
              relative to page.rightmar.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
          <attDef ident="system.topmar" usage="opt">
            <desc>describes the distance from page's top edge to the first
              system; used for first page only.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.section.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.section.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.section.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.section.vis">
        <desc>Visual domain attributes</desc>
        <attList>
          <attDef ident="restart" usage="opt">
            <desc>indicates that staves begin again with this section.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.space.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.space.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.space.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.event"/>
          <memberOf key="att.duration.musical"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.tupletpresent"/>
          <memberOf key="att.space.log.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.space.vis">
        <desc>Visual domain attributes</desc>
        <attList>
          <attDef ident="compressable" usage="opt">
            <desc>indicates whether a space is 'compressable', i.e., if it may
              be removed at the disgression of processing software.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staff.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staff.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staff.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staff.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.visibility"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffdef.anl">
        <desc>Analytical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffdef.ges">
        <desc>Gestural domain attributes for staffdef in the CMN
          repertoire</desc>
        <classes>
          <memberOf key="att.instrumentident"/>
          <memberOf key="att.timebase"/>
          <memberOf key="att.staffdef.ges.tablature"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffdef.log">
        <desc>Logical domain attributes for staffdef</desc>
        <classes>
          <memberOf key="att.cleffing.log"/>
          <memberOf key="att.duration.default"/>
          <memberOf key="att.keysigs.log"/>
          <memberOf key="att.meters.log"/>
          <memberOf key="att.octavedefault"/>
          <memberOf key="att.transposition"/>
          <memberOf key="att.staffdef.log.cmn"/>
          <memberOf key="att.staffdef.log.mensural"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffdef.vis">
        <desc>Visual domain attributes for staffdef</desc>
        <classes>
          <memberOf key="att.cleffing.vis"/>
          <memberOf key="att.distances"/>
          <memberOf key="att.keysigs.vis"/>
          <memberOf key="att.labels"/>
          <memberOf key="att.lyricstyle"/>
          <memberOf key="att.meters.vis"/>
          <memberOf key="att.multinummeasures"/>
          <memberOf key="att.onelinestaff"/>
          <memberOf key="att.scalable"/>
          <memberOf key="att.textstyle"/>
          <memberOf key="att.visibility"/>
          <memberOf key="att.staffdef.vis.cmn"/>
          <memberOf key="att.staffdef.vis.mensural"/>
        </classes>
        <attList>
          <attDef ident="grid.show" usage="opt">
            <desc>determines whether to display guitar chord grids.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="layerscheme" usage="opt">
            <desc>indicates the number of layers and their stem
              directions.</desc>
            <datatype>
              <rng:ref name="data.LAYERSCHEME"/>
            </datatype>
          </attDef>
          <attDef ident="lines" usage="opt">
            <desc>indicates the number of stafflines.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="lines.color" usage="opt">
            <desc>captures the colors of the staff lines. The value is
              structured; that is, it should have the same number of
              space-separated RGB values as the number of lines indicated by the
              lines attribute. A line can be made invisible by assigning it the
              same RGB value as the background, usually white.</desc>
            <datatype>
              <rng:ref name="data.COLORS"/>
            </datatype>
          </attDef>
          <attDef ident="lines.visible" usage="opt">
            <desc>records whether all stafflines are visible.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="spacing" usage="opt">
            <desc>records the absolute distance (as opposed to the relative
              distances recorded in &lt;scoredef&gt; elements) between this
              staff and the preceding one in the same system. This value is
              meaningless for the first staff in a system since the
              spacing.system attribute indicates the spacing between
              systems.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffgrp.anl">
        <desc>Analytical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffgrp.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.instrumentident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffgrp.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.staffgrp.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.labels"/>
          <memberOf key="att.staffgroupingsym"/>
          <memberOf key="att.visibility"/>
        </classes>
        <attList>
          <attDef ident="barthru" usage="opt">
            <desc>indicates whether barlines go across the space between staves
              (true) or are only drawn across the lines of each staff
              (false).</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.syl.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.syl.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.syl.log">
        <desc>Logical domain attributes</desc>
        <attList>
          <attDef ident="con" usage="opt">
            <desc>describes the symbols typically used to indicate breaks
              between syllables: s (_s_pace) = word separator, d (_d_ash) =
              syllable separator, u (_u_nderscore) = syllable extension, t
              (_t_ilde) = syllable elision </desc>
            <valList type="closed">
              <valItem ident="s"/>
              <valItem ident="d"/>
              <valItem ident="u"/>
              <valItem ident="t"/>
            </valList>
          </attDef>
          <attDef ident="wordpos" usage="opt">
            <desc>records the position of a syllable within a word.</desc>
            <valList type="closed">
              <valItem ident="i"/>
              <valItem ident="m"/>
              <valItem ident="t"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.syl.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.typography"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.horizontalalign"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tempo.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tempo.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.miditempo"/>
          <memberOf key="att.mmtempo"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tempo.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.shared" ident="att.tempo.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.header" ident="att.regularmethod">
        <desc>Attributes that describe correction and normalization
          methods</desc>
        <attList>
          <attDef ident="method" usage="opt">
            <desc>indicates the method employed to mark corrections and
              normalizations.</desc>
            <valList type="closed">
              <valItem ident="silent"/>
              <valItem ident="tags"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamed">
        <desc>Attributes that indicate whether an event lies under a beam</desc>
        <attList>
          <attDef ident="beam" usage="opt">
            <desc>indicates that this event is "under a beam".</desc>
            <datatype>
              <rng:ref name="data.BEAMS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamedwith">
        <desc>Attributes indicating cross-staff beaming</desc>
        <attList>
          <attDef ident="beam.with" usage="opt">
            <desc>In the case of cross-staff beams, the beam.with attribute is
              used to indicate which staff the beam is connected to; that is,
              the staff above or the staff below.</desc>
            <datatype>
              <rng:ref name="data.OTHERSTAFF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beaming.log">
        <desc>Used by layerdef, staffdef, and scoredef to provide default values
          for attributes in the logical domain related to beaming</desc>
        <attList>
          <attDef ident="beam.group" usage="opt">
            <desc>provides an example of how automated beaming (including
              secondary beams) is to be performed. It can be used to set a
              default beaming pattern to be used when no beaming is indicated at
              the event level. beam.group must contain a comma-separated list of
              time values that add up to a measure, e.g., in 4/4 time '4,4,4,4'
              indicates each quarter note worth of shorter notes would be beamed
              together. Parentheses can be used to indicate sub-groupings of
              secondary beams. For example, '(4.,4.,4.)' in 9/8 meter indicates
              one outer beam per measure with secondary beams broken at each
              dotted quarter duration, while a measure of 16th notes in 4/4 with
              beam.group equal to '(4,4),(4,4)' will result in a primary beam
              covering all the notes and secondary beams each group of 4 notes.
              This beaming "directive" can be overridden by using &lt;beam&gt;
              elements. If neither &lt;beam&gt; elements or the beam.group
              attribute is used, then no beaming is rendered. Beaming can be
              'turned off' by setting beam.group to an empty string.</desc>
          </attDef>
          <attDef ident="beam.rests" usage="opt">
            <desc>indicates whether automatically-drawn beams should include
              rests shorter than a quarter note duration.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamrend">
        <desc>Attributes that record the visual rendition of beams</desc>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>captures whether a beam is feathered and in which direction:
              'acc' indicates that the secondary beams get progressively closer
              together, coming together at the end of the beam, while 'rit'
              means that the secondary beams start at the same point and get
              progressively more distant.</desc>
            <valList type="closed">
              <valItem ident="acc"/>
              <valItem ident="rit"/>
              <valItem ident="norm"/>
            </valList>
          </attDef>
          <attDef ident="slope" usage="opt">
            <desc>records the slope of the beam.</desc>
            <datatype>
              <rng:data type="decimal"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamsecondary">
        <desc>Attributes that capture informtion about secondary beaming</desc>
        <attList>
          <attDef ident="breaksec" usage="opt">
            <desc>presence of this attribute indicates that the secondary beam
              should be broken following this note/chord. The value of the
              attribute records the number of beams which should remain
              unbroken.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.cutout">
        <desc>Attributes that indicate how to render stafflines behind a
          measure</desc>
        <attList>
          <attDef ident="cutout" usage="opt">
            <desc>Presence of the cutout attribute indicates that the staff
              lines should not be drawn for the measure containing this
              element.</desc>
            <valList type="closed">
              <valItem ident="cutout"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.expandable">
        <desc>Attributes that indicate whether to render a repeat symbol or the
          source material to which it refers</desc>
        <attList>
          <attDef ident="expand" usage="opt">
            <desc>indicates whether to render a repeat symbol or the source
              material to which it refers. A value of 'true' renders the source
              material, while 'false' displays the repeat symbol.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.graced">
        <desc>Attributes that mark a note or chord as a "grace", how it should
          "steal" time, and how much time should be allotted to the grace
          note/chord.</desc>
        <attList>
          <attDef ident="grace" usage="opt">
            <desc>marks a note or chord as a "grace" (without a definitive
              written duration) and records from which other note/chord it
              should "steal" time.</desc>
            <datatype>
              <rng:ref name="data.GRACE"/>
            </datatype>
          </attDef>
          <attDef ident="grace.time" usage="opt">
            <desc>records the amount of time to be "stolen" from a non-grace
              note/chord.</desc>
            <datatype>
              <rng:ref name="data.PERCENT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.lvpresent">
        <desc>Attributes that indicate the presence of an l.v. (laissez vibrer)
          marking attached to a feature</desc>
        <attList>
          <attDef ident="lv" usage="opt">
            <desc>indicates the attachment of an l.v. (laissez vibrer) sign to
              this element.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.measure.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.barplacement"/>
          <memberOf key="att.measurement"/>
          <memberOf key="att.width"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.numbered">
        <desc>Attributes that record numbers to be displayed with a
          feature</desc>
        <attList>
          <attDef ident="num" usage="opt">
            <desc>along with numbase, describes duration as a ratio. num is the
              first value in the ratio, while numbase is the second.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.numberplacement">
        <desc>Attributes that record the placement and visibility of numbers
          that accompany a bowed tremolo or tuplet</desc>
        <attList>
          <attDef ident="num.place" usage="opt">
            <desc>states where the tuplet number will be placed in relation to
              the noteheads.</desc>
            <datatype>
              <rng:ref name="data.PLACE"/>
            </datatype>
          </attDef>
          <attDef ident="num.visible" usage="opt">
            <desc>determines if the tuplet number is visible.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.slurrend">
        <desc>Attributes that describe the rendition of slurs</desc>
        <attList>
          <attDef ident="slur.rend" usage="opt">
            <desc>describes the line style of the slur.</desc>
            <datatype>
              <rng:ref name="data.CURVERENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.stemmed.cmn">
        <desc>Attributes that describe the properties of stemmed features; that
          is, chords and notes</desc>
        <attList>
          <attDef ident="stem.mod" usage="opt">
            <desc>encodes any stem "modifiers"; that is, symbols rendered on the
              stem, such as tremolo or Sprechstimme indicators.</desc>
            <datatype>
              <rng:ref name="data.STEMMODIFIER"/>
            </datatype>
          </attDef>
          <attDef ident="stem.with" usage="opt">
            <desc>contains an indication of which staff a note or chord that
              logically belongs to the current staff should be visually placed
              on; that is, the one above or the one below.</desc>
            <datatype>
              <rng:ref name="data.OTHERSTAFF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tierend">
        <desc>Attributes that describe the rendition of ties</desc>
        <attList>
          <attDef ident="tie.rend" usage="opt">
            <desc>describes the line style of the tie</desc>
            <datatype>
              <rng:ref name="data.CURVERENDITION"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.arpeg.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.arpeg.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.arpeg.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
        </classes>
        <attList>
          <attDef ident="order" usage="opt">
            <desc>describes the direction in which the arpeggio is to be
              performed (up = lowest to highest, down = highest to lowest) or a
              return to a non-arpeggiated style (nonarp, usually rendered with a
              preceding bracket instead of a wavy line).</desc>
            <valList type="closed">
              <valItem ident="up"/>
              <valItem ident="down"/>
              <valItem ident="nonarp"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.arpeg.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
        <attList>
          <attDef ident="arrow" usage="opt">
            <desc>indicates if an arrowhead is to be drawn as part of the
              arpeggiation symbol.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beam.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beam.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beam.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.beamedwith"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beam.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.beamrend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamspan.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamspan.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamspan.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.beamedwith"/>
          <memberOf key="att.duration.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beamspan.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.beamrend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beatrpt.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beatrpt.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beatrpt.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.beatrpt.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.expandable"/>
        </classes>
        <attList>
          <attDef ident="rend" usage="req">
            <desc>indicates the number of slashes required to render the
              appropriate beat repeat symbol. When a single beat is repeated,
              consisting of a single note or chord, it is indicated by a single
              thick, slanting slash; therefore, the value '1' should be used.
              The following values should be used when the beat is divided into
              even notes: 4ths or 8ths=1, 16ths=2, 32nds=3, 64ths=4, 128ths=5.
              When the beat is comprised of mixed duration values, the symbol is
              always rendered as 2 slashes and 2 dots.</desc>
            <datatype>
              <rng:ref name="data.BEATRPT.REND"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.bend.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.bend.ges">
        <desc>Gestural domain attributes</desc>
        <attList>
          <attDef ident="amount" usage="opt">
            <desc>records the amount of detuning. The decimal values should be
              rendered as a fraction (or an integer plus a fraction) along with
              the bend symbol.</desc>
            <datatype>
              <rng:ref name="data.BEND.AMOUNT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.bend.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.bend.vis">
        <desc>Visual domain attributes. If the bulge or bezier attributes are
          present, the bend should be rendered as a curve. Otherwise, it should
          be rendered using lines. The ho and vo attributes describe the visual
          offset of the entire rendered bend. The endho, endvo and startho,
          startvo attribute pairs may be used to encode start and end points
          relative to their programmatic placement. For exact placement of the
          endpoints of the bend, use the x and y attributes.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.curvature"/>
          <memberOf key="att.curverend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.breath.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.breath.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.breath.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.breath.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.btrem.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.btrem.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.btrem.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.numbered"/>
          <memberOf key="att.slashcount"/>
        </classes>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>describes the bowed tremolo as measured or unmeasured.</desc>
            <valList type="closed">
              <valItem ident="meas"/>
              <valItem ident="unmeas"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.btrem.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.numberplacement"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.chord.ges.cmn">
        <desc/>
        <classes>
          <memberOf key="att.graced"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.chord.log.cmn">
        <desc/>
        <classes>
          <memberOf key="att.beamed"/>
          <memberOf key="att.lvpresent"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.chord.vis.cmn">
        <desc>Visual domain attributes for chord. The slur, slur.dir, slur.rend,
          tie, tie.dir, and tie.rend attributes here are "syntactic sugar" for
          these attributes on each of the chord's individual notes. The values
          here apply to all the notes in the chord. If some notes are slurred or
          tied while others aren't, then the individual note attributes must be
          used.</desc>
        <classes>
          <memberOf key="att.beamsecondary"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.fermata.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.fermata.ges">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.fermata.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.fermata.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>describes the visual appearance of the fermata; that is,
              whether it occurs as upright or inverted.</desc>
            <valList type="closed">
              <valItem ident="inv"/>
              <valItem ident="norm"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ftrem.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ftrem.ges">
        <desc>Gestural domain attributes</desc>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>describes whether the tremolo is measured or
              unmeasured.</desc>
            <valList type="closed">
              <valItem ident="meas"/>
              <valItem ident="unmeas"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ftrem.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ftrem.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.slashcount"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.gliss.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.gliss.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.gliss.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.gliss.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.linerend"/>
        </classes>
        <attList>
          <attDef ident="text" usage="opt">
            <desc>records a text string, such as 'gliss', that accompanies the
              glissando mark.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.hairpin.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.hairpin.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.hairpin.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
        <attList>
          <attDef ident="form" usage="req">
            <desc>captures the visual rendition and function of the hairpin;
              that is, whether it is a crescendo or diminuendo mark.</desc>
            <valList type="closed">
              <valItem ident="cres"/>
              <valItem ident="dim"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.hairpin.vis">
        <desc>Visual domain attributes. The startho and startvo attributes
          record the horizontal and vertical offsets of the left end, endho and
          endvo record the horizontal and vertical offsets of the right end, and
          the width attribute records the width of the opening on the open end
          in one-half staff inter-line units. The x1 and y1 attributes give the
          absolute coordinates of the left side of the top line of the hairpin
          while x2 and y2 record the coordinates of the right side of the top
          line. The position of the end points of the bottom line can be
          calculated using the top line coordinates and the value of the width
          attribute.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
        </classes>
        <attList>
          <attDef ident="opening" usage="opt">
            <desc>specifies the distance between the points of the open end of a
              hairpin dynamic mark.</desc>
            <datatype>
              <rng:ref name="data.INTERLINE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.halfmrpt.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.halfmrpt.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.halfmrpt.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.duration.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.halfmrpt.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.expandable"/>
          <memberOf key="att.visualoffset"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.harppedal.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.harppedal.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.harppedal.log">
        <desc>Logical domain attributes. The pedal setting, i.e., flat, natural,
          or sharp, for each diatonic pitch name is indicated by the seven
          letter-named attributes.</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
        <attList>
          <attDef ident="c" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's C strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="d" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's D strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="e" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's E strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="f" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's F strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="g" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's G strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="a" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's A strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
          <attDef ident="b" usage="opt">
            <desc>indicates the pedal setting, i.e., flat, natural, or sharp,
              for the harp's B strings.</desc>
            <defaultVal>n</defaultVal>
            <valList type="closed">
              <valItem ident="f"/>
              <valItem ident="n"/>
              <valItem ident="s"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.harppedal.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.layerdef.log.cmn">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.beaming.log"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrest.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrest.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrest.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.duration.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrest.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.cutout"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visibility"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.relativesize"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.expandable"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt2.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt2.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt2.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mrpt2.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.expandable"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mspace.anl">
        <desc>Analytical domain attributes. Use the n attribute to explicitly
          encode this measure's position in a string of measures containing only
          &lt;mrest&gt; elements.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mspace.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mspace.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.fermatapresent"/>
          <memberOf key="att.duration.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.mspace.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.cutout"/>
          <memberOf key="att.visibility"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirest.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirest.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
          <memberOf key="att.instrumentident"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirest.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.numbered"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirest.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
        </classes>
        <attList>
          <attDef ident="block" usage="opt">
            <desc>When the block attribute is used, combinations of the 1, 2,
              and 4 measure rest forms (Read, p. 104) should be rendered instead
              of the modern form or an alternative symbol.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirpt.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirpt.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirpt.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.numbered"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.multirpt.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.expandable"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.note.ges.cmn">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.graced"/>
        </classes>
        <attList>
          <attDef ident="gliss" usage="opt">
            <desc>indicates that this element participates in a
              glissando.</desc>
            <datatype>
              <rng:ref name="data.GLISSANDO"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.note.log.cmn">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.beamed"/>
          <memberOf key="att.lvpresent"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.note.vis.cmn">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.beamsecondary"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.octave.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.octave.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.octave.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.octavedisplacement"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
        <attList>
          <attDef ident="coll" usage="opt">
            <desc>indicates whether the octave displacement should be performed
              simultaneously with the written notes, i.e., "coll' ottava".
              Unlike other octave signs which are indicated by broken lines,
              coll' ottava uses an unbroken line or a series of longer broken
              lines, ending with a short vertical stroke. See Read, p.
              47-48.</desc>
            <valList type="closed">
              <valItem ident="coll"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.octave.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.xy"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.linerend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ossia.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ossia.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ossia.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.ossia.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.pedal.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.pedal.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.pedal.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
        <attList>
          <attDef ident="dir" usage="req">
            <desc>records the position of the piano damper pedal.</desc>
            <valList type="closed">
              <valItem ident="down"/>
              <valItem ident="up"/>
              <valItem ident="half"/>
              <valItem ident="bounce"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.pedal.vis">
        <desc>Visual domain attributes. The place attribute captures the
          placement of the pedal marking with respect to the staff with which it
          is associated. Modern publishing standards require the place to be
          'below'; however, for transcriptions of manuscript works, this
          attribute class allows the full range of values.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.visualoffset"/>
        </classes>
        <attList>
          <attDef ident="style" usage="opt">
            <desc>When style is set to 'line', the pedal mark is rendered with a
              continuous line. When it's set to pedstar, a pedal down and a half
              pedal are rendered with "Ped.", a pedal up is rendered as "*", and
              a pedal "bounce" (up then immediately down) is rendered with "*
              Ped.". When set to altpedstar, pedal up and down indications are
              the same as with pedstar but a bounce is rendered with "Ped."
              only.</desc>
            <valList type="closed">
              <valItem ident="line"/>
              <valItem ident="pedstar"/>
              <valItem ident="altpedstar"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.phrase.vis.cmn">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.curvature"/>
          <memberOf key="att.curverend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.pianopedals">
        <desc>Used by scoredef and staffdef to provide default description of
          piano pedal rendition</desc>
        <attList>
          <attDef ident="pedal.style" usage="opt">
            <desc>determines whether piano pedal marks should be drawn as lines
              or as terms (e.g. 'Ped.' for pedal down and '*' for pedal
              up).</desc>
            <valList type="closed">
              <valItem ident="line"/>
              <valItem ident="pedstar"/>
              <valItem ident="altpedstar"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.rehearsal">
        <desc>Attributes used by scoredef and staffdef to provide default
          information about rehearsal numbers/letters</desc>
        <attList>
          <attDef ident="reh.enclose" usage="opt">
            <desc>describes the enclosing shape for rehearsal marks.</desc>
            <valList type="closed">
              <valItem ident="box"/>
              <valItem ident="circle"/>
              <valItem ident="none"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.reh.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.reh.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.reh.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.staffident.required"/>
          <memberOf key="att.startid"/>
          <memberOf key="att.timestamp.musical"/>
          <memberOf key="att.timestamp.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.reh.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.typography"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.rest.log.cmn">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.beamed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.rest.vis.cmn">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.scoredef.log.cmn">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.beaming.log"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.scoredef.vis.cmn">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.beaming.vis"/>
          <memberOf key="att.pianopedals"/>
          <memberOf key="att.rehearsal"/>
          <memberOf key="att.slurrend"/>
          <memberOf key="att.tierend"/>
        </classes>
        <attList>
          <attDef ident="grid.show" usage="opt">
            <desc>determines whether to display guitar chord grids.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.slur.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.joined"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.slur.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.slur.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.slur.vis">
        <desc>Visual domain attributes for slur. The vo attribute is the
          vertical offset (from its normal position) of the entire rendered
          slur/phrase mark.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.curvature"/>
          <memberOf key="att.curverend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.space.log.cmn">
        <desc/>
        <classes>
          <memberOf key="att.beamed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.staffdef.log.cmn">
        <desc>Logical domain attributes for staffdef in the CMN
          repertoire</desc>
        <classes>
          <memberOf key="att.beaming.log"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.staffdef.vis.cmn">
        <desc>Visual domain attributes for staffdef in the CMN repertoire</desc>
        <classes>
          <memberOf key="att.beaming.vis"/>
          <memberOf key="att.pianopedals"/>
          <memberOf key="att.rehearsal"/>
          <memberOf key="att.slurrend"/>
          <memberOf key="att.tierend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tie.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tie.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tie.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tie.vis">
        <desc>Visual domain attributes. The vo attribute is the vertical offset
          (from its normal position) of the entire rendered tie. The startho,
          startvo, endho, and endvo attributes describe the horizontal and
          vertical offsets of the start and end points of the tie in terms of
          staff interline distance. Startto and endto describe the start and end
          points in terms of time; that is, beats.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.curvature"/>
          <memberOf key="att.curverend"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tuplet.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tuplet.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tuplet.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.beamedwith"/>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.duration.ratio"/>
          <memberOf key="att.startendid"/>
        </classes>
        <attList>
          <attDef ident="dur" usage="opt">
            <desc>records the duration of a feature using the relative
              durational values provided by the data.DURATION datatype.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tuplet.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.numberplacement"/>
        </classes>
        <attList>
          <attDef ident="bracket.place" usage="opt">
            <desc>used to state where a tuplet bracket will be placed in
              relation to the noteheads.</desc>
            <datatype>
              <rng:ref name="data.PLACE"/>
            </datatype>
          </attDef>
          <attDef ident="bracket.visible" usage="opt">
            <desc>states whether a bracket should be rendered with a
              tuplet.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="dur.visible" usage="opt">
            <desc>determines if the tuplet duration is visible.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="num.format" usage="opt">
            <desc>controls how the num:numbase ratio is to be displayed. When
              set to 'count' only the num attribute is displayed, e.g., '7';
              however, when set to 'ratio', both the num and numbase attributes
              are displayed, e.g., '7:4'.</desc>
            <valList type="closed">
              <valItem ident="count"/>
              <valItem ident="ratio"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tupletspan.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.tuplet.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tupletspan.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.tuplet.ges"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tupletspan.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.beamedwith"/>
          <memberOf key="att.augmentdots"/>
          <memberOf key="att.duration.ratio"/>
          <memberOf key="att.startendid"/>
        </classes>
        <attList>
          <attDef ident="dur" usage="opt">
            <desc>records the duration of a feature using the relative
              durational values provided by the data.DURATION datatype.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmn" ident="att.tupletspan.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.tuplet.vis"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.ligature.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.ligature.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.ligature.log">
        <desc>Logical domain attributes</desc>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>provides an indication of the function of the ligature.</desc>
            <datatype>
              <rng:ref name="data.LIGATUREFORM"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.ligature.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensur.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensur.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensur.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.duration.ratio"/>
        </classes>
        <attList>
          <attDef ident="modusmaior" usage="opt">
            <desc>describes the maxima-long relationship.</desc>
            <datatype>
              <rng:ref name="data.MODUSMAIOR"/>
            </datatype>
          </attDef>
          <attDef ident="modusminor" usage="opt">
            <desc>describes the long-breve relationship.</desc>
            <datatype>
              <rng:ref name="data.MODUSMINOR"/>
            </datatype>
          </attDef>
          <attDef ident="prolatio" usage="opt">
            <desc>describes the semibreve-minim relationship.</desc>
            <datatype>
              <rng:ref name="data.PROLATIO"/>
            </datatype>
          </attDef>
          <attDef ident="tempus" usage="opt">
            <desc>describes the breve-semibreve relationship.</desc>
            <datatype>
              <rng:ref name="data.TEMPUS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensur.vis">
        <desc>Visual domain attributes. These attributes describe the physical
          appearance of the mensuration sign/time signature of mensural
          notation.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.relativesize"/>
          <memberOf key="att.slashcount"/>
          <memberOf key="att.staffloc"/>
        </classes>
        <attList>
          <attDef ident="dot" usage="opt">
            <desc>specifies whether a dot is to be added to the base
              symbol.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="form" usage="opt">
            <desc>indicates whether the base symbol is written vertically or
              horizontally.</desc>
            <valList type="closed">
              <valItem ident="horizontal"/>
              <valItem ident="vertical"/>
            </valList>
          </attDef>
          <attDef ident="orient" usage="opt">
            <desc>describes the rotation or reflection of the base
              symbol.</desc>
            <datatype>
              <rng:ref name="data.ORIENTATION"/>
            </datatype>
          </attDef>
          <attDef ident="sign" usage="opt">
            <desc>the base symbol in the mensuration sign/time signature of
              mensural notation.</desc>
            <datatype>
              <rng:ref name="data.MENSURATIONSIGN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensuration.log">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the logical domain related to mensuration</desc>
        <classes>
          <memberOf key="att.mensur.log"/>
        </classes>
        <attList>
          <attDef ident="mensur.dot" usage="opt">
            <desc>determines if a dot is to be added to the base symbol.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="mensur.orient" usage="opt">
            <desc>describes the rotation or reflection of the base
              symbol.</desc>
            <datatype>
              <rng:ref name="data.ORIENTATION"/>
            </datatype>
          </attDef>
          <attDef ident="mensur.sign" usage="opt">
            <desc>the base symbol in the mensuration sign/time signature of
              mensural notation.</desc>
            <datatype>
              <rng:ref name="data.MENSURATIONSIGN"/>
            </datatype>
          </attDef>
          <attDef ident="mensur.slash" usage="opt">
            <desc>indicates the number lines added to the mensuration sign. For
              example, one slash is added for what we now call 'alla
              breve'.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.mensuration.vis">
        <desc>Used by staffdef and scoredef to provide default values for
          attributes in the visual domain related to mensuration</desc>
        <attList>
          <attDef ident="mensur.form" usage="opt">
            <desc>indicates whether the base symbol is written vertically or
              horizontally.</desc>
            <valList type="closed">
              <valItem ident="horizontal"/>
              <valItem ident="vertical"/>
            </valList>
          </attDef>
          <attDef ident="mensur.loc" usage="opt">
            <desc>holds the staff location of the mensuration sign.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="mensur.size" usage="opt">
            <desc>describes the relative size of the mensuration sign.</desc>
            <datatype>
              <rng:ref name="data.SIZE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.note.ges.mensural">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.ratio"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.note.log.mensural">
        <desc>Logical domain attributes</desc>
        <attList>
          <attDef ident="lig" usage="opt">
            <desc>indicates this element's participation in a ligature.</desc>
            <valList type="closed">
              <valItem ident="recta"/>
              <valItem ident="obliqua"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.proport.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.proport.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.proport.log">
        <desc>Logical domain attributes. These attributes describe augmentation
          or diminution of the normal value of the notes in mensural notation as
          a ratio.</desc>
        <classes>
          <memberOf key="att.duration.ratio"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.proport.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.rest.ges.mensural">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.ratio"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural" ident="att.rest.vis.mensural">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.lineloc"/>
        </classes>
        <attList>
          <attDef ident="spaces" usage="opt">
            <desc>states how many spaces are covered by the rest.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural"
        ident="att.scoredef.log.mensural">
        <desc>Logical domain attributes for a score in the mensural repertoire.
          The values set in these attributes act as score-wide defaults for
          attributes that are not set in descendant elements. The tempus,
          prolatio, modusmaior, and modusminor attributes specify the
          relationship between the four principle levels of note value, i.e.,
          the long, breve, semibreve and minim, in mensural notation. Modusminor
          describes the long-breve relationship, while tempus describes the
          breve-semibreve, and prolatio the semibreve-minim relationship,
          respectively. Modusmaior is for the maxima-long relationship. The
          proport.* attributes describe augmentation or diminution of the normal
          value of the notes in mensural notation. The num and numbase
          attributes provide default values.</desc>
        <classes>
          <memberOf key="att.mensuration.log"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural"
        ident="att.scoredef.vis.mensural">
        <desc>Visual domain attributes for scoredef in the mensural
          repertoire</desc>
        <classes>
          <memberOf key="att.mensuration.vis"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural"
        ident="att.staffdef.log.mensural">
        <desc>Logical domain attributes for staffdef in the mensural
          repertoire</desc>
        <classes>
          <memberOf key="att.mensuration.log"/>
        </classes>
        <attList>
          <attDef ident="proport.num" usage="opt">
            <desc>Together, proport.num and proport.numbase specify a
              proportional change as a ratio, e.g., 1:3. Proport.num is for the
              first value in the ratio.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="proport.numbase" usage="opt">
            <desc>Together, proport.num and proport.numbase specify a
              proportional change as a ratio, e.g., 1:3. Proport.numbase is for
              the second value in the ratio.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.mensural"
        ident="att.staffdef.vis.mensural">
        <desc>Visual domain attributes for the mensural repertoire</desc>
        <classes>
          <memberOf key="att.mensuration.vis"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.ineume.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.ineume.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.ineume.log">
        <desc>Logical domain attributes</desc>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>provides a subclass or functional label for the neume.</desc>
            <datatype>
              <rng:ref name="data.INEUMEFORM"/>
            </datatype>
          </attDef>
          <attDef ident="name" usage="opt">
            <desc>records the name of the neume.</desc>
            <datatype>
              <rng:ref name="data.INEUMENAME"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.ineume.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.uneume.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.harmonicfunction"/>
          <memberOf key="att.melodicfunction"/>
          <memberOf key="att.intervallicdesc"/>
          <memberOf key="att.solfa"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.uneume.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.uneume.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.event"/>
          <memberOf key="att.syltext"/>
        </classes>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>provides a subclass or functional label for the neume.</desc>
            <datatype>
              <rng:ref name="data.UNEUMEFORM"/>
            </datatype>
          </attDef>
          <attDef ident="name" usage="opt">
            <desc>records the name of the neume.</desc>
            <datatype>
              <rng:ref name="data.UNEUMENAME"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.neumes" ident="att.uneume.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.altsym"/>
          <memberOf key="att.color"/>
          <memberOf key="att.relativesize"/>
          <memberOf key="att.visualoffset.ho"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.visibility"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.common.anl">
        <desc>Common analytical attributes. When the meiLinkAlign module is
          used, the when attribute is also a member of this attribute
          class.</desc>
        <classes>
          <memberOf key="att.alignment"/>
        </classes>
        <attList>
          <attDef ident="copyof" usage="opt">
            <desc>points to an element of which the current element is a
              copy.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
          <attDef ident="corresp" usage="opt">
            <desc>used to point to other elements that correspond to this one in
              a generic fashion.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
          <attDef ident="next" usage="opt">
            <desc>used to point to the next event(s) in a user-defined
              collection.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
          <attDef ident="prev" usage="opt">
            <desc>points to the previous event(s) in a user-defined
              collection.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
          <attDef ident="sameas" usage="opt">
            <desc>points to an element that is the same as the current element
              but is not a literal copy of the current element.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
          <attDef ident="synch" usage="opt">
            <desc>points to elements that are synchronous with the current
              element.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.harmonicfunction">
        <desc>Attributes describing the harmonic function of a single
          pitch</desc>
        <attList>
          <attDef ident="hfunc" usage="opt">
            <desc>describes harmonic function in any convenient typology.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.intervalharmonic">
        <desc>Attributes that describe harmonic intervals</desc>
        <attList>
          <attDef ident="inth" usage="opt">
            <desc>encodes the harmonic interval between this note and other
              pitches occurring at the same time.</desc>
            <datatype>
              <rng:data type="NMTOKENS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.intervallicdesc">
        <desc>Attributes that provide for description of intervallic
          content</desc>
        <classes>
          <memberOf key="att.intervalharmonic"/>
        </classes>
        <attList>
          <attDef ident="intm" usage="opt">
            <desc>encodes the melodic interval from the previous pitch.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.melodicfunction">
        <desc>Attributes describing melodic function</desc>
        <attList>
          <attDef ident="mfunc" usage="opt">
            <desc>describes melodic function in any convenient typology.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.pitchclass">
        <desc>Attributes that describe pitch class</desc>
        <attList>
          <attDef ident="pclass" usage="opt">
            <desc>holds pitch class information.</desc>
            <datatype>
              <rng:ref name="data.PITCHCLASS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.analysis" ident="att.solfa">
        <desc>Attributes that specify pitch using solfa</desc>
        <attList>
          <attDef ident="psolfa" usage="opt">
            <desc>contains solfa designation, e.g., do, re, mi, etc., in either
              a fixed or movable Do system.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.ornamentaccid">
        <desc>Accidentals associated with ornaments</desc>
        <attList>
          <attDef ident="accidupper" usage="opt">
            <desc>records the written accidental associated with an upper
              neighboring note.</desc>
            <datatype>
              <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
            </datatype>
          </attDef>
          <attDef ident="accidlower" usage="opt">
            <desc>records the written accidental associated with a lower
              neighboring note.</desc>
            <datatype>
              <rng:ref name="data.ACCIDENTAL.EXPLICIT"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.mordent.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.mordent.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.mordent.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.ornamentaccid"/>
        </classes>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>'norm' signals the normal form, that is, the written note,
              followed by its lower neighbor, with a return to the written note,
              while 'inv' indicates the inverted form, that is, the principal
              note, followed by its upper neighbor, with a return to the
              principal note. Traditionally, the 'normal' mordent is written as
              a short wavy line with a vertical line through it and the inverted
              mordent is written without the vertical line. However, the meaning
              of these signs is sometimes reversed. See Read, p. 245-246.
              Another attribute in the visual domain would be necessary in order
              to be completely explicit about which visual symbol is actually to
              be rendered.</desc>
            <valList type="closed">
              <valItem ident="inv"/>
              <valItem ident="norm"/>
            </valList>
          </attDef>
          <attDef ident="long" usage="opt">
            <desc>When the long attribute is set to 'yes', a double or long
              mordent, consisting of 5 notes, is indicated.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.mordent.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.trill.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.trill.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.trill.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.ornamentaccid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.trill.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.turn.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.turn.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.turn.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.ornamentaccid"/>
          <memberOf key="att.startid"/>
        </classes>
        <attList>
          <attDef ident="delayed" usage="opt">
            <desc>When the delayed attribute is set to 'true', the turn begins
              on the second half of the beat. See Read, p. 246.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="form" usage="opt">
            <desc>indicates whether the turn begins on the note above (norm) or
              on the note below (inv).</desc>
            <valList type="closed">
              <valItem ident="inv"/>
              <valItem ident="norm"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.cmnOrnaments" ident="att.turn.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.crit">
        <desc>Attributes common to all elements representing variant
          readings</desc>
        <classes>
          <memberOf key="att.handident"/>
          <memberOf key="att.responsibility"/>
          <memberOf key="att.sequence"/>
          <memberOf key="att.source"/>
        </classes>
        <attList>
          <attDef ident="cause" usage="opt">
            <desc>classifies the cause for the variant reading, according to any
              appropriate typology of possible origins.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.source">
        <desc>Attributes common to elements that may refer to a source</desc>
        <attList>
          <attDef ident="source" usage="opt">
            <desc>contains a list of one or more pointers indicating the sources
              which attest to a given reading. Each value should correspond to
              the ID of a &lt;source&gt; element located in the document
              header.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.rdg.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.rdg.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.rdg.log">
        <desc>Logical domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.critapp" ident="att.rdg.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.edittrans" ident="att.edit">
        <desc>Attributes describing the nature of an encoded scholarly
          intervention or interpretation</desc>
        <classes>
          <memberOf key="att.responsibility"/>
          <memberOf key="att.source"/>
        </classes>
        <attList>
          <attDef ident="cert" usage="opt">
            <desc>signifies the degree of certainty or precision associated with
              a feature.</desc>
            <datatype>
              <rng:ref name="data.CERTAINTY"/>
            </datatype>
          </attDef>
          <attDef ident="evidence" usage="opt">
            <desc>indicates the nature of the evidence supporting the
              reliability or accuracy of the intervention or interpretation.
              Suggested values include: 'internal', 'external',
              'conjecture'.</desc>
            <datatype>
              <rng:data type="NMTOKEN"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.edittrans" ident="att.agentident">
        <desc>Attributes for the identification of a causative agent</desc>
        <attList>
          <attDef ident="agent" usage="opt">
            <desc>signifies the causative agent of damage, illegibility, or
              other loss of original text.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.edittrans" ident="att.extent">
        <desc>Attributes for identification of the extent of editorial
          assertions</desc>
        <attList>
          <attDef ident="extent" usage="opt">
            <desc>indicates the extent of damage or omission.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.edittrans" ident="att.reasonident">
        <desc/>
        <attList>
          <attDef ident="reason" usage="opt">
            <desc>holds a short phrase describing the reason for missing textual
              material (gap), why material is supplied (supplied), or why
              transcription is difficult (unclear).</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.edittrans" ident="att.trans">
        <desc>Attributes for elements encoding authorial or scribal intervention
          when transcribing manuscript or similar sources</desc>
        <classes>
          <memberOf key="att.handident"/>
          <memberOf key="att.sequence"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.facsimile" ident="att.facsimile">
        <desc/>
        <attList>
          <attDef ident="facs" usage="opt">
            <desc>permits the current element to reference a facsimile image or
              image zone which corresponds to it.</desc>
            <datatype>
              <rng:data type="IDREFS"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.figtable" ident="att.tabular">
        <desc>Attributes shared by table cells</desc>
        <attList>
          <attDef ident="colspan" usage="opt">
            <desc>the number of columns spanned by this cell.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="rowspan" usage="opt">
            <desc>the number of rows spanned by this cell.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.harmony" ident="att.fretlocation">
        <desc>Attributes that describe a fret location</desc>
        <attList>
          <attDef ident="fret" usage="opt">
            <desc>records the location at which a string should be stopped
              against a fret.</desc>
            <datatype>
              <rng:ref name="data.FRET"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.harmony" ident="att.harm.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.harmony" ident="att.harm.ges">
        <desc>Gestural domain attributes</desc>
        <classes>
          <memberOf key="att.duration.performed"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.harmony" ident="att.harm.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.controlevent"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.duration.timestamp"/>
        </classes>
        <attList>
          <attDef ident="chordref" usage="opt">
            <desc>contains a reference to a &lt;chorddef&gt; element elsewhere
              in the document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.harmony" ident="att.harm.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.placement"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2.ho"/>
          <memberOf key="att.visualoffset2.to"/>
          <memberOf key="att.xy"/>
        </classes>
        <attList>
          <attDef ident="extender" usage="opt">
            <desc>indicates the presence of an extension symbol, typically a
              dash or underscore, drawn from the end of the harmonic indication
              to the point indicated by the dur attribute.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="rendgrid" usage="opt">
            <desc>when set to 'grid', the chord tablature grid defined in the
              chordtable should be rendered instead of the text contents of the
              &lt;harm&gt; element; if rendgrid equals 'gridname', both the
              &lt;harm&gt; element's text and the grid should be displayed;
              otherwise, only the 'name' of the chord, i.e., the text content of
              the &lt;harm&gt; element, e.g. 'Cmaj' or 'V7/III', should be
              rendered.</desc>
            <valList type="closed">
              <valItem ident="grid"/>
              <valItem ident="gridname"/>
            </valList>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.linkalign" ident="att.alignment">
        <desc>Temporal alignment attributes. This class of attributes is
          unavailable unless the meiLinkAlign module is included.</desc>
        <attList>
          <attDef ident="when" usage="opt">
            <desc>indicates the point of occurrence of this feature along a
              timeline. Its value must be the ID of a &lt;when&gt;
              element.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.lyrics.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.lyrics.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.lyrics.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.layerident"/>
          <memberOf key="att.staffident.required"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.lyrics.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.placement"/>
          <memberOf key="att.typography"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.verse.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.verse.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.verse.log">
        <desc>Logical domain attributes. The n attribute should be used for
          verse numbers. Numbers need not be consecutive; they may also be
          expressed as ranges, e.g. 2-3,6.</desc>
        <attList>
          <attDef ident="refrain" usage="opt">
            <desc>used to indicate a common, usually centered, refrain (Mup
              User's Guide, p. 44).</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
          <attDef ident="rhythm" usage="opt">
            <desc>used to specify a rhythm for the lyric syllables that differs
              from that of the notes on the staff, e.g. '4,4,4,4' when the
              rhythm of the notes is '4.,8,4.,8'.</desc>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.lyrics" ident="att.verse.vis">
        <desc>Visual domain attributes</desc>
        <classes>
          <memberOf key="att.typography"/>
          <memberOf key="att.visualoffset.to"/>
          <memberOf key="att.visualoffset.vo"/>
          <memberOf key="att.xy"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.channelized">
        <desc>Attributes that record MIDI channel information</desc>
        <attList>
          <attDef ident="midi.channel" usage="opt">
            <desc>records a MIDI channel value.</desc>
            <datatype>
              <rng:ref name="data.MIDICHANNEL"/>
            </datatype>
          </attDef>
          <attDef ident="midi.duty" usage="opt">
            <desc>specifies the 'on' part of the duty cycle as a percentage of a
              note's duration.</desc>
            <datatype>
              <rng:ref name="data.PERCENT"/>
            </datatype>
          </attDef>
          <attDef ident="midi.port" usage="opt">
            <desc>sets the MIDI port value.</desc>
            <datatype>
              <rng:ref name="data.MIDIVALUE"/>
            </datatype>
          </attDef>
          <attDef ident="midi.track" usage="opt">
            <desc>sets the MIDI track.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midiinstrument">
        <desc>Attributes that record MIDI instrument information</desc>
        <attList>
          <attDef ident="midi.instrnum" usage="opt">
            <desc>sets the MIDI instrument number.</desc>
            <datatype>
              <rng:ref name="data.MIDIVALUE"/>
            </datatype>
          </attDef>
          <attDef ident="midi.instrname" usage="opt">
            <desc>provides a General MIDI label for the MIDI instrument.</desc>
            <datatype>
              <rng:ref name="data.MIDINAMES"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midinumber">
        <desc>Attributes that record MIDI numbers</desc>
        <attList>
          <attDef ident="num" usage="req">
            <desc>MIDI number in the range set by data.MIDIVALUE.</desc>
            <datatype>
              <rng:ref name="data.MIDIVALUE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.miditempo">
        <desc>Attributes that record MIDI tempo information</desc>
        <attList>
          <attDef ident="midi.tempo" usage="opt">
            <desc>contains a MIDI value, that is, the number of quarter notes
              per minute in the range from 10 to 1000.</desc>
            <datatype>
              <rng:ref name="data.MIDITEMPO"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midivalue">
        <desc>Attributes that record MIDI values</desc>
        <attList>
          <attDef ident="val" usage="opt">
            <desc>MIDI number</desc>
            <datatype>
              <rng:ref name="data.MIDIVALUE"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midi.event">
        <desc>Attributes common to MIDI events</desc>
        <classes>
          <memberOf key="att.layerident"/>
          <memberOf key="att.staffident.required"/>
          <memberOf key="att.timestamp.musical"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midi.anl">
        <desc>Analytical domain attributes</desc>
        <classes>
          <memberOf key="att.common.anl"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midi.ges">
        <desc>Gestural domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midi.log">
        <desc>Logical domain attributes</desc>
        <classes>
          <memberOf key="att.layerident"/>
          <memberOf key="att.staffident.required"/>
        </classes>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.midi.vis">
        <desc>Visual domain attributes</desc>
      </classSpec>
      <classSpec type="atts" module="MEI.midi" ident="att.timebase">
        <desc>Attributes that record time-base information</desc>
        <attList>
          <attDef ident="ppq" usage="opt">
            <desc>indicates the number of pulses (sometimes referred to as ticks
              or divisions) per quarter note. Unlike MIDI, MEI permits different
              values for a score and individual staves.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.tablature"
        ident="att.staffdef.ges.tablature">
        <desc>Gestural domain attributes for staffdef in tablature</desc>
        <attList>
          <attDef ident="tab.strings" usage="opt">
            <desc>provides a written pitch and octave for each open string, e.g.
              "e3 a3 d4 g4 b4 e5" for standard guitar tuning. It should contain
              the number of tokens indicated by the lines attribute. Chromatic
              alteration may be indicated with '-', or 'f', (flat) and '#', or
              's' (sharp). Double sharps and flats are not permitted.</desc>
            <datatype>
              <rng:list>
                <rng:oneOrMore>
                  <rng:data type="NMTOKEN">
                    <rng:param name="pattern">[a-g][\-#fs]?[0-9]</rng:param>
                  </rng:data>
                </rng:oneOrMore>
              </rng:list>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <classSpec type="atts" module="MEI.tablature"
        ident="att.note.ges.tablature">
        <desc>Gestural domain attributes</desc>
        <attList>
          <attDef ident="tab.fret" usage="opt">
            <desc>records the fret at which a string should be stopped.</desc>
            <datatype>
              <rng:ref name="data.FRETNUMBER"/>
            </datatype>
          </attDef>
          <attDef ident="tab.string" usage="opt">
            <desc>records which string is to be played.</desc>
            <datatype>
              <rng:ref name="data.STRINGNUMBER"/>
            </datatype>
          </attDef>
        </attList>
      </classSpec>
      <!--****-->
      <!--Model and Macro Classes-->
      <!--****-->
      <classSpec type="model" ident="model.addressLike" module="MEI.shared">
        <desc>groups elements used to represent a postal address.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
          <memberOf key="model.pubstmtPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.annotLike" module="MEI.shared">
        <desc>groups annotation-like elements.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.biblLike" module="MEI.shared">
        <desc>groups elements containing a bibliographic description.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.biblPart" module="MEI.shared">
        <desc>groups elements that may appear as part of a bibliographic
          description.</desc>
      </classSpec>
      <classSpec type="model" ident="model.captionLike" module="MEI.shared">
        <desc>groups elements that contain the text of a caption or other text
          displayed along with a figure.</desc>
      </classSpec>
      <classSpec type="model" ident="model.controleventLike" module="MEI.shared">
        <desc/>
        <classes>
          <memberOf key="model.measurePart"/>
          <memberOf key="model.layerPart.mensural"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.clefchangePart" module="MEI.shared">
        <desc>groups elements that contain information regarding changes of
          clef.</desc>
      </classSpec>
      <classSpec type="model" ident="model.dateLike" module="MEI.shared">
        <desc>groups elements containing date expressions.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
          <memberOf key="model.pubstmtPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.editionLike" module="MEI.shared">
        <desc>groups elements containing bibliographic edition
          information.</desc>
        <classes>
          <memberOf key="model.biblPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.editorialLike" module="MEI.shared">
        <desc>groups editorial intervention elements.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
          <memberOf key="model.choicePart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.endingLike" module="MEI.shared">
        <desc>groups elements that represent alternative endings.</desc>
        <classes>
          <memberOf key="model.scorePart"/>
          <memberOf key="model.sectionPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.eventLike" module="MEI.shared">
        <desc>groups event elements that occur in all notational
          repertoires.</desc>
        <classes>
          <memberOf key="model.layerPart"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.identifierLike" module="MEI.shared">
        <desc>groups identifier-like elements.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
          <memberOf key="model.pubstmtPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.instrdefLike" module="MEI.shared">
        <desc>groups elements used to declare a MIDI instrument.</desc>
      </classSpec>
      <classSpec type="model" ident="model.keyaccidLike" module="MEI.shared">
        <desc>groups elements that represent accidentals in a key
          signature.</desc>
      </classSpec>
      <classSpec type="model" ident="model.keysigLike" module="MEI.shared">
        <desc>groups elements that have the same function as a key
          signature.</desc>
        <classes>
          <memberOf key="model.eventLike"/>
          <memberOf key="model.staffdefPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.labelLike" module="MEI.shared">
        <desc>groups elements used to assign a label to other parts of a
          document.</desc>
      </classSpec>
      <classSpec type="model" ident="model.layerdefLike" module="MEI.shared">
        <desc>groups elements that permit declaration of layer
          properties.</desc>
      </classSpec>
      <classSpec type="model" ident="model.layerLike" module="MEI.shared">
        <desc>groups elements that function as notational layers within a
          staff.</desc>
        <classes>
          <memberOf key="model.staffPart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.lbLike" module="MEI.shared">
        <desc>groups elements that function like line breaks.</desc>
        <classes>
          <memberOf key="model.milestoneLike.text"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.layerPart" module="MEI.shared">
        <desc>groups notated events at the layer level.</desc>
      </classSpec>
      <classSpec type="model" ident="model.mdivLike" module="MEI.shared">
        <desc>groups elements used to represent generic structural divisions of
          music notation.</desc>
      </classSpec>
      <macroSpec type="pe" ident="macro.metaLike.page" module="MEI.shared">
        <desc>groups elements that contain meta-data about a single page.</desc>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="fw"/>
          </rng:zeroOrMore>
          <rng:optional>
            <rng:ref name="pgdesc"/>
          </rng:optional>
        </content>
      </macroSpec>
      <classSpec type="model" ident="model.metaLike.score" module="MEI.shared">
        <desc>groups meta-data elements that may appear in running headers or
          footers of a score.</desc>
      </classSpec>
      <classSpec type="model" ident="model.measurementLike" module="MEI.shared">
        <desc>groups elements that represent a measurement.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.milestoneLike.music"
        module="MEI.shared">
        <desc>groups milestone-style elements found in music notation.</desc>
      </classSpec>
      <classSpec type="model" ident="model.milestoneLike.text"
        module="MEI.shared">
        <desc>groups milestone-style elements found in text.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
        </classes>
      </classSpec>
      <macroSpec type="pe" ident="macro.musicPart" module="MEI.shared">
        <desc>groups elements that may appear as part of a music element.</desc>
        <content>
          <rng:optional>
            <rng:ref name="model.frontLike"/>
          </rng:optional>
          <rng:optional>
            <rng:choice>
              <rng:ref name="body"/>
              <rng:ref name="group"/>
            </rng:choice>
          </rng:optional>
          <rng:optional>
            <rng:ref name="model.backLike"/>
          </rng:optional>
        </content>
      </macroSpec>
      <classSpec type="model" ident="model.nameLike" module="MEI.shared">
        <desc>groups elements that contain names.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.noteModifierLike" module="MEI.shared">
        <desc>groups elements that modify note-like features.</desc>
        <classes>
          <memberOf key="model.layerPart.mensural"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.numLike" module="MEI.shared">
        <desc>groups elements that denote a number or a quantity.</desc>
        <classes>
          <memberOf key="model.measurementLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.paracontentPart" module="MEI.shared">
        <desc>groups elements which may appear as part of the paragraph content
          model. A paragraph may contain inline elements and all the other
          block-level elements except lg and itself.</desc>
      </classSpec>
      <classSpec type="model" ident="model.pLike" module="MEI.shared">
        <desc>groups paragraph-like elements.</desc>
        <classes>
          <memberOf key="model.textcomponentLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.partLike" module="MEI.shared">
        <desc>groups elements that represent a separate performer part.</desc>
      </classSpec>
      <classSpec type="model" ident="model.partsLike" module="MEI.shared">
        <desc>groups elements that group separate performer parts.</desc>
      </classSpec>
      <classSpec type="model" ident="model.pbLike" module="MEI.shared">
        <desc>groups pagebreak-like elements.</desc>
        <classes>
          <memberOf key="model.milestoneLike.music"/>
          <memberOf key="model.milestoneLike.text"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.rendLike" module="MEI.shared">
        <desc>groups elements that mark typographical features.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.repositoryLike" module="MEI.shared">
        <desc>groups elements that denote a corporate entity that holds a
          bibliographic item.</desc>
        <classes>
          <memberOf key="model.physdescPart"/>
          <memberOf key="model.nameLike.place"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.scoredefLike" module="MEI.shared">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.scoreLike" module="MEI.shared">
        <desc>groups elements that represent a score.</desc>
      </classSpec>
      <classSpec type="model" ident="model.scorePart" module="MEI.shared">
        <desc>groups elements that may appear as part of a score.</desc>
      </classSpec>
      <classSpec type="model" ident="model.sectionLike" module="MEI.shared">
        <desc>groups elements that represent a segment of music notation.</desc>
        <classes>
          <memberOf key="model.scorePart"/>
          <memberOf key="model.sectionPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.sectionPart" module="MEI.shared">
        <desc>groups elements that may appear as part of a section.</desc>
        <classes>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.staffdefLike" module="MEI.shared">
        <desc>groups elements that permit declaration of staff
          properties.</desc>
      </classSpec>
      <classSpec type="model" ident="model.staffdefPart" module="MEI.shared">
        <desc>groups elements that may appear more than once in the declaration
          of staff features.</desc>
      </classSpec>
      <classSpec type="model" ident="model.staffgrpLike" module="MEI.shared">
        <desc>groups elements that permit declaration of staff group
          properties.</desc>
      </classSpec>
      <classSpec type="model" ident="model.staffLike" module="MEI.shared">
        <desc>groups elements that function like staves.</desc>
        <classes>
          <memberOf key="model.sectionPart"/>
          <memberOf key="model.measurePart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.staffPart" module="MEI.shared">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.textcomponentLike"
        module="MEI.shared">
        <desc>groups block-level text elements.</desc>
        <classes>
          <memberOf key="model.rdgPart.text"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.textphraseLike" module="MEI.shared">
        <desc>Phrase-level text elements.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.textphraseLike.limited"
        module="MEI.shared">
        <desc>groups textual elements that occur as part of the representation
          of the score, as opposed to the textual matter which accompanies it.
          This class is equivalent to the model.textphraseLike class without the
          pb element.</desc>
        <classes>
          <memberOf key="model.rdgPart.text"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.titleLike" module="MEI.shared">
        <desc>groups elements that denote names of a bibliographic item.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.startLike.header" module="MEI.header">
        <desc/>
      </classSpec>
      <macroSpec type="pe" ident="macro.availabilityPart" module="MEI.header">
        <desc>groups elements that may appear as part of a description of the
          availability of and access to a bibliographic item.</desc>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="acqsource"/>
            <rng:zeroOrMore>
              <rng:ref name="accessdesc"/>
              <rng:optional>
                <rng:ref name="price"/>
              </rng:optional>
            </rng:zeroOrMore>
          </rng:zeroOrMore>
          <rng:optional>
            <rng:ref name="userestrict"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="sysreq"/>
          </rng:optional>
        </content>
      </macroSpec>
      <classSpec type="model" ident="model.editorialdeclPart"
        module="MEI.header">
        <desc>groups elements that may appear as part of a description of the
          editorial process applied to the encoding of notation.</desc>
      </classSpec>
      <classSpec type="model" ident="model.encodingPart" module="MEI.header">
        <desc>groups elements that may appear as part of information regarding
          the encoding process.</desc>
      </classSpec>
      <classSpec type="model" ident="model.frontPart" module="MEI.header">
        <desc>groups elements that may appear as part of front matter.</desc>
        <classes>
          <memberOf key="model.physdescPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.headerPart" module="MEI.header">
        <desc>groups elements that may appear as part of the MEI header.</desc>
      </classSpec>
      <classSpec type="model" ident="model.physdescPart" module="MEI.header">
        <desc>groups elements that may appear as part of the physical
          description of a bibliographic item.</desc>
      </classSpec>
      <macroSpec type="pe" ident="macro.profiledescPart" module="MEI.header">
        <desc>groups elements that may appear as part of the profile
          description.</desc>
        <content>
          <rng:optional>
            <rng:ref name="creation"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="langusage"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="classification"/>
          </rng:optional>
          <rng:zeroOrMore>
            <rng:ref name="eventlist"/>
          </rng:zeroOrMore>
        </content>
      </macroSpec>
      <classSpec type="model" ident="model.pubstmtPart" module="MEI.header">
        <desc>groups elements that may appear as part of the publication
          statement for a bibliographic item.</desc>
      </classSpec>
      <classSpec type="model" ident="model.controleventLike.cmn"
        module="MEI.cmn">
        <desc>groups control events that appear in CMN notation.</desc>
        <classes>
          <memberOf key="model.controleventLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.layerPart.cmn" module="MEI.cmn">
        <desc>groups notated events at the layer level.</desc>
        <classes>
          <memberOf key="model.layerPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.eventLike.cmn" module="MEI.cmn">
        <desc>groups events that appear in CMN notation.</desc>
        <classes>
          <memberOf key="model.eventLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.eventLike.measureFilling"
        module="MEI.cmn">
        <desc>groups events that appear in CMN notation and that completely fill
          a measure.</desc>
        <classes>
          <memberOf key="model.layerPart.cmn"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.measureLike" module="MEI.cmn">
        <desc>groups measure-like elements.</desc>
        <classes>
          <memberOf key="model.sectionPart.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.measurePart" module="MEI.cmn">
        <desc>groups elements that may appear as part of a measure.</desc>
      </classSpec>
      <classSpec type="model" ident="model.ossiaLike" module="MEI.cmn">
        <desc>groups elements that function like ossia.</desc>
        <classes>
          <memberOf key="model.measurePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.sectionPart.cmn" module="MEI.cmn">
        <desc>groups elements that may appear as part of a section.</desc>
        <classes>
          <memberOf key="model.sectionPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.eventLike.mensural"
        module="MEI.mensural">
        <desc/>
        <classes>
          <memberOf key="model.eventLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.layerPart.mensural"
        module="MEI.mensural">
        <desc>groups notated events at the layer level.</desc>
        <classes>
          <memberOf key="model.layerPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.staffdefPart.mensural"
        module="MEI.mensural">
        <desc>groups elements that may appear more than once in the declaration
          of staff features.</desc>
        <classes>
          <memberOf key="model.staffdefPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.eventLike.neumes" module="MEI.neumes">
        <desc/>
        <classes>
          <memberOf key="model.layerPart"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.layerPart.neumes" module="MEI.neumes">
        <desc/>
        <classes>
          <memberOf key="model.layerPart"/>
        </classes>
      </classSpec>
      <macroSpec type="pe" ident="macro.neumeModifierLike" module="MEI.neumes">
        <desc>groups elements that modify neume-like features.</desc>
        <content>
          <rng:empty/>
        </content>
      </macroSpec>
      <classSpec type="model" ident="model.syllableLike" module="MEI.neumes">
        <desc>groups elements that accommodate neumed text.</desc>
        <classes>
          <memberOf key="model.layerPart.neumes"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.syllablePart" module="MEI.neumes">
        <desc>groups elements that may appear as part of content of a
          syllable.</desc>
      </classSpec>
      <classSpec type="model" ident="model.ornamentLike.cmn"
        module="MEI.cmnOrnaments">
        <desc>groups CMN ornament elements.</desc>
        <classes>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.startLike.corpus" module="MEI.corpus">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.appLike" module="MEI.critapp">
        <desc>groups elements that contain a critical apparatus entry.</desc>
      </classSpec>
      <classSpec type="model" ident="model.rdgPart.critapp" module="MEI.critapp">
        <desc>groups elements that may appear as part of a textual
          variant.</desc>
      </classSpec>
      <classSpec type="model" ident="model.choicePart" module="MEI.edittrans">
        <desc>groups elements that may appear as part of the content of a choice
          element.</desc>
      </classSpec>
      <classSpec type="model" ident="model.editLike" module="MEI.edittrans">
        <desc>groups elements for editorial interventions that may be useful
          both in transcribing and in authoring.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.transcriptionLike"
        module="MEI.edittrans">
        <desc>groups elements used for editorial transcription of pre-existing
          source materials.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.facsimileLike" module="MEI.facsimile">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.figureLike" module="MEI.figtable">
        <desc/>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.graphicLike" module="MEI.figtable">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.figdescLike" module="MEI.figtable">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.tableLike" module="MEI.figtable">
        <desc>groups table-like elements.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
          <memberOf key="model.textcomponentLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.chordtableLike" module="MEI.harmony">
        <desc>groups elements that group playable chord definitions.</desc>
      </classSpec>
      <classSpec type="model" ident="model.harmLike" module="MEI.harmony">
        <desc>groups elements that record harmony.</desc>
        <classes>
          <memberOf key="model.controleventLike.harmony"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.controleventLike.harmony"
        module="MEI.harmony">
        <desc>groups elements that function as control events; that is, those
          events that modify or otherwise depend on the existence of notated
          events.</desc>
        <classes>
          <memberOf key="model.controleventLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.alignLike" module="MEI.linkalign">
        <desc>groups elements that are used for temporal alignment.</desc>
      </classSpec>
      <classSpec type="model" ident="model.lyricsLike" module="MEI.lyrics">
        <desc>groups elements that represent sung text.</desc>
        <classes>
          <memberOf key="model.measurePart"/>
          <memberOf key="model.layerPart.mensural"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.sylLike" module="MEI.lyrics">
        <desc>groups elements that contain a lyric syllable.</desc>
        <classes>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.verseLike" module="MEI.lyrics">
        <desc>groups elements that contain a lyric verse.</desc>
        <classes>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.midiLike" module="MEI.midi">
        <desc>groups elements which group MIDI-like elements.</desc>
        <classes>
          <memberOf key="model.layerPart"/>
          <memberOf key="model.measurePart"/>
          <memberOf key="model.syllablePart"/>
          <memberOf key="model.rdgPart.critapp"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.nameLike.agent"
        module="MEI.namesdates">
        <desc>groups elements which contain names of individuals or corporate
          bodies.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.nameLike.geogname"
        module="MEI.namesdates">
        <desc>groups geographic name elements.</desc>
        <classes>
          <memberOf key="model.pubstmtPart"/>
          <memberOf key="model.nameLike.place"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.nameLike.place"
        module="MEI.namesdates">
        <desc>groups place name and repository elements.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.nameLike.label"
        module="MEI.namesdates">
        <desc>groups elements that serve as stylistic labels.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.locrefLike" module="MEI.ptrref">
        <desc>groups elements used for purposes of location and
          reference.</desc>
        <classes>
          <memberOf key="model.textphraseLike"/>
          <memberOf key="model.textphraseLike.limited"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.ptrLike" module="MEI.ptrref">
        <desc>groups empty elements used for purposes of location and
          reference.</desc>
        <classes>
          <memberOf key="model.locrefLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.backLike" module="MEI.text">
        <desc>groups elements that may contain back matter.</desc>
        <classes>
          <memberOf key="model.musicPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.divLike" module="MEI.text">
        <desc>groups elements used to represent generic structural divisions of
          text.</desc>
      </classSpec>
      <classSpec type="model" ident="model.frontLike" module="MEI.text">
        <desc>groups elements that may contain front matter.</desc>
        <classes>
          <memberOf key="model.musicPart"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.headLike" module="MEI.text">
        <desc>groups elements used to provide a heading at the start of a text
          division.</desc>
      </classSpec>
      <classSpec type="model" ident="model.lLike" module="MEI.text">
        <desc>groups elements representing metrical components such as verse
          lines.</desc>
      </classSpec>
      <classSpec type="model" ident="model.listLike" module="MEI.text">
        <desc>groups list-like elements.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
          <memberOf key="model.textcomponentLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.quoteLike" module="MEI.text">
        <desc>groups elements used to directly contain quotations.</desc>
        <classes>
          <memberOf key="model.paracontentPart"/>
          <memberOf key="model.textcomponentLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.rdgPart.text" module="MEI.text">
        <desc/>
      </classSpec>
      <classSpec type="model" ident="model.lgLike" module="MEI.text">
        <desc>groups elements that have a line-grouping function.</desc>
        <classes>
          <memberOf key="model.textcomponentLike"/>
        </classes>
      </classSpec>
      <classSpec type="model" ident="model.graphicprimitiveLike"
        module="MEI.usersymbols">
        <desc>groups elements that function as drawing primitives.</desc>
      </classSpec>
      <classSpec type="model" ident="model.symboltableLike"
        module="MEI.usersymbols">
        <desc>groups elements that group symbol definitions.</desc>
      </classSpec>
      <!--****-->
      <!--Model Classes-->
      <!--****-->
      <elementSpec ident="abbr" module="MEI.shared">
        <desc>abbreviation ― A generic element for a shortened form of a word,
          including an acronym. The type attribute may be used to classify the
          abbreviation according to some convenient typology. Sample values
          include: suspension - the abbreviation provides the first letter(s) of
          the word or phrase, omitting the remainder; contraction - the
          abbreviation omits some letter(s) in the middle; brevigraph - the
          abbreviation comprises a special symbol or mark; superscription - the
          abbreviation includes writing above the line; acronym - the
          abbreviation comprises the initial letters of the words of a phrase;
          title - the abbreviation is for a title of address (Dr, Ms, Mr, ...);
          organization - the abbreviation is for the name of an organization;
          geographic - the abbreviation is for a geographic name. This tag is
          the mirror image of the &lt;expan&gt; tag; both allow the encoder to
          transcribe both an abbreviation and its expansion. In &lt;abbr&gt;,
          however, the original is transcribed as the content of the element and
          the expansion as an attribute value; &lt;expan&gt; reverses this. The
          choice between the two is up to the user. The &lt;abbr&gt; tag is not
          required; if appropriate, the encoder may transcribe abbreviations in
          the source text silently, without tagging them. If abbreviations are
          not transcribed directly but expanded silently, then the MEI header
          should so indicate. The cert attribute signifies the degree of
          certainty ascribed to the expansion of the abbreviation. The expan
          attribute gives an expansion of the abbreviation. The resp attribute
          contains an ID reference to an element containing the name of the
          editor or transcriber responsible for supplying the expansion of the
          abbreviation. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.trans"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.editorialLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="expan" usage="opt">
            <desc>records the expansion of the abbreviation.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="accid" module="MEI.shared">
        <desc>accidental ― Records a temporary alteration to the pitch of a
          note. An accidental may raise a pitch by one or two semitones or it
          may cancel a previous accidental or part of a key signature. This
          element provides an alternative to the accid and accid.ges attributes
          on the &lt;note&gt; element. The element should be used when specific
          display info, such as size or color, needs to be recorded for the
          accidental or when multiple accidentals occur on a single note. The
          func attribute can be used to differentiate between the accidental's
          functions, such as 'cautionary' or 'editorial'.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typography"/>
          <memberOf key="att.accid.log"/>
          <memberOf key="att.accid.vis"/>
          <memberOf key="att.accid.ges"/>
          <memberOf key="att.accid.anl"/>
          <memberOf key="model.noteModifierLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="address" module="MEI.shared">
        <desc>address ― Contains a postal address, for example of a publisher,
          an organization, or an individual. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.addressLike"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="addressline"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="addressline" module="MEI.shared">
        <desc>addressline ― Single line of a postal address. This element may be
          repeated as many times as necessary to enter all lines of an address.
          This element is modelled on elements in Encoded Archival Description
          (EAD) and the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="annot" module="MEI.shared">
        <desc>annotation ― Provides a short statement explaining the text or
          indicating the basis for an assertion. It is used for both general
          comments and for an annotation of the musical text. &lt;annot&gt;
          provides a way to group participating *events* and/or *control
          events*, the notes that form a descending bass line or phrase marks,
          for example, and provide a label for or comment regarding the group. A
          list of event IDs may be given in the plist attribute. An editorial or
          analytical comment or observation, encoded elsewhere, such as in the
          front or back matter, in score text elements, or in an external
          document may be pointed to using the link.common, link.internal, or
          link.external attributes. Alternatively, the observation may be
          included directly within the &lt;annot&gt; element. The &lt;annot&gt;
          element, along with other elements with attributes from the
          att.link.external class, may also be used to link/synchronize elements
          within the MEI file to external media such as images or sound
          recordings. The ID of the MEI element(s) to be linked from should be
          encoded in the plist attribute while the link to the external media
          may be encoded in the href or entityref attributes or in the body of
          the annotation using &lt;extref&gt; or &lt;extptr&gt; elements. The
          starting point of the annotation may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute, while the ending point
          may be recorded by either a dur, dur.ges or endid attribute. The resp
          attribute records the editor(s) responsible for identifying or
          creating the annotation.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.source"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.annot.log"/>
          <memberOf key="att.annot.vis"/>
          <memberOf key="att.annot.ges"/>
          <memberOf key="att.annot.anl"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.responsibility"/>
          <memberOf key="model.annotLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="artic" module="MEI.shared">
        <desc>articulation ― An indication of how to play a note or chord.
          Articulations typically affect duration, such as staccato marks, or
          the force of attack, such as accents. This element provides an
          alternative to the artic attributes on the &lt;note&gt; and
          &lt;chord&gt; elements. It should be used when specific display info,
          such as size or color, needs to be recorded for the articulation or
          when multiple articulation marks occur on a single note or
          chord.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typography"/>
          <memberOf key="att.artic.log"/>
          <memberOf key="att.artic.vis"/>
          <memberOf key="att.artic.ges"/>
          <memberOf key="att.artic.anl"/>
          <memberOf key="model.noteModifierLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="barline" module="MEI.shared">
        <desc>barline ― Vertical line drawn through one or more staves that
          divides musical notation into metrical units. This element is provided
          for repertoires, such as mensural notation, that lack measures.
          Because the barline element's attributes, from which the logical and
          visual characteristics of the barline can be discerned, largely
          duplicate those of measure, the use of barline is not necessary within
          measure elements in CMN.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.barline.log"/>
          <memberOf key="att.barline.vis"/>
          <memberOf key="att.barline.ges"/>
          <memberOf key="att.barline.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_barlinetaktplace" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:barline[@taktplace]">
              <sch:let name="staff" value="ancestor::mei:staff/@n"/>
              <sch:let name="staffpos"
                value="count(ancestor::mei:staff/preceding-sibling::mei:staff) +
                1"/>
              <sch:assert
                test="number(@taktplace) &lt;= number(2 * preceding::mei:staffdef[@n=$staff and @lines][1]/@lines)"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="bibl" module="MEI.shared">
        <desc>bibliographic reference ― Provides a citation for a published
          work. &lt;bibref&gt; may contain a mix of text and more specific
          elements such as &lt;title&gt;, &lt;edition&gt;, &lt;persname&gt;, and
          &lt;corpname&gt;. This element may also function as a hypertext
          reference to an external electronic resource. Do not confuse this
          element with &lt;ref&gt;, which is an internal link from one place in
          the MEI document to another place in the same document.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="model.biblLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.biblPart"/>
              <rng:ref name="model.textphraseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="body" module="MEI.shared">
        <desc>body ― This element contains the actual music data of the MEI
          encoding, as opposed to the header, front, and back elements, which do
          not. When the music can be broken into high-level, discrete, linear
          segments, such as movements of a symphony, there may be multiple
          &lt;mdiv&gt; elements within this element. This is the highest level
          indication of the structure of the music. This element is modelled on
          an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.musicPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.mdivLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="caption" module="MEI.shared">
        <desc>caption ― A label which accompanies an illustration or a
          table.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.captionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="chord" module="MEI.shared">
        <desc>chord ― A simultaneous sounding of two or more notes in the same
          layer *with the same duration*.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.chord.log"/>
          <memberOf key="att.chord.vis"/>
          <memberOf key="att.chord.ges"/>
          <memberOf key="att.chord.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="note"/>
              <rng:ref name="artic"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:chord[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="clef" module="MEI.shared">
        <desc>clef ― Indication of the exact location of a particular note on
          the staff and, therefore, the other notes as well. This element
          provides an alternative to the staff element's clef.* attributes. It
          should be used when specific display info, such as size or color,
          needs to be recorded for the clef or when multiple, simultaneous clefs
          occur on a single staff.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.clef.anl"/>
          <memberOf key="att.clef.ges"/>
          <memberOf key="att.clef.log"/>
          <memberOf key="att.clef.vis"/>
          <memberOf key="model.clefchangePart"/>
          <memberOf key="model.staffdefPart"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_clef_position_clef" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:clef[ancestor::mei:staffdef[@lines]]">
              <sch:let name="thisstaff" value="ancestor::mei:staffdef/@n"/>
              <sch:assert
                test="number(@line) &lt;=
                number(ancestor::mei:staffdef[@n=$thisstaff and @lines][1]/@lines)"
                >The clef position must be less than or equal to the number of
                lines on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_clef_position_clef" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:clef[ancestor::mei:staffdef[not(@lines)]]">
              <sch:let name="thisstaff" value="ancestor::mei:staffdef/@n"/>
              <sch:assert
                test="number(@line) &lt;= number(preceding::mei:staffdef[@n=$thisstaff and
                @lines][1]/@lines)"
                >The clef position must be less than or equal to the number of
                lines on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="clefchange" module="MEI.shared">
        <desc>clef change ― A temporary change of clef.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.event"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.clefchange.log"/>
          <memberOf key="att.clefchange.vis"/>
          <memberOf key="att.clefchange.ges"/>
          <memberOf key="att.clefchange.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:ref name="model.clefchangePart_sequenceOptionalRepeatable"/>
        </content>
        <constraintSpec ident="Check_clef_position_clefchange"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:clefchange[@line]">
              <sch:let name="thisstaff" value="ancestor::staff/@n"/>
              <sch:let name="staffpos"
                value="count(ancestor::mei:staff/preceding-sibling::mei:staff) +
                1"/>
              <sch:assert
                test="number(@line) &lt;=
                number(preceding::mei:staffdef[@n=$thisstaff and
                @lines][1]/@lines) or number(@line) &lt;=
                number(preceding::mei:staffdef[@n=$staffpos and
                @lines][1]/@lines)"
                >The clef position must be less than or equal to the number of
                lines on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="custos" module="MEI.shared">
        <desc>custos ― Symbol placed at the end of a line of music to indicate
          the first note of the next line. Sometimes called a "direct". The most
          common visual form is a sign resembling a mordent. Other graphical
          forms may be indicated by the altsym attribute. Together the pname and
          oct attributes identify the location where the custos appears. </desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.source"/>
          <memberOf key="att.custos.log"/>
          <memberOf key="att.custos.vis"/>
          <memberOf key="att.custos.ges"/>
          <memberOf key="att.custos.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_custostarget" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:custos[@target]">
              <sch:let name="thistarget" value="@target"/>
              <sch:assert
                test="@target = 
                following::mei:note[@xml:id=$thistarget]/@xml:id"
                >The value of @target must be the ID of a note
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="date" module="MEI.shared">
        <desc>date ― A date in any format, including a date range. A date range
          may be expressed either as textual content, e.g., &lt;date&gt;March
          1-21, 1812&lt;/date&gt;, or using date sub-elements, possibly combined
          with text, e.g., &lt;date&gt; &lt;date&gt;March 1, 1812&lt;/date&gt; -
          &lt;date&gt;March 21, 1812&lt;/date&gt; &lt;/date&gt;. The latter form
          is useful when the starting and ending points of the date range
          require qualification. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.calendared"/>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.dateLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="dir" module="MEI.shared">
        <desc>directive ― A text expression that is on the score (typically
          above, below, or between staves, but not on the staff) not encoded
          elsewhere in more specific elements, such as &lt;tempo&gt; or
          &lt;dynam&gt;. Examples include text strings, such as 'affettuoso' or
          fingering numbers, and music symbols, such as segno and coda symbols,
          fermatas over a barline, etc. Directives can be control elements. That
          is, they can linked via their attributes to other events. The starting
          point of the directive may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute, while the ending point
          may be recorded by either a dur, dur.ges or endid attribute. It is a
          semantic error not to specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.dir.log"/>
          <memberOf key="att.dir.vis"/>
          <memberOf key="att.dir.ges"/>
          <memberOf key="att.dir.anl"/>
          <memberOf key="model.controleventLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:dir">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="dot" module="MEI.shared">
        <desc>dot ― This element provides an alternative to the dots attribute
          on chord, note, rest, space, tuplet, and tupletspan elements. It
          should be used when specific display info, such as size or color,
          needs to be recorded for the dot. This element may also be used for
          dots of division in the mensural repertoire.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.dot.log"/>
          <memberOf key="att.dot.vis"/>
          <memberOf key="att.dot.ges"/>
          <memberOf key="att.dot.anl"/>
          <memberOf key="model.noteModifierLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="dynam" module="MEI.shared">
        <desc>dynamic ― Indication of the volume of a note, phrase, or section
          of music. This element may be used for instantaneous or continuous
          textual dynamics, e.g. 'p', 'mf', or 'cresc. poco a poco'. The
          &lt;hairpin&gt; element should be used for graphical, i.e., crescendo
          and diminuendo, dynamic markings. The starting point of the dynamic
          marking may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify a starting point attribute. Please note that the dur attribute
          is not a true duration, but rather a time stamp for the end point of
          the dynamic mark. A MIDI value associated with the graphical dynamic
          sign may be recorded in the val attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.dynam.log"/>
          <memberOf key="att.dynam.vis"/>
          <memberOf key="att.dynam.ges"/>
          <memberOf key="att.dynam.anl"/>
          <memberOf key="model.controleventLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:dynam">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="edition" module="MEI.shared">
        <desc>edition designation ― A word or text phrase that indicates a
          difference in either content or form between the item being described
          and a related item previously issued by the same publisher/distributor
          (e.g. 2nd edition, version 2.0, etc.), or simultaneously issued by
          either the same publisher/distributor or another publisher/distributor
          (e.g. large print edition, British edition, etc.). This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.editionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="ending" module="MEI.shared">
        <desc>ending ― Alternative ending for a repeated passage of music; i.e.,
          prima volta, seconda volta, etc. The scoredef element is allowed as a
          sub-element so that an ending may have its own meta-data without the
          overhead of child &lt;section&gt;s. Div sub-elements are not allowed
          within ending in order to avoid collisions with the brackets that are
          usually displayed over endings. Endings may *not* contain other ending
          elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.ending.anl"/>
          <memberOf key="att.ending.ges"/>
          <memberOf key="att.ending.log"/>
          <memberOf key="att.ending.vis"/>
          <memberOf key="model.endingLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="expansion"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.sectionPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="expan" module="MEI.shared">
        <desc>expansion ― Contains the expansion of an abbreviation. The type
          attribute may be used to classify the abbreviation according to some
          convenient typology. This element is the mirror image of &lt;abbr&gt;.
          Both allow the encoder to transcribe both an abbreviation and its
          expansion. In &lt;abbr&gt;, however, the original is transcribed as
          the content of the element and the expansion as an attribute value;
          &lt;expan&gt; reverses this. The choice between the two elements is up
          to the user. If appropriate, the encoder may expand abbreviations in
          the source text silently, without tagging them. If this is done, the
          MEI header should indicate this has been done. The abbr attribute
          gives the abbreviation in its unexpanded form. The cert attribute
          signifies the degree of certainty ascribed to the expansion of the
          abbreviation. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible
          for supplying the expansion of the abbreviation held as the content of
          the &lt;expan&gt; element. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.trans"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.editorialLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="abbr" usage="opt">
            <desc>captures the unabbreviated form of the text.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="expansion" module="MEI.shared">
        <desc>expansion ― Indicates how a section may be programmatically
          expanded into its 'through-composed' form. The plist attribute
          contains an ordered list of IDs of descendant &lt;section&gt;,
          &lt;ending&gt;, &lt;lem&gt;, or &lt;rdg&gt; elements. For example, the
          sequence "A End1 A End2" indicates that the section labelled 'A' comes
          first, then the ending labelled 'End1', followed by the 'A' section
          again, and finally the ending labelled 'End2'.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.source"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.participantident"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_expansionplist" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:expansion[@plist]">
              <sch:assert
                test="every $i in tokenize(@plist, '\s+') satisfies
                $i=ancestor::mei:section/descendant::mei:*[name()='section' or
                name()='ending' or name()='rdg'][@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="fw" module="MEI.shared">
        <desc>forme work ― This element is intended for capture of header/footer
          material that is non-repeating; that is, it occurs on isolated pages.
          For recurring headers and footers use pgheadN and pgfootN elements.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.metaLike.page"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.appLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="group" module="MEI.shared">
        <desc>group ― Enables the gathering of multiple documents into a single
          file. Because its model contains the music element, each of the
          documents can have its own front and back matter. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.musicPart"/>
        </classes>
        <content>
          <rng:choice>
            <rng:ref name="music"/>
            <rng:ref name="group"/>
          </rng:choice>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="music"/>
              <rng:ref name="group"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="grpsym" module="MEI.shared">
        <desc>group symbol ― A brace or bracket used to group two or more staves
          of a score or part. This element provides an alternative to the
          staffgrp element's symbol attribute. It may be used when exact
          placement or editorial details for the grouping symbol must be
          recorded.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.grpsym.log"/>
          <memberOf key="att.grpsym.vis"/>
          <memberOf key="att.grpsym.ges"/>
          <memberOf key="att.grpsym.anl"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.labelLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="identifier" module="MEI.shared">
        <desc>identifier ― An alpha-numeric string that establishes the identity
          of the described material, such as an International Standard
          Book/Music Number, Library of Congress Control Number, publisher's
          number, plate number, a personal identification number, an entry in a
          bibliography or catalog, etc. The type attribute may be used to
          indicate the system from which the identifier was derived.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.identifierLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="instrgrp" module="MEI.shared">
        <desc>instrument group ― Collects MIDI instrument definitions.</desc>
        <classes>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.instrdefLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="instrdef" module="MEI.shared">
        <desc>instrument definition ― MIDI instrument declaration. This element
          provides a starting or default instrument declaration for a staff, a
          group of staves, or a layer. MIDI prog elements may then change the
          instrument as necessary.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.channelized"/>
          <memberOf key="att.midiinstrument"/>
          <memberOf key="model.instrdefLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="keyaccid" module="MEI.shared">
        <desc>key accidental ― Accidental in a key signature. It is a semantic
          error not to provide either the x and y pair of attributes or the
          staffloc attribute.</desc>
        <classes>
          <memberOf key="att.accidental"/>
          <memberOf key="att.common"/>
          <memberOf key="att.enclosingchars"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.pitched"/>
          <memberOf key="att.staffloc"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.keyaccidLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>specifies whether the accidental allows written enharmonic
              values (explicit) or only performed (implicit) values.</desc>
            <valList type="closed">
              <valItem ident="implicit"/>
              <valItem ident="explicit"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="keysig" module="MEI.shared">
        <desc>key signature ― This element may be used as an alternative to the
          key.* attributes (especially key.sig.mixed) on scoredef and
          staffdef.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.accidental"/>
          <memberOf key="att.pitch"/>
          <memberOf key="model.keysigLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.keyaccidLike"/>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="mode" usage="opt">
            <desc>indicates major, minor, or other tonality.</desc>
            <datatype>
              <rng:ref name="data.MODE"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="label" module="MEI.shared">
        <desc>label ― A text string that identifies a staff or staff
          group.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.source"/>
          <memberOf key="model.labelLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="layer" module="MEI.shared">
        <desc>layer ― An independent stream of events on a staff. The term
          'layer' in used instead of 'voice' in order to avoid confusion between
          'voice' and 'voice leading'. The n attribute is used to establish a
          connection back to the appropriate layerdef element.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.layer.log"/>
          <memberOf key="att.layer.vis"/>
          <memberOf key="att.layer.ges"/>
          <memberOf key="att.layer.anl"/>
          <memberOf key="model.layerLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.layerPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="layerdef" module="MEI.shared">
        <desc>layer definition ― Container for layer meta-information.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.layerdef.log"/>
          <memberOf key="att.layerdef.vis"/>
          <memberOf key="att.layerdef.ges"/>
          <memberOf key="att.layerdef.anl"/>
          <memberOf key="model.layerdefLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.instrdefLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="lb" module="MEI.shared">
        <desc>line break ― An empty formatting element that forces text to begin
          on a new line. The n attribute should be used to record a label for
          the line, i.e., most likely a line number. See comment on
          &lt;verse&gt; element for description of func attribute. Do not
          confuse this element with the &lt;sb&gt; element, which performs a
          similar function for musical notation. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.source"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.lbLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="func" usage="opt">
            <desc>states whether the line break follows a single line or a line
              group.</desc>
            <valList type="closed">
              <valItem ident="line"/>
              <valItem ident="group"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="mdiv" module="MEI.shared">
        <desc>musical division ― The mdiv element may contain one or both of 2
          possible views of the music. The score view is the traditional full
          and open score while the parts view contains each performer's view of
          the score; that is, his part. These 2 views are necessary because it
          is not always possible or desirable to generate one from the other.
          The score and parts elements are placed here and not directly within
          the body element because score and part characteristics may change
          from mdiv to mdiv. For example, the 2nd movement of a symphony may
          require different performing forces (and therefore different score and
          part layout) than the other movements. The mdiv element may be
          recursively nested in order to represent music which exhibits this
          kind of structure. For example, an opera is normally divided into
          acts, which are in turn divided into scenes. This may be represented
          by the following markup: &lt;mdiv&gt; &lt;- the opera &lt;mdiv&gt;
          &lt;- act I &lt;mdiv&gt; &lt;- scene i &lt;mdiv&gt; &lt;- scene ii
          &lt;/mdiv&gt; &lt;mdiv&gt; &lt;- act II &lt;mdiv&gt; &lt;- scene i
          &lt;mdiv&gt; &lt;- scene ii &lt;/mdiv&gt; &lt;/mdiv&gt;</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.mdivLike"/>
        </classes>
        <content>
          <rng:choice>
            <rng:group>
              <rng:optional>
                <rng:ref name="model.scoreLike"/>
              </rng:optional>
              <rng:optional>
                <rng:ref name="model.partsLike"/>
              </rng:optional>
            </rng:group>
            <rng:zeroOrMore>
              <rng:ref name="model.mdivLike"/>
            </rng:zeroOrMore>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="mei" module="MEI.shared">
        <desc>mei ― The document element for a single document, containing a
          header and data. The &lt;mei&gt; element defines a particular instance
          of a document encoded with the MEI schema. The name of this element
          should not be changed in order to assure an absolute minimum level of
          MEI compliance.</desc>
        <classes>
          <memberOf key="att.meiversion"/>
        </classes>
        <content>
          <rng:ref name="meihead"/>
          <rng:ref name="music"/>
        </content>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_when" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@when]">
              <sch:assert test="@when = preceding::mei:when/@xml:id">The value
                of @when must be the ID of a when element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_source" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@source]">
              <sch:assert
                test="every $i in tokenize(@source, '\s+') satisfies
                $i=//mei:source/@xml:id"
                >The values in @source must match the IDs of source
                elements.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_altsym" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@altsym]">
              <sch:let name="thisaltsym" value="@altsym"/>
              <sch:assert
                test="@altsym = 
                preceding::mei:symboldef[@xml:id=$thisaltsym]/@xml:id"
                >The value of @altsym must be the ID of a symboldef
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_xmllang" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[starts-with(@xml:lang, 'x-')]">
              <sch:let name="thislang" value="@xml:lang"/>
              <sch:assert
                test="@xml:lang =
                //mei:language[@xml:id=$thislang]/@xml:id"
                >The value of @xml:lang must be the ID of a language
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_classcode" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@classcode]">
              <sch:let name="thisclasscode" value="@classcode"/>
              <sch:assert
                test="@classcode =
                preceding::mei:classcode[@xml:id=$thisclasscode]/@xml:id"
                >The value of @classcode must be the ID of a classcode
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_hand" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@hand]">
              <sch:let name="thishand" value="@hand"/>
              <sch:assert
                test="@hand =
                preceding::mei:hand[@xml:id=$thishand]/@xml:id"
                >The value of @hand must be the ID of a hand
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="set_ns" scheme="isoschematron">
          <constraint>
            <sch:ns uri="http://www.music-encoding.org/ns/mei" prefix="mei"/>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_resp" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:*[@resp]">
              <sch:let name="thisresp" value="@resp"/>
              <sch:assert
                test="@resp = //mei:*[@xml:id=$thisresp and
                ancestor::mei:meihead]/@xml:id"
                >The value of @resp must be the ID of an element declared within
                the meiheader element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <attList>
          <attDef ident="xml:id" usage="opt">
            <desc>regularizes the naming of an element and thus facilitates
              building links between it and other resources. Each id attribute
              within a document must have a unique value.</desc>
            <datatype>
              <rng:data type="ID"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="music" module="MEI.shared">
        <desc>music ― Container for everything else in the document apart from
          the header.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.meiversion"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.facsimileLike"/>
          </rng:zeroOrMore>
          <rng:ref name="macro.musicPart"/>
        </content>
      </elementSpec>
      <elementSpec ident="name" module="MEI.shared">
        <desc>name ― Contains the name of an entity that is difficult to tag
          more specifically as a &lt;corpname&gt;, &lt;geogname&gt;,
          &lt;persname&gt;, or &lt;title&gt;. The &lt;name&gt; element may be
          used in place of the more specific elements when it is not known what
          kind of name is being described or when a high degree of precision is
          not necessary. For example, the &lt;name&gt; element might be used
          when it is not clear whether the name "Bach" refers to a person or a
          geographic feature. The &lt;name&gt; element may be used for an
          individual, such as 'Henry VIII, King of England'; a corporate body,
          such as 'The Beatles'; a geographical place; or a generative
          mechanical process. When name parts are needed, use &lt;name&gt;
          sub-elements. The recommended values for the type attribute are: pers,
          corp, place, process. The &lt;date&gt; sub-element is available within
          &lt;name&gt; in order to record any dates, associated with the name,
          i.e., birth and death in the case of persons or creation and
          dissolution in the case of a corporate entity or place. The name of
          the list from which a controlled value is taken, such as the Thesaurus
          of Geographic Names (TGN) or Library of Congress Name Authority File
          (LCNAF), may be recorded using the authority attribute. This element
          is modelled on an element in Encoded Archival Description
          (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="note" module="MEI.shared">
        <desc>note ― A single pitched event. (Read, p. 63) The note element is
          allowed to contain other events for situations where a single (usually
          ornamented) written note is representative of a group of performed
          notes. The accid and artic sub-elements may be used instead of the
          note element's attributes when accid and artic represent first-class
          objects, e.g., when they require attributes, such as x and y location
          attributes. Similarly, the syl sub-element may be used instead of the
          syl attribute. The verse sub-element may be used to group text
          syllables by verse. The colored attribute may be used to indicate
          coloration. In the mensural repertoire, coloration is a temporary
          change in the underlying mensuration from perfect to imperfect. In the
          CMN repertoire, coloration is an inversion of the note head's normal
          rendition, that is, the notehead is void when it would otherwise be
          filled and vice versa. Do not confuse this with visual color.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.note.log"/>
          <memberOf key="att.note.vis"/>
          <memberOf key="att.note.ges"/>
          <memberOf key="att.note.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.verseLike"/>
              <rng:ref name="model.sylLike"/>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:note[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies
                $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="num" module="MEI.shared">
        <desc>number ― Numeric information in any form. This element is used
          only when it is necessary to display a number in a special way or to
          identify it with a type attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.measurement"/>
          <memberOf key="model.numLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="p" module="MEI.shared">
        <desc>paragraph ― One or more text phrases that form a logical prose
          passage. A paragraph is usually typographically distinct: The text
          usually begins on a new line and the first letter of the content is
          often indented, enlarged, or both. This element is modelled on
          elements in Encoded Archival Description, Text Encoding Initiative
          (TEI), and HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.pLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.paracontentPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pad" module="MEI.shared">
        <desc>pad ― An indication of extra visual space between notational
          elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.pad.log"/>
          <memberOf key="att.pad.vis"/>
          <memberOf key="att.pad.ges"/>
          <memberOf key="att.pad.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="parts" module="MEI.shared">
        <desc>parts ― Gathers performers' parts.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.parts.log"/>
          <memberOf key="att.parts.vis"/>
          <memberOf key="att.parts.ges"/>
          <memberOf key="att.parts.anl"/>
          <memberOf key="model.partsLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.partLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="part" module="MEI.shared">
        <desc>part ― An alternative visual rendition of the score from a
          particular performer's point of view. Part elements are not used in
          the score to indicate voice leading. Next attributes on event elements
          should be used for this purpose. Part elements are useful for encoding
          individual parts when there is no score, such as early music part
          books, when the music has non-aligning barlines, when different
          layout, such as page turns, are needed for the score and parts, or for
          accommodating software that requires part-by-part encoding. When
          assembly of the parts into a score is desired and there are
          non-aligning barlines, barlines which indicate points of alignment
          across all the parts may be marked as 'controlling', while
          non-aligning ones may be marked as 'non-controlling'.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.part.log"/>
          <memberOf key="att.part.vis"/>
          <memberOf key="att.part.ges"/>
          <memberOf key="att.part.anl"/>
          <memberOf key="model.partLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.scorePart"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pb" module="MEI.shared">
        <desc>page break ― The n attribute records the page number in the
          source. It need not be an integer, e.g. 'iv', or 'p17-3'. The logical
          page number can be calculated by counting previous &lt;pb&gt; ancestor
          elements. When used in a score context, a page break implies an
          accompanying system break. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.source"/>
          <memberOf key="model.pbLike"/>
        </classes>
        <content>
          <rng:ref name="macro.metaLike.page"/>
        </content>
        <attList>
          <attDef ident="func" usage="opt">
            <desc>states the side of a leaf (as in a manuscript) on which the
              content following the &lt;pb&gt; element occurs.</desc>
            <valList type="closed">
              <valItem ident="verso"/>
              <valItem ident="recto"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="pgdesc" module="MEI.shared">
        <desc>page description ― Contains a brief prose description of the
          appearance or description of the content of a physical page. Best
          practice suggests the use of controlled vocabulary. Don't confuse this
          element with a figure caption. A caption is text primarily intended
          for display with an illustration. It may or may not function as a
          description of the illustration.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.metaLike.page"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.locrefLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pghead1" module="MEI.shared">
        <desc>page header 1 ― A running header on the first page. This element
          is a specialized form of the fw element for capturing the
          table-formatted textual data that often appears on the first page of
          printed music. It may also be used for similarly formatted material in
          manuscripts. The pgheadN and pgfootN elements should *not* be used to
          encode textual notes/annotations. Auto-generated page numbers may be
          indicated with a processing instruction.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.metaLike.score"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.appLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pghead2" module="MEI.shared">
        <desc>page header 2 ― A running header on the pages following the first.
          This element is a specialized form of the fw element. The pgheadN and
          pgfootN elements should *not* be used to encode textual
          notes/annotations. Auto-generated page numbers may be indicated with a
          processing instruction.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.metaLike.score"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.appLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pgfoot1" module="MEI.shared">
        <desc>page footer 1 ― A running footer on the first page. This element
          is a specialized form of the fw element. Auto-generated page numbers
          may be indicated with a processing instruction. The pgheadN and
          pgfootN elements should *not* be used to encode textual
          notes/annotations.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.metaLike.score"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.appLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pgfoot2" module="MEI.shared">
        <desc>page footer 2 ― A running header on the pages following the first.
          This element is a specialized form of the fw element. Auto-generated
          page numbers may be indicated with a processing instruction. The
          pgheadN and pgfootN elements should *not* be used to encode textual
          notes/annotations.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.metaLike.score"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.appLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="phrase" module="MEI.shared">
        <desc>phrase ― Historically, a phrase mark indicated a "unified melodic
          idea", while the term "slur" was used for two-note legato patterns.
          (Read, p. 265). Nowadays, however, "phrase" and "slur" are often used
          interchangably (Read, p. 265-266), since the visual rendition of the
          two concepts is the same. MEI provides two distinct elements so that
          those users wishing to maintain a distinction for historical reasons
          may do so. If the user does not want to maintain the distinction, then
          the more generic &lt;slur&gt; element should be employed. The starting
          point of the phrase may be indicated by either a tstamp, tstamp.ges,
          tstamp.real or startid attribute, while the ending point may be
          recorded by either a dur, dur.ges or endid attribute. It is a semantic
          error not to specify one starting and one ending type of attribute.
          Either place, bulge, or bezier attributes may be used to record the
          curvature of the phrase. Please note that the dur attribute here is
          not a true duration, but rather a time stamp for the end point of the
          phrase mark.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.phrase.log"/>
          <memberOf key="att.phrase.vis"/>
          <memberOf key="att.phrase.ges"/>
          <memberOf key="att.phrase.anl"/>
          <memberOf key="model.controleventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:phrase">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="rend" module="MEI.shared">
        <desc>rend ― A formatting element indicating special visual rendering,
          e.g., bold or italicized, of a text word or phrase. When an entire
          element should be rendered in a special way, a style sheet function
          should be used instead of the &lt;rend&gt; element.</desc>
        <classes>
          <memberOf key="att.color"/>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.typography"/>
          <memberOf key="att.horizontalalign"/>
          <memberOf key="model.rendLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="altrend" usage="opt">
            <desc>used to extend the values of the rend attribute.</desc>
          </attDef>
          <attDef ident="rend" usage="opt">
            <desc>captures the appearance of the element's contents.</desc>
            <datatype>
              <rng:ref name="data.TEXTRENDITION"/>
            </datatype>
          </attDef>
          <attDef ident="rotation" usage="opt">
            <desc>A positive value for rotation rotates the text in a
              counter-clockwise fashion, while negative values produce clockwise
              rotation.</desc>
            <datatype>
              <rng:ref name="data.DEGREES"/>
            </datatype>
          </attDef>
          <attDef ident="valign" usage="opt">
            <desc>specifies the vertical alignment of the element
              content.</desc>
            <valList type="closed">
              <valItem ident="top"/>
              <valItem ident="middle"/>
              <valItem ident="bottom"/>
              <valItem ident="baseline"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="repository" module="MEI.shared">
        <desc>repository ― Institution or agency which holds a bibliographic
          item. Sub-units of the institution may be marked with
          &lt;repository&gt; sub-elements. The name of the list from which a
          controlled value is taken may be recorded using the authority
          attribute. This element is modelled on an element in Encoded Archival
          Description (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.repositoryLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="rest" module="MEI.shared">
        <desc>rest ― A non-sounding event found in the source being transcribed
          (Read, p. 96-102). Do not confuse this element with the space element,
          which is used as an aid for visual alignment.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.rest.log"/>
          <memberOf key="att.rest.vis"/>
          <memberOf key="att.rest.ges"/>
          <memberOf key="att.rest.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_restline" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:rest[@line]">
              <sch:let name="thisstaff" value="ancestor::mei:staff/@n"/>
              <sch:assert
                test="number(@line) &lt;= number(preceding::mei:staffdef[@n=$thisstaff and
                @lines][1]/@lines)"
                >The value of @line must be less than or equal to the number of
                lines on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:rest[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies
                $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="sb" module="MEI.shared">
        <desc>system break ― An empty formatting element that forces notation to
          begin on a new line. Do not confuse this element with the &lt;lb&gt;
          element, which performs a similar function in prose.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.source"/>
          <memberOf key="att.sb.log"/>
          <memberOf key="att.sb.vis"/>
          <memberOf key="att.sb.ges"/>
          <memberOf key="att.sb.anl"/>
          <memberOf key="model.milestoneLike.music"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="custos"/>
          </rng:optional>
        </content>
      </elementSpec>
      <elementSpec ident="score" module="MEI.shared">
        <desc>score ― Full score view of the mdiv. Since the measure element is
          optional, a score may consist entirely of pagebreaks, each of which
          points to a page image. Div elements are allowed preceding and
          following sections of music data in order to accommodate blocks of
          explanatory text.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.score.log"/>
          <memberOf key="att.score.vis"/>
          <memberOf key="att.score.ges"/>
          <memberOf key="att.score.anl"/>
          <memberOf key="model.scoreLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.scorePart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="scoredef" module="MEI.shared">
        <desc>score definition ― Container for score meta-information.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.scoredef.log"/>
          <memberOf key="att.scoredef.vis"/>
          <memberOf key="att.scoredef.ges"/>
          <memberOf key="att.scoredef.anl"/>
          <memberOf key="model.scoredefLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.alignLike"/>
          </rng:zeroOrMore>
          <rng:optional>
            <rng:ref name="model.chordtableLike"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="model.symboltableLike"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="model.keysigLike"/>
          </rng:optional>
          <rng:ref name="model.metaLike.score_sequenceOptional"/>
          <rng:optional>
            <rng:ref name="instrgrp"/>
          </rng:optional>
          <rng:choice>
            <rng:optional>
              <rng:ref name="model.staffgrpLike"/>
            </rng:optional>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="section" module="MEI.shared">
        <desc>section ― Container for actual music data. The linking attributes
          are available here so that this element can point to external media
          objects or to related internal elements, such as annotations.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.section.log"/>
          <memberOf key="att.section.vis"/>
          <memberOf key="att.section.ges"/>
          <memberOf key="att.section.anl"/>
          <memberOf key="model.sectionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="expansion"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.sectionPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="Check_sectionexpansion" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:section[mei:expansion]">
              <sch:assert
                test="descendant::mei:section|descendant::mei:ending|descendant::mei:rdg"
                >Must have descendant section, ending, or rdg elements that can
                be pointed to.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="space" module="MEI.shared">
        <desc>space ― A placeholder used to fill an incomplete measure, layer,
          etc. most often so that the combined duration of the events equals the
          number of beats in the measure.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.space.log"/>
          <memberOf key="att.space.vis"/>
          <memberOf key="att.space.ges"/>
          <memberOf key="att.space.anl"/>
          <memberOf key="model.eventLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="stack" module="MEI.shared">
        <desc>stacked text ― An inline table with a single column.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.rendLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="delim" usage="opt">
            <desc>indicates the delimiter used to mark the portions of text that
              are to be stacked.</desc>
          </attDef>
          <attDef ident="align" usage="opt">
            <desc>specifies how the stacked text should be aligned.</desc>
            <valList type="closed">
              <valItem ident="left"/>
              <valItem ident="right"/>
              <valItem ident="center"/>
              <valItem ident="rightdigit"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="staff" module="MEI.shared">
        <desc>staff ― A group of equidistant horizontal lines on which notes are
          placed in order to represent pitch. In MEI, however, &lt;staff&gt; is
          a grouping element for individual 'strands' of notes, rests, etc. that
          may or may not be rendered on staff lines; that is, diastematic and
          nondiastematic signs. The n attribute functions as a connection back
          to the appropriate staffdef element where logical and visual
          information about the staff is recorded. If the n attribute is
          omitted, encoding order is presumed to match the staff order. Of
          course, if data is supplied for only a subset of staves found in a
          printed source, the n attribute must be supplied.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.staff.log"/>
          <memberOf key="att.staff.vis"/>
          <memberOf key="att.staff.ges"/>
          <memberOf key="att.staff.anl"/>
          <memberOf key="model.staffLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.staffPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="staffdef" module="MEI.shared">
        <desc>staff definition ― Container for staff meta-information.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.staffdef.log"/>
          <memberOf key="att.staffdef.vis"/>
          <memberOf key="att.staffdef.ges"/>
          <memberOf key="att.staffdef.anl"/>
          <memberOf key="model.staffdefLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.labelLike"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.instrdefLike"/>
              <rng:ref name="model.layerdefLike"/>
              <rng:ref name="model.staffdefPart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="Check_staffdefn" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:staffdef">
              <sch:let name="thisstaff" value="@n"/>
              <sch:assert test="@n">A staffdef must have an n
                attribute.</sch:assert>
              <sch:assert
                test="@lines or preceding::mei:staffdef[@n=$thisstaff
                and @lines]"
                >The first occurrence of a staff must declare the number of
                staff lines.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_clef_position_staffdef"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:staffdef[@clef.line and @lines]">
              <sch:assert test="number(@clef.line) &lt;= number(@lines)">The
                clef position must be less than or equal to the number of lines
                on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_clef_position_staffdef"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:staffdef[@clef.line and not(@lines)]">
              <sch:let name="thisstaff" value="@n"/>
              <sch:let name="stafflines"
                value="preceding::mei:staffdef[@n=$thisstaff and
                @lines][1]/@lines"/>
              <sch:assert test="number(@clef.line) &lt;= number($stafflines)"
                >The clef position must be less than or equal to the number of
                lines on the staff.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="staffgrp" module="MEI.shared">
        <desc>staff group ― A group of bracketed or braced staves. Bracketed
          staff groups may contain other bracketed or braced staff groups or
          single staves. See Read, p. 35-38, examples p. 434, 438. System is the
          more proper name for this concept (Read, p. 37-38).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.staffgrp.log"/>
          <memberOf key="att.staffgrp.vis"/>
          <memberOf key="att.staffgrp.ges"/>
          <memberOf key="att.staffgrp.anl"/>
          <memberOf key="model.staffgrpLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="grpsym"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.labelLike"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.instrdefLike"/>
          </rng:zeroOrMore>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.staffdefLike"/>
            </rng:choice>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="grpsym"/>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="no_title" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:staffgrp">
              <sch:let name="countstaves"
                value="count(descendant::mei:staffdef)"/>
              <sch:let name="countuniqstaves"
                value="count(distinct-values(descendant::mei:staffdef/@n))"/>
              <sch:assert test="$countstaves eq $countuniqstaves">Each staffdef
                must have a unique value for the n attribute.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="syl" module="MEI.shared">
        <desc>syllable ― Individual lyric syllable. Do not confuse this element
          with the syllable element. The align attribute indicates the
          horizontal alignment of the syllable with respect to the note to which
          it is attached.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.syl.log"/>
          <memberOf key="att.syl.vis"/>
          <memberOf key="att.syl.ges"/>
          <memberOf key="att.syl.anl"/>
          <memberOf key="model.sylLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="tempo" module="MEI.shared">
        <desc>tempo ― Text and symbols descriptive of tempo, mood, or style,
          e.g., "allarg.", "a tempo", "cantabile", "Moderato", "[qtrnote]=60",
          "Moderato [qtrnote] =60"). Both instantaneous and continuous tempo
          markings may be encoded using this element. Please note that the dur
          attribute here is expressed in musical time, i.e., beats or other time
          stamp. Therefore, it is not a true duration, but rather a time stamp
          for the end point of the directive.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.tempo.log"/>
          <memberOf key="att.tempo.vis"/>
          <memberOf key="att.tempo.ges"/>
          <memberOf key="att.tempo.anl"/>
          <memberOf key="model.controleventLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="title" module="MEI.shared">
        <desc>title ― Title of a bibliographic entity. The type attribute may be
          used to classify the title according to some convenient typology.
          Sample values include: main (main title), subordinate (subtitle, title
          of part), abbreviated (abbreviated form of title), alternative
          (alternate title by which the work is also known), translated
          (translated form of title), uniform (collective title). The type
          attribute is provided for convenience in analysing titles and
          processing them according to their type; where such specialized
          processing is not necessary, there is no need for such analysis, and
          the entire title, including subtitles and any parallel titles, may be
          enclosed within a single &lt;title&gt; element. Title parts may be
          encoded in &lt;title&gt; sub-elements. The name of the list from which
          a controlled value is taken may be recorded using the authority
          attribute. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.titleLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="level" usage="opt">
            <valList type="closed">
              <valItem ident="a"/>
              <valItem ident="m"/>
              <valItem ident="j"/>
              <valItem ident="s"/>
              <valItem ident="u"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="titlepage" module="MEI.shared">
        <desc>title page ― Contains a transcription of the title page of a text.
          It may be used within the physdesc element when no other transcription
          is provided. This element is modelled on an element in Encoded
          Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.frontPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.milestoneLike.text"/>
            </rng:choice>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="meihead" module="MEI.header">
        <desc>meihead ― A wrapper for general bibliographic and descriptive
          information about the encoded file. This information is often
          essential in a machine-readable environment. Five sub-elements must be
          encoded in the following order: &lt;altmeiid&gt;(optional),
          &lt;filedesc&gt;(required), &lt;encodingdesc&gt;(optional),
          &lt;profiledesc;&gt;(optional), and &lt;revisiondesc&gt;(optional).
          These elements and their sub-elements provide: a unique identifier for
          the MEI file, bibliographic information about the MEI file and its
          sources, information about the encoding process, information about the
          creation of the work being encoded, and statements regarding
          significant revisions of the file. The xml:lang attribute may be used
          to indicate the language in which the metadata content of the header
          is provided. In order to encourage uniformity in the provision of
          metadata across document types, this element is modelled on an element
          in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.meiversion"/>
          <memberOf key="model.startLike.header"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="altmeiid"/>
          </rng:zeroOrMore>
          <rng:ref name="filedesc"/>
          <rng:ref name="model.headerPart_sequenceOptional"/>
          <rng:optional>
            <rng:ref name="revisiondesc"/>
          </rng:optional>
        </content>
        <attList>
          <attDef ident="type" usage="opt">
            <desc>specifies the kind of document to which the header is
              attached, for example whether it is a corpus or individual
              text.</desc>
            <valList type="closed">
              <valItem ident="music"/>
              <valItem ident="corpus"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="accessdesc" module="MEI.header">
        <desc>access description ― Describes the conditions that affect the
          accessibility of material. May indicate the nature of restrictions or
          the lack of restrictions. Do not confuse this element with
          &lt;userestrict&gt; (usage restrictions), which captures information
          about limitations on the use of material, such as those afforded by
          copyright. This element is modelled on an element in Encoded Archival
          Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.availabilityPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="acqsource" module="MEI.header">
        <desc>acquisition source ― Post-publication source, such as a vendor or
          distributor, from which access to a bibliographic item may be
          obtained, including electronic access. This element is modelled on an
          element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.availabilityPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="altmeiid" module="MEI.header">
        <desc>alternative MEI identifier ― May contain a bibliographic
          identifier that does not fit within the meihead id attribute, for
          example because the id does not fit the definition of an XML id or
          because multiple identifiers are needed. One or the other of
          &lt;altmeiid&gt; or the id attribute on &lt;mei&gt; is required when
          applicable.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="appinfo" module="MEI.header">
        <desc>application information ― Groups information about applications
          which have acted upon the MEI file. This is not to be confused with
          applications which were used to create the MEI file. The latter may be
          recorded in the projectdesc element. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.encodingPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="application"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="application" module="MEI.header">
        <desc>application ― Provides information about an application which has
          acted upon the current document. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.typed"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.nameLike"/>
          </rng:oneOrMore>
          <rng:choice>
            <rng:zeroOrMore>
              <rng:ref name="model.ptrLike"/>
            </rng:zeroOrMore>
            <rng:zeroOrMore>
              <rng:ref name="model.pLike"/>
            </rng:zeroOrMore>
          </rng:choice>
        </content>
        <attList>
          <attDef ident="version" usage="opt">
            <desc>supplies a version number for an application, independent of
              its identifier or display name.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="availability" module="MEI.header">
        <desc>availability ― Groups elements that describe the availability of
          and access to a bibliographic item. When used within the filedesc
          element, availability indicates access to the MEI-encoded document
          itself. This element is modelled on an element in Encoded Archival
          Description (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="model.pubstmtPart"/>
        </classes>
        <content>
          <rng:ref name="macro.availabilityPart"/>
        </content>
      </elementSpec>
      <elementSpec ident="change" module="MEI.header">
        <desc>change ― Individual change within the revision description.
          Additions, deletions, and significant recoding should be noted, but
          not correction of minor typographical errors. It is recommended that
          revisions should be entered in reverse chronological order, with the
          most recent &lt;change&gt; first. The resp attribute contains a
          pointer to an element containing info about the person/entity
          responsible for change. The edition element can be used to designate
          an MEI encoding that has been so substantively changed that it
          constitutes a new version that supersedes earlier versions. This
          element is modelled on an element in Encoded Archival Description
          (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:ref name="respstmt"/>
          <rng:ref name="changedesc"/>
          <rng:ref name="model.dateLike"/>
        </content>
      </elementSpec>
      <elementSpec ident="changedesc" module="MEI.header">
        <desc>change description ― Description of a revision of the MEI
          file.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="classcode" module="MEI.header">
        <desc>classification code ― Library of Congress subject or call number,
          or a thesaurus or ontology citation, for example. The source of
          &lt;keywords&gt; element. Congress Classification (LCC), Library of
          Congress Name Authority File (LCNAF), or other thesaurus or ontology.
          The citation may be provided in the authority attribute or as textual
          content of the element when additional markup is needed.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.lbLike"/>
              <rng:ref name="model.rendLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="classification" module="MEI.header">
        <desc>classification ― Groups information which describes the nature or
          topic of a musical work. Although use of names and terms from locally
          controlled vocabularies is possible, terms used here should come from
          standard national or international vocabularies whenever they are
          available in order to enable searches in systems that include multiple
          MEI documents, or MEI documents and bibliographic records from many
          institutions.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.profiledescPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="classcode"/>
              <rng:ref name="keywords"/>
            </rng:choice>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="condition" module="MEI.header">
        <desc>condition ― The physical condition of an item, particularly any
          variances between the physical makeup of the item and that of other
          copies of the same item (e.g., missing pages, plates, etc.). Condition
          may reflect other aspects of the physical condition of the item as
          well (e.g., brittleness, faded images, etc.). This element is modelled
          on an element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="correction" module="MEI.header">
        <desc>correction ― States how and under what circumstances corrections
          have been made in the text. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.regularmethod"/>
          <memberOf key="model.editorialdeclPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
        <attList>
          <attDef ident="corrlevel" usage="opt">
            <desc>indicates the degree of correction applied to the text.</desc>
            <valList type="closed">
              <valItem ident="high"/>
              <valItem ident="medium"/>
              <valItem ident="low"/>
              <valItem ident="unknown"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="creation" module="MEI.header">
        <desc>creation ― Non-bibliographic creation details for the work being
          encoded, in narrative form. Contains phrases describing the origin of
          the text, e.g. the date, place, and circumstances of its composition.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.profiledescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.textcomponentLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="dimensions" module="MEI.header">
        <desc>dimensions ― Information about the physical size of a
          bibliographic source; usually includes numerical data. There are no
          height and width sub-elements; however, num sub-elements may be used
          with appropriate n attribute values. Measurements may be expressed in
          any convenient unit. Do not confuse this element with the
          &lt;extent&gt; element, which is used to indicate the quantity of
          described materials. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.measurement"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="editionstmt" module="MEI.header">
        <desc>edition statement ― Container for meta-data pertaining to a
          particular edition of the material being described. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.editionLike"/>
            <rng:zeroOrMore>
              <rng:ref name="respstmt"/>
            </rng:zeroOrMore>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="editorialdecl" module="MEI.header">
        <desc>editorial declaration ― Used to provide details of editorial
          principles and practices applied during the encoding of musical text.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.encodingPart"/>
        </classes>
        <content>
          <rng:choice>
            <rng:oneOrMore>
              <rng:ref name="model.pLike"/>
            </rng:oneOrMore>
            <rng:group>
              <rng:oneOrMore>
                <rng:ref name="model.editorialdeclPart"/>
              </rng:oneOrMore>
              <rng:zeroOrMore>
                <rng:ref name="model.pLike"/>
              </rng:zeroOrMore>
            </rng:group>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="encodingdesc" module="MEI.header">
        <desc>encoding description ― Documents the relationship between an
          electronic file and the source or sources from which it was derived as
          well as applications used in the encoding/editing process. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="model.headerPart"/>
        </classes>
        <content>
          <rng:ref name="model.encodingPart_sequenceOptional"/>
        </content>
      </elementSpec>
      <elementSpec ident="exhibithist" module="MEI.header">
        <desc>exhibition history ― A record of public exhibitions, including
          dates, venues, etc. This element is modelled on an element in Encoded
          Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="extent" module="MEI.header">
        <desc>extent ― Used to express size in terms other than physical
          dimensions, such as number of pages, number of records in file, number
          of bytes, performance duration for music, audio recordings and visual
          projections, etc. Use the &lt;dimensions&gt; element when it is
          necessary to specify the physical size of materials being described,
          for example, height and width. This element is modelled on an element
          in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.measurement"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="filedesc" module="MEI.header">
        <desc>file description ― Contains a full bibliographic description of
          the MEI file. Extent in this context is file size. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:ref name="titlestmt"/>
          <rng:optional>
            <rng:ref name="editionstmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="extent"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="fingerprint"/>
          </rng:optional>
          <rng:ref name="pubstmt"/>
          <rng:optional>
            <rng:ref name="seriesstmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="notesstmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="sourcedesc"/>
          </rng:optional>
        </content>
      </elementSpec>
      <elementSpec ident="fingerprint" module="MEI.header">
        <desc>fingerprint ― Traditionally, an identifier, constructed by
          combining groups of characters transcribed from specified pages of a
          printed item, which makes it possible to signal differences between
          copies of the item. For an electronic item, such as an MEI file,
          however, the fingerprint should be a checksum.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="hand" module="MEI.header">
        <desc>hand ― Defines a distinct scribe or handwriting style. The initial
          attribute indicates whether this is the first or main scribe of the
          document. The medium attribute describes the writing medium, e.g.,
          'pencil', or the tint or type of ink, e.g. 'brown'. The resp attribute
          contains an ID reference to an element containing the name of the
          editor or transcriber responsible for identifying the hand. The
          characteristics of the hand, particularly those related to the quality
          of the writing, such as 'shaky', 'thick', etc. may be described within
          the content of the hand element. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.medium"/>
          <memberOf key="att.responsibility"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="initial" usage="opt">
            <desc>marks this hand as the first one of the document.</desc>
            <datatype>
              <rng:ref name="data.BOOLEAN"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="handlist" module="MEI.header">
        <desc>hand list ― Container for one or more hand elements. This element
          is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="hand"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="inscription" module="MEI.header">
        <desc>inscription ― An inscription added to an item, such as a
          bookplate, a note designating the item as a gift, and/or the author's
          signature.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="interpretation" module="MEI.header">
        <desc>interpretation ― Describes the scope of any analytic or
          interpretive information added to the transcription of the music. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.editorialdeclPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="keywords" module="MEI.header">
        <desc>keywords ― Collection of keywords or text phrases which describe
          the work. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="term"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="language" module="MEI.header">
        <desc>language ― Description of a language used in the document. A text
          element may be related to this element via its xml:lang attribute,
          which normally takes the form of a code, drawn from a coded list, such
          as ISO639-2b. The name of the authorizing list may be encoded in the
          authority attribute. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.authorized"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="langusage" module="MEI.header">
        <desc>language usage ― Langusage groups elements describing the
          languages, sublanguages, dialects, etc., represented within the
          encoded work. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.profiledescPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="language"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="normalization" module="MEI.header">
        <desc>normalization ― Indicates the extent of normalization or
          regularization of the original source carried out in converting it to
          electronic form. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.regularmethod"/>
          <memberOf key="model.editorialdeclPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="notesstmt" module="MEI.header">
        <desc>notes statement ― Groups bibliographic annotations, each of which
          provides descriptive information in addition to that recorded in other
          parts of the bibliographic description. These annotations are similar
          to "general notes" in traditional bibliographic descriptions. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.annotLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="physdesc" module="MEI.header">
        <desc>physical description ― Container for information about the
          location, appearance, construction, or handling of physical materials,
          such as their dimension, quantity, color, style, and technique of
          creation. Dedicatory text and title page features may also be encoded
          here when they are not transcribed as part of the front or back
          matter; i.e., when they are considered to be meta-data rather than a
          transcription. This element is modelled on an element in Encoded
          Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.physdescPart"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="physloc" module="MEI.header">
        <desc>physical location ― Location of the source within a repository,
          e.g., shelf mark or other locational information. This element is
          modelled on an element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="physmedium" module="MEI.header">
        <desc>physical medium ― Records the physical materials used in the
          source, such as ink and paper. All materials may be described in a
          single &lt;physmedium&gt; element or multiple elements may be used,
          one for each medium. This element is modelled on an element in Encoded
          Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.authorized"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="price" module="MEI.header">
        <desc>price ― The cost of access to a bibliographic item.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.measurement"/>
          <memberOf key="model.availabilityPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="profiledesc" module="MEI.header">
        <desc>profile description ― A detailed description of the
          non-bibliographic aspects of the musical entity, (e.g., work) that the
          MEI file represents, specifically the languages and sublanguages used,
          the situation in which it was produced, e.g. the participants,
          setting, reception history, etc. Do not confuse this with
          &lt;filedesc&gt;, which bundles bibliographic information about the
          creation of the MEI file. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="model.headerPart"/>
        </classes>
        <content>
          <rng:ref name="macro.profiledescPart"/>
        </content>
      </elementSpec>
      <elementSpec ident="projectdesc" module="MEI.header">
        <desc>project description ― Project-level meta-data describing the aim
          or purpose for which the electronic file was encoded, funding
          agencies, etc. together with any other relevant information concerning
          the process by which it was assembled or collected. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.encodingPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="provenance" module="MEI.header">
        <desc>provenance ― The record of ownership or custodianship of an item.
          This element is modelled on an element in the Encoded Archival
          Description (EAD) and Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:choice>
            <rng:optional>
              <rng:ref name="eventlist"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:choice>
                <rng:text/>
                <rng:ref name="model.textphraseLike.limited"/>
              </rng:choice>
            </rng:zeroOrMore>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="pubstmt" module="MEI.header">
        <desc>publication statement ― Container for information regarding the
          publication or distribution of a bibliographic item, including the
          publisher's name and address, the date of publication, and other
          relevant details. When an item is unpublished, use only the
          &lt;unpub&gt; sub-element. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:choice>
            <rng:optional>
              <rng:ref name="unpub"/>
            </rng:optional>
            <rng:zeroOrMore>
              <rng:ref name="model.pubstmtPart"/>
            </rng:zeroOrMore>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="resp" module="MEI.header">
        <desc>responsibility ― A phrase describing the nature of a person's
          intellectual responsibility. The name of the list from which a
          controlled value is taken may be recorded using the authority
          attribute. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.authorized"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="respstmt" module="MEI.header">
        <desc>responsibility statement ― Names one or more individuals, groups,
          or in rare cases, mechanical processes, responsible for creation or
          realization of the intellectual or artistic content. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="model.pubstmtPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="resp"/>
              <rng:ref name="model.nameLike"/>
              <rng:ref name="model.nameLike.agent"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="revisiondesc" module="MEI.header">
        <desc>revision description ― Container for information about alterations
          that have been made to an MEI file. It is recommended that changes be
          recorded in reverse chronological order, with the most recent
          alteration first. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="change"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="samplingdecl" module="MEI.header">
        <desc>sampling declaration ― Contains a prose description of the
          rationale and methods used in sampling texts in the creation of a
          corpus or collection. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.encodingPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="segmentation" module="MEI.header">
        <desc>segmentation ― Describes the principles according to which the
          musical text has been segmented, for example into movements, sections,
          etc. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.editorialdeclPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="seriesstmt" module="MEI.header">
        <desc>series statement ― Groups information about the series, if any, to
          which a publication belongs. In this context, the title element
          records the series title, the respStmt element records the person or
          group responsible for the series, and the identifier element contains
          a series identifier. The list element should be used when it is
          necessary to enumerate the contents of the series. The seriesstmt is
          provided within seriesstmt for the description of a sub-series. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.titleLike"/>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="respstmt"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.identifierLike"/>
          </rng:zeroOrMore>
          <rng:choice>
            <rng:ref name="model.listLike"/>
            <rng:zeroOrMore>
              <rng:ref name="seriesstmt"/>
            </rng:zeroOrMore>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="source" module="MEI.header">
        <desc>source ― A bibliographic description of a source for the
          electronic file. Multiple physdesc sub-elements may be used to
          describe the physically separate parts of a single source. The data
          attribute may be used to reference one or more features that occur in
          this particular source. This element is modelled on the sourcedesc
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.datapointing"/>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.identifierLike"/>
          </rng:zeroOrMore>
          <rng:optional>
            <rng:ref name="titlestmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="editionstmt"/>
          </rng:optional>
          <rng:ref name="pubstmt"/>
          <rng:optional>
            <rng:ref name="physdesc"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="seriesstmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="notesstmt"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="langusage"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="classification"/>
          </rng:optional>
        </content>
      </elementSpec>
      <elementSpec ident="sourcedesc" module="MEI.header">
        <desc>source description ― A container for the descriptions of the
          source(s) used in the creation of the electronic file. This element is
          recommended where the MEI file is a transcription of existing music,
          but is not required when the data is originally created in MEI
          form.</desc>
        <classes>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="source"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="stdvals" module="MEI.header">
        <desc>standard values ― Specifies the format used when standardized date
          or number values are supplied. This element is modelled on an element
          in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.editorialdeclPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.pLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="sysreq" module="MEI.header">
        <desc>system requirements ― System requirements for using the electronic
          item.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.availabilityPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="term" module="MEI.header">
        <desc>term ― Single keyword or phrase which describes the work. The
          classcode attribute may be used to link the term to a terminological
          source given in a classcode element. The term element may include
          other term elements in order to allow the creation of coordinated
          terms; i.e., terms created from a combination of other, independent
          terms. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="term"/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="classcode" usage="opt">
            <desc>contains a reference to the controlled vocabulary from which
              the term is drawn. The value must match the value of an ID
              attribute on a classcode element given elsewhere in the
              document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="titlestmt" module="MEI.header">
        <desc>title statement ― Container for title and responsibility
          meta-data. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.titleLike"/>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="respstmt"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="treatmenthist" module="MEI.header">
        <desc>treatment history ― A record of the treatment the item has
          undergone (e.g., deacidification, restoration, etc.) Treatment history
          may also comprise details of the treatment process (e.g., chemical
          solutions used, techniques applied, etc.), the date the treatment was
          applied, etc. This element is modelled on an element in Encoded
          Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="treatmentsched" module="MEI.header">
        <desc>treatment scheduled ― Scheduled treatment, e.g. deacidification,
          restoration, etc., for an item. This element is modelled on an element
          in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.physdescPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="unpub" module="MEI.header">
        <desc>unpublished ― Used to explicitly indicate that a bibliographic
          source is unpublished. A short phrase indicating the nature of or the
          reason for the unpublished status may be given as the element's
          content.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="userestrict" module="MEI.header">
        <desc>usage restrictions ― Container for information about the
          conditions that affect use of a bibliographic item after access has
          been granted. It may indicate limitations imposed by an owner,
          repository, or legal statute (for example, copyright law) regarding
          the reproduction, publication, or quotation of the item. It may also
          indicate the absence of restrictions, such as when rights have been
          ceded to the public domain. Do not confuse this element with the
          &lt;accessdesc&gt; element, which holds information about conditions
          affecting the availability of the material. This element is modelled
          on an element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.bibl"/>
          <memberOf key="model.availabilityPart"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="eventlist" module="MEI.header">
        <desc>event list ― Contains historical information given as a sequence
          of significant past events. &lt;eventlist&gt; contains &lt;event&gt;
          elements that contain a brief description of the associated event,
          including dates and locations where the event took place. An
          &lt;eventlist&gt; describes events associated with a work when it
          appears in the &lt;profiledesc&gt; element or events associated with
          the custodial history of a given copy of a source for the encoding
          when it appears within the &lt;source&gt; element. The type attribute
          may be used to distinguish between event lists with different
          functions, such as a list of events in the compositional process and a
          list of performance dates.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.profiledescPart"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="event"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="event" module="MEI.header">
        <desc>event ― contains a description of an event, including the dates
          and locations of its occurrence and prominent participants. When a
          single date can be associated with the event, the attributes in the
          att.datable class may provide a more machine-processable alternative
          than date elements within the content of &lt;event&gt;. &lt;table&gt;
          and &lt;list&gt; elements are allowed within &lt;event&gt; in order to
          accommodate structured content.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.calendared"/>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.lang"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.tableLike"/>
              <rng:ref name="model.listLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="arpeg" module="MEI.cmn">
        <desc>arpeggiation ― Indicates that the notes of a chord are to be
          performed successively rather than simultaneously, usually from lowest
          to highest. Sometimes called a "roll". The modern symbol is a vertical
          wavy line preceding the chord. When the notes of the chord are to be
          performed from highest to lowest, an arrowhead may be added to the
          lower end of the line. Even though it is redundant, an arrowhead is
          sometimes added to the upper end of the line for the sake of
          consistency or when the direction of successive arpeggios alternates.
          In music for keyboard instruments, sometimes a distinction is made
          between a single arpeggio in which both hands play successively and
          simultaneous arpeggios in two hands. In the case of the former,
          multiple values may be required in the staff and layer attributes.
          Arpeggios that do not cross staves, but still involve more than one
          layer require multiple values for the layer attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.arpeg.log"/>
          <memberOf key="att.arpeg.vis"/>
          <memberOf key="att.arpeg.ges"/>
          <memberOf key="att.arpeg.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="beam" module="MEI.cmn">
        <desc>beam ― A container for a series of explicitly beamed events that
          begins and ends entirely within a measure. For beams that cross the
          barline, use the beamspan element. Secondary beams may be broken
          explicitly using the breaksec attribute on the notes or chords under
          the beam. Automated beaming, as opposed to explicitly marked beams,
          may be indicated for an entire score, part or section by using the
          beam.group and beam.rests attributes on these elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.beam.log"/>
          <memberOf key="att.beam.vis"/>
          <memberOf key="att.beam.ges"/>
          <memberOf key="att.beam.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="beamspan" module="MEI.cmn">
        <desc>beam span ― Alternative element for explicitly encoding beams
          which extend across barlines. The starting point of the beam may be
          indicated by either a tstamp, tstamp.ges, tstamp.real or startid
          attribute, while the ending point may be recorded by either a dur,
          dur.ges or endid attribute. It is a semantic error not to specify one
          starting and one ending type of attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.beamspan.log"/>
          <memberOf key="att.beamspan.vis"/>
          <memberOf key="att.beamspan.ges"/>
          <memberOf key="att.beamspan.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:beamspan">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="beatrpt" module="MEI.cmn">
        <desc>beat repeat ― An indication that material on a preceding beat
          should be repeated. It is also used in guitar or rhythm parts to
          indicate where chord changes occur. When these parts require durations
          longer or shorter than a beat, however, note elements with
          appropriately-shaped note heads should be employed.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.beatrpt.log"/>
          <memberOf key="att.beatrpt.vis"/>
          <memberOf key="att.beatrpt.ges"/>
          <memberOf key="att.beatrpt.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="bend" module="MEI.cmn">
        <desc>bend ― A variation in pitch (often microtonal) upwards or
          downwards during the course of a note. Typically, the performer
          attacks the note at "true" pitch, bends the intonation, then returns
          to true pitch. The bend element can also be used for scoop, plop,
          falloff, and doit performance effects. It should *not* be used for
          l.v. (laissez vibrer) indications. Precise performance data that
          differs from the logical events in a measure may be recorded within
          the bend element. The starting point of the bend may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute. It is a
          semantic error not to specify a starting attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.bend.log"/>
          <memberOf key="att.bend.vis"/>
          <memberOf key="att.bend.ges"/>
          <memberOf key="att.bend.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="note"/>
              <rng:ref name="rest"/>
              <rng:ref name="tuplet"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:bend">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="breath" module="MEI.cmn">
        <desc>breath mark ― A indication of a point at which the performer on an
          instrument requiring breath (including the voice) may breathe. It also
          may indicate a short pause or break for instruments *not* requiring
          breath. Therefore, it oftens functions as a guide to phrasing. The
          usual sign for the breath mark is a comma; however, other visual forms
          of the breath mark may be indicated using the altsym attribute. The
          starting point of the breath mark may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute. It is a semantic error
          not to specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.breath.log"/>
          <memberOf key="att.breath.vis"/>
          <memberOf key="att.breath.ges"/>
          <memberOf key="att.breath.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="btrem" module="MEI.cmn">
        <desc>bowed tremolo ― A rapid alternation on a single pitch or chord.
          This element should also be used for wind double and triple tonguing
          and for flutter tonguing when these are expressed as tremolandi. For
          alternation between a pair of notes or chords, use the ftrem element.
          The num attribute can be used to store a number to be rendered along
          with a tremolo. The slash attribute indicates the number of slashes to
          be drawn. The number of slashes indicates the exact note values in an
          aural rendition of measured tremolandi, i.e., 4ths or 8ths=1, 16ths=2,
          32nds=3, 64ths=4, 128ths=5, 256ths=6. See Read, p. 393-394. The stem
          modifier (slash or z) must also be explicity set on the child
          &lt;note&gt; or &lt;chord&gt; element for a complete visual
          representation. See Read, p. 394, ex. 23-21, line 5.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.btrem.log"/>
          <memberOf key="att.btrem.vis"/>
          <memberOf key="att.btrem.ges"/>
          <memberOf key="att.btrem.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:choice>
            <rng:ref name="chord"/>
            <rng:ref name="note"/>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="fermata" module="MEI.cmn">
        <desc>fermata ― An indication placed over a note or rest to indicated
          that it should be held longer than its written value. May also occur
          over a barline to indicate the end of a phrase or section. Sometimes
          called a 'hold' or 'pause'. The &lt;fermata&gt; element is a
          specialized form of, i.e., syntactic sugar for, dir/@type="fermata"
          with &amp;ferm; or &amp;uferm; as its PCDATA content. Other visual
          forms of a fermata may be indicated via the altsym attribute. The
          starting point of the fermata may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute. It is a semantic error
          not to specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.fermata.log"/>
          <memberOf key="att.fermata.vis"/>
          <memberOf key="att.fermata.ges"/>
          <memberOf key="att.fermata.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:fermata">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="ftrem" module="MEI.cmn">
        <desc>fingered tremolo ― A rapid alternation between a pair of notes (or
          chords or perhaps between a note and a chord) that are (usually)
          farther apart than a major second. For rapid alternation between notes
          on the same pitch (bowed tremolo, double &amp;amp; triple tonguing,
          and flutter tonguing) use the &lt;btrem&gt; element. The slash
          attribute records the number of slashes required — 4ths or 8ths=1,
          16ths=2, 32nds=3, 64ths=4, 128ths=5, 256ths=6.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.ftrem.log"/>
          <memberOf key="att.ftrem.vis"/>
          <memberOf key="att.ftrem.ges"/>
          <memberOf key="att.ftrem.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:choice>
            <rng:group>
              <rng:ref name="chord"/>
              <rng:choice>
                <rng:ref name="chord"/>
                <rng:ref name="note"/>
              </rng:choice>
            </rng:group>
            <rng:group>
              <rng:ref name="note"/>
              <rng:choice>
                <rng:ref name="chord"/>
                <rng:ref name="note"/>
              </rng:choice>
            </rng:group>
          </rng:choice>
        </content>
      </elementSpec>
      <elementSpec ident="hairpin" module="MEI.cmn">
        <desc>hairpin ― Indicates continuous dynamics expressed on the score as
          wedge-shaped graphics, e.g. &lt; and &gt;. The starting point of the
          hairpin may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify one starting and one ending type of attribute. Please note
          that the value of the dur attribute is not a true duration, but rather
          a time stamp for the end point of the hairpin.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.hairpin.log"/>
          <memberOf key="att.hairpin.vis"/>
          <memberOf key="att.hairpin.ges"/>
          <memberOf key="att.hairpin.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:hairpin">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="harppedal" module="MEI.cmn">
        <desc>harp pedal ― Harp pedal diagram. The starting point of the harp
          pedal diagram may be indicated by either a tstamp, tstamp.ges,
          tstamp.real or startid attribute. It is a semantic error not to
          specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.harppedal.log"/>
          <memberOf key="att.harppedal.vis"/>
          <memberOf key="att.harppedal.ges"/>
          <memberOf key="att.harppedal.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:harppedal">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="gliss" module="MEI.cmn">
        <desc>glissando ― A continuous or sliding movement from one pitch to
          another, usually indicated by a straight or wavy line. Commonly also
          called a 'slide'. The term 'glissando' is frequently used to indicate
          both the case where distinct intermediate pitches are produced (as on
          the piano) and the case where they are not (as on the trombone),
          though the latter is sometimes referred to as 'portamento'. The visual
          appearance of the indicating line may be recorded in the rend
          attribute. Precise performance data, that is, exact pitches, may be
          recorded within the &lt;gliss&gt; element. The starting point of the
          glissando may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute. It is a semantic error not to specify a starting
          point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.gliss.log"/>
          <memberOf key="att.gliss.vis"/>
          <memberOf key="att.gliss.ges"/>
          <memberOf key="att.gliss.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="note"/>
              <rng:ref name="rest"/>
              <rng:ref name="tuplet"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:gliss">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or
                @tstamp.real"
                > Must have one of the attributes: startid, tstamp, tstamp.ges
                or tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="halfmrpt" module="MEI.cmn">
        <desc>half-measure repeat ― A half-measure repeat in any meter.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.halfmrpt.log"/>
          <memberOf key="att.halfmrpt.vis"/>
          <memberOf key="att.halfmrpt.ges"/>
          <memberOf key="att.halfmrpt.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.eventLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="measure" module="MEI.cmn">
        <desc>measure ― "Unit of musical time consisting of a fixed number of
          note-values of a given type, as determined by the prevailing meter,
          and delimited in musical notation by two bar lines." (New Harvard
          Dictionary of Music) In MEI, the measure element is a grouping
          mechanism for events and control events. It is also a linking element
          that uses attributes to connect the MEI document to an external
          electronic object or to another location within the MEI
          instance.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.measure.log"/>
          <memberOf key="att.measure.vis"/>
          <memberOf key="att.measure.ges"/>
          <memberOf key="att.measure.anl"/>
          <memberOf key="model.measureLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.measurePart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec ident="Check_measurejoin" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:measure[@join]">
              <sch:let name="thisjoin" value="@join"/>
              <sch:assert
                test="@join = 
                //mei:measure[@xml:id=$thisjoin]/@xml:id"
                >The value of @join must be the ID of a measure
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="mrest" module="MEI.cmn">
        <desc>measure rest ― Complete measure rest in any meter (Read, p.
          97-98). Automatically-generated numbering of consecutive measures of
          rest may be controlled via the multi.number attribute on the scoredef
          or staffdef elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mrest.log"/>
          <memberOf key="att.mrest.vis"/>
          <memberOf key="att.mrest.ges"/>
          <memberOf key="att.mrest.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:mrest[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies
                $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="mrpt" module="MEI.cmn">
        <desc>measure repeat ― An indication that the previous measure should be
          repeated. The automated numbering of consecutive measures of rest may
          be controlled via the multi.number attribute on the scoredef or
          staffdef elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mrpt.log"/>
          <memberOf key="att.mrpt.vis"/>
          <memberOf key="att.mrpt.ges"/>
          <memberOf key="att.mrpt.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="mrpt2" module="MEI.cmn">
        <desc>2-measure repeat ― An indication that the previous two measures
          should be repeated.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mrpt2.log"/>
          <memberOf key="att.mrpt2.vis"/>
          <memberOf key="att.mrpt2.ges"/>
          <memberOf key="att.mrpt2.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="mspace" module="MEI.cmn">
        <desc>measure space ― Complete measure consisting of empty space in any
          meter. The automated numbering of consecutive measures of space may be
          controlled via the multi.number attribute on the scoredef or staffdef
          elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mspace.log"/>
          <memberOf key="att.mspace.vis"/>
          <memberOf key="att.mspace.ges"/>
          <memberOf key="att.mspace.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:mspace[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies
                $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="multirest" module="MEI.cmn">
        <desc>multi-rest ― Multiple measures of rest compressed into a single
          symbol, frequently found in performer parts. The num attribute can
          used to store a number to be rendered along with the note. See Read,
          p. 102-105.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.multirest.log"/>
          <memberOf key="att.multirest.vis"/>
          <memberOf key="att.multirest.ges"/>
          <memberOf key="att.multirest.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_instr" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:multirest[@instr]">
              <sch:assert
                test="every $i in tokenize(@instr, '\s+') satisfies
                $i=preceding::mei:instrdef[@xml:id]/@xml:id"
              />
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="multirpt" module="MEI.cmn">
        <desc>multi-repeat ― Multiple repeated measures. In modern publishing
          practice, repeats of more than two measures should be written out
          using repeat signs. This element, however, is provided for handling
          non-standard practices often found in manuscript. The num attribute
          records the number of measures to be repeated.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.multirpt.log"/>
          <memberOf key="att.multirpt.vis"/>
          <memberOf key="att.multirpt.ges"/>
          <memberOf key="att.multirpt.anl"/>
          <memberOf key="model.eventLike.measureFilling"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="octave" module="MEI.cmn">
        <desc>octave ― An indication that a passage should be performed one or
          more octaves above or below its written pitch. The dis and dis.place
          attributes record the amount and direction of displacement,
          respectively. The rend attribute captures the appearance of the
          continuation line associated with the octave displacement. The
          starting point of the octave displacement may be indicated by either a
          tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending
          point may be recorded by either a dur, dur.ges or endid attribute. It
          is a semantic error not to specify one starting and one ending type of
          attribute. Please note that the dur attribute here is not a true
          duration, but rather a time stamp for the end point of the octave
          displacement. Also, note that the dur attribute is not required
          because the octave displacement can be visually instantaneous.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.octave.log"/>
          <memberOf key="att.octave.vis"/>
          <memberOf key="att.octave.ges"/>
          <memberOf key="att.octave.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:octave">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="ossia" module="MEI.cmn">
        <desc>ossia ― An alternative, usually simpler, version of a measure
          *present in the source being transcribed*. Typically, it is rendered
          above the staff on a reduced-size staff.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.ossia.log"/>
          <memberOf key="att.ossia.vis"/>
          <memberOf key="att.ossia.ges"/>
          <memberOf key="att.ossia.anl"/>
          <memberOf key="model.ossiaLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.measurePart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="pedal" module="MEI.cmn">
        <desc>pedal ― Piano pedal mark (Read, p. 317-318). The starting point of
          the pedal mark may be indicated by either a tstamp, tstamp.ges,
          tstamp.real or startid attribute. It is a semantic error not to
          specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.pedal.log"/>
          <memberOf key="att.pedal.vis"/>
          <memberOf key="att.pedal.ges"/>
          <memberOf key="att.pedal.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:pedal">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="reh" module="MEI.cmn">
        <desc>rehearsal mark ― In an orchestral score and its corresponding
          parts, a mark indicating a convenient point from which to resume
          rehearsal after a break. It may also be called a rehearsal figure, or
          when numbers are used instead of letters, a rehearsal number. See
          Read, p. 443. &lt;reh&gt; uses a subset of
          model.textphraseLike.limited.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.reh.log"/>
          <memberOf key="att.reh.vis"/>
          <memberOf key="att.reh.ges"/>
          <memberOf key="att.reh.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.lbLike"/>
              <rng:ref name="model.rendLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="slur" module="MEI.cmn">
        <desc>slur ― Historically, the term "slur" indicated two notes performed
          legato, while the term "phrase" was used for a "unified melodic idea".
          Nowadays, however, "slur" often has the same meaning as "phrase" (See
          Read, p. 265-266), since the visual rendition of the two concepts is
          the same. MEI provides two distinct elements so that those users
          wishing to maintain a distinction for historical reasons may do so. If
          the user does not want to maintain the distinction, then the more
          generic &lt;slur&gt; element should be employed. The starting point of
          the slur may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify one starting and one ending type of attribute. Either place,
          bulge, or bezier attributes may be used to record the curvature of the
          slur. The slur and tie elements may be used instead of the slur.* and
          tie.* attributes provided on chord and note elements when 1) they are
          required by software, or 2) multiple, alternative slurs are needed.
          Please note that the dur attribute is not a true duration, but rather
          a time stamp for the end point of the slur.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.slur.log"/>
          <memberOf key="att.slur.vis"/>
          <memberOf key="att.slur.ges"/>
          <memberOf key="att.slur.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:slur">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="tie" module="MEI.cmn">
        <desc>tie ― An indication that two notes of the same pitch form a single
          note with their combined rhythmic values. Most often it is rendered as
          a curved line connecting the two notes. See Read, p. 110-111,
          122.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.tie.log"/>
          <memberOf key="att.tie.vis"/>
          <memberOf key="att.tie.ges"/>
          <memberOf key="att.tie.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:tie">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="tuplet" module="MEI.cmn">
        <desc>tuplet ― A group of notes with "irregular" (sometimes called
          "irrational") rhythmic values, for example, three notes in the time
          normally occupied by two or nine in the time of five. The beam
          sub-element is allowed so that custom beaming may be indicated, e.g.,
          a septuplet may be divided into a group of three plus a group of four
          notes. See Read, p. 187-215. The tuplet element may also used for
          bowed tremolo (Read, p. 394) and double, triple, or flutter tonguing
          (Read, p. 348-349); that is, for repetition of the same pitch. In the
          case of irrational durations, such as such as two quarter notes in the
          time of five 8th notes in a measure of 5/8 time, decimal values may be
          used in the dur.ges attribute. For example, the dur.ges attribute
          would take the value "2.5" if the midi.div attribute's value was "1".
          The num and numbase attributes may be used for explicit labelling of a
          tuplet, such as, '3' with an 8th-note triplet, '3:2' over a
          quarter-note triplet, etc. The rendering of the ratio, however, is
          dependent on the num.format attribute found in the att.vis.tuplet
          attribute class.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.tuplet.log"/>
          <memberOf key="att.tuplet.vis"/>
          <memberOf key="att.tuplet.ges"/>
          <memberOf key="att.tuplet.anl"/>
          <memberOf key="model.eventLike.cmn"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="tupletspan" module="MEI.cmn">
        <desc>tuplet span ― Alternative element for encoding tuplets, especially
          useful for tuplets that extend across barlines. The starting point of
          the tuplet may be indicated by either a tstamp, tstamp.ges,
          tstamp.real or startid attribute, while the ending point may be
          recorded using a dur, dur.ges or endid attribute. It is a semantic
          error not to specify one starting and one ending type of
          attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.tupletspan.log"/>
          <memberOf key="att.tupletspan.vis"/>
          <memberOf key="att.tupletspan.ges"/>
          <memberOf key="att.tupletspan.anl"/>
          <memberOf key="model.controleventLike.cmn"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec
          ident="Start-_and_end-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:tupletspan">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
              <sch:assert test="@endid or @dur">Must have one of the attributes:
                dur or endid</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="mensur" module="MEI.mensural">
        <desc>mensuration ― The &lt;mensur&gt; element is provided for the
          encoding of mensural notation. It collects information about the
          metrical relationship between a note value and the next smaller value;
          that is, either triple or duple. The slash attribute indicates the
          number lines added to the mensuration sign. For example, one slash is
          added for what we now call 'alla breve'.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mensur.log"/>
          <memberOf key="att.mensur.vis"/>
          <memberOf key="att.mensur.ges"/>
          <memberOf key="att.mensur.anl"/>
          <memberOf key="model.eventLike.mensural"/>
          <memberOf key="model.staffdefPart.mensural"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="proport" module="MEI.mensural">
        <desc>proportion ― The &lt;proportion&gt; element is provided for the
          encoding of mensural notation. It allows the description of note
          durations as arithmetic ratios. While mensuration refers to the normal
          relationships between note durations, proportion affects the relations
          of the note durations to the tactus.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.proport.log"/>
          <memberOf key="att.proport.vis"/>
          <memberOf key="att.proport.ges"/>
          <memberOf key="att.proport.anl"/>
          <memberOf key="model.eventLike.mensural"/>
          <memberOf key="model.staffdefPart.mensural"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="ligature" module="MEI.mensural">
        <desc>ligature ― A mensural notation symbol that combines two or more
          notes into a single sign. The rhythmic meaning of the components of a
          ligature is typically contextual, not absolute; therefore, an
          interpretative duration may be encoded on each of the components using
          either the dur.ges attribute or the num and numbase attribute pair.
          The &lt;ligature&gt; element should *not* be used for brackets in
          modern notation that indicate notes that were part of a ligature in
          the original source.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.ligature.log"/>
          <memberOf key="att.ligature.vis"/>
          <memberOf key="att.ligature.ges"/>
          <memberOf key="att.ligature.anl"/>
          <memberOf key="model.eventLike.mensural"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.layerPart"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="ineume" module="MEI.neumes">
        <desc>interrupted neume ― a graphically interrupted neume; that is, a
          neume which is logically a single entity but is written using multiple
          signs. The constituent signs may be encoded using ineume and uneume
          sub-elements.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.ineume.log"/>
          <memberOf key="att.ineume.vis"/>
          <memberOf key="att.ineume.ges"/>
          <memberOf key="att.ineume.anl"/>
          <memberOf key="model.eventLike.neumes"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="macro.neumeModifierLike"/>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.verseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="syllable" module="MEI.neumes">
        <desc>syllable ― Neume notation can be thought of as "neumed text".
          Therefore, the syllable element provides high-level organization in
          this repertoire.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.syllableLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.syllablePart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="uneume" module="MEI.neumes">
        <desc>uninterrupted neume ― A graphically-uninterrupted neume sign.
          While ineume is allowed as a sub-element of uneume here as part of the
          model.eventLike.neume class, it is unlikely that an uninterrupted
          neume containing an interrupted neume is a meaningful
          construct.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.uneume.log"/>
          <memberOf key="att.uneume.vis"/>
          <memberOf key="att.uneume.ges"/>
          <memberOf key="att.uneume.anl"/>
          <memberOf key="model.eventLike.neumes"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="macro.neumeModifierLike"/>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.verseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="mordent" module="MEI.cmnOrnaments">
        <desc>mordent ― An ornament indicating rapid alternation of the main
          note with a secondary note, usually a step below, but sometimes a step
          above. See Read, p. 245-246. Events may be contained within
          &lt;mordent&gt; in order to record precise performance data. The
          starting point of the mordent may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute. It is a semantic error
          not to specify a starting point attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.mordent.log"/>
          <memberOf key="att.mordent.vis"/>
          <memberOf key="att.mordent.ges"/>
          <memberOf key="att.mordent.anl"/>
          <memberOf key="model.ornamentLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.eventLike"/>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:mordent">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="trill" module="MEI.cmnOrnaments">
        <desc>trill ― Rapid alternation of a note with one (usually at the
          interval of a second) above. Usually, the interval is understood to be
          diatonic unless altered by an accidental. The starting note of the
          trill; i.e., the written one or the ornamenting one, and the speed of
          alternation depends on performance practice. Events may be contained
          within &lt;trill&gt; in order to record precise performance data. The
          starting point of the trill may be indicated by either a tstamp,
          tstamp.ges, tstamp.real or startid attribute, while the ending point
          may be recorded by either a dur, dur.ges or endid attribute. It is a
          semantic error not to specify a starting point attribute. Please note
          that the dur attribute is not a true duration, but rather a time stamp
          for the end point of the trill.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.trill.log"/>
          <memberOf key="att.trill.vis"/>
          <memberOf key="att.trill.ges"/>
          <memberOf key="att.trill.anl"/>
          <memberOf key="model.ornamentLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.eventLike"/>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:trill">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="turn" module="MEI.cmnOrnaments">
        <desc>turn ― An ornament consisting of four notes — the upper neighbor
          of the written note, the written note, the lower neighbor, and the
          written note. See Read, p. 246-247. Events may be contained within
          &lt;turn&gt; in order to record precise performance data. Whether the
          turn is accented or unaccented may be inferred from the timestamp —
          accented turns occur directly on the affected beat, unaccented ones do
          not.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.turn.log"/>
          <memberOf key="att.turn.vis"/>
          <memberOf key="att.turn.ges"/>
          <memberOf key="att.turn.anl"/>
          <memberOf key="model.ornamentLike.cmn"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.eventLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="meicorpus" module="MEI.corpus">
        <desc>meicorpus ― The document element for a group of related MEI
          documents, each with its own complete header, contains a header for
          the group, and one or more &lt;mei&gt; elements. The group may be
          related in a number of ways, for example, by composer, by similar
          instrumentation, by holding institution, etc. This element's name
          should not be changed in order to assure an absolute minimum level of
          MEI compliance. This element is modelled on the teiCorpus element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.meiversion"/>
          <memberOf key="model.startLike.corpus"/>
        </classes>
        <content>
          <rng:ref name="meihead"/>
          <rng:zeroOrMore>
            <rng:ref name="mei"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="app" module="MEI.critapp">
        <desc>apparatus ― Contains one or more alternative encodings. The
          alternatives may be thought of as exclusive or as parallel. The type
          attribute may contain any convenient descriptive word, describing the
          extent of the variation (e.g. note, phrase, measure, etc.), its
          text-critical significance (e.g. significant, accidental, unclear), or
          the nature of the variation or the principles required to understand
          it (e.g. lectio difficilior, usus auctoris, etc.). This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.appLike"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="lem"/>
          </rng:optional>
          <rng:ref name="rdg"/>
          <rng:zeroOrMore>
            <rng:ref name="rdg"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="lem" module="MEI.critapp">
        <desc>lemma ― Contains the lemma, or base text, of a textual variation.
          The lem element may also be used, under some circumstances, to record
          the base text of the source edition, to mark the readings of a base
          witness, to indicate the preference of an editor or encoder for a
          particular reading, or to make clear, in cases of ambiguity, precisely
          which portion of the main text the variation applies to. Those who
          prefer to work without the notion of a base text may prefer not to use
          it at all. An integer indicating the position of this reading in a
          sequence, when there is reason to presume a sequence of the variant
          readings, may be captured in the seq attribute. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.crit"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.rdg.anl"/>
          <memberOf key="att.rdg.ges"/>
          <memberOf key="att.rdg.log"/>
          <memberOf key="att.rdg.vis"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="expansion"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.rdgPart.critapp"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="rdg" module="MEI.critapp">
        <desc>reading ― Since a reading can be a multi-measure section, the
          scoredef element is allowed so that a reading may have its own
          meta-data without the overhead of child sections. The measure
          sub-element is declared in the meiBase DTD and the pb sub-element is
          declared in the meiShared DTD. The app sub-element is permitted in
          order to allow nested sub-variants. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.crit"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="att.rdg.anl"/>
          <memberOf key="att.rdg.ges"/>
          <memberOf key="att.rdg.log"/>
          <memberOf key="att.rdg.vis"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="expansion"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="model.appLike"/>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.milestoneLike.music"/>
              <rng:ref name="model.scoredefLike"/>
              <rng:ref name="model.staffdefLike"/>
              <rng:ref name="model.staffgrpLike"/>
              <rng:ref name="model.annotLike"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.rdgPart.critapp"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="add" module="MEI.edittrans">
        <desc>addition ― Marks an addition to the text. The add element contains
          material inserted by an author, scribe, annotator, or corrector. The
          agent responsible for the addition may be encoded using the hand
          attribute, while the resp attribute records the editor or transcriber
          responsible for identifying the hand of the addition. The cert
          attribute signifies the degree of certainty ascribed to the
          identification of the hand of the addition. The editor(s) responsible
          for asserting this particular reading may be recorded in the resp
          attribute. The value of resp must point to one or more identifiers
          declared in the document header. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.trans"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="choice" module="MEI.edittrans">
        <desc>choice ― Groups a number of alternative encodings for the same
          point in a text. Because the children of a choice element all
          represent alternative ways of encoding the same sequence, it is
          natural to think of them as mutually exclusive. However, there may be
          cases where a full representation of a text requires the alternative
          encodings to be considered as parallel. Note also that choice elements
          may be recursively nested. This element is modelled on an element in
          the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.editLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="choice"/>
              <rng:ref name="model.choicePart"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="corr" module="MEI.edittrans">
        <desc>correction ― Contains the correct form of an apparent erroneous
          passage. The cert attribute signifies the degree of certainty ascribed
          to correction. The resp attribute contains an ID reference to an
          element containing the name of the editor or transcriber responsible
          for suggesting the correction held as the content of the &lt;corr&gt;
          element. If the correction was made in the source, resp should be used
          to identify the hand of the corrector. The value of resp must point to
          one or more identifiers declared in the document header. This element
          is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.trans"/>
          <memberOf key="model.choicePart"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="damage" module="MEI.edittrans">
        <desc>damage ― Contains an area of damage to the carrier. In the case of
          damage resulting from an identifiable cause, the agent attribute
          signifies the causative agent. The degree attribute signifies the
          degree of damage according to a convenient scale. A &lt;damage&gt; tag
          with this attribute should only be used where the text may be read
          with some confidence; data supplied from other sources should be
          tagged as &lt;supplied&gt;. The extent attribute indicates
          approximately how much text is in the damaged area, in notes,
          measures, inches, or any appropriate unit, where this cannot be
          deduced from the contents of the tag. For example, the damage may span
          structural divisions in the text so that the tag must then be empty of
          content. In the case of damage (deliberate defacement, etc.)
          assignable to an identifiable hand, the hand attribute signifies the
          hand responsible for the damage. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.agentident"/>
          <memberOf key="att.common"/>
          <memberOf key="att.extent"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.handident"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="degree" usage="opt">
            <desc>records the degree of damage.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="del" module="MEI.edittrans">
        <desc>deletion ― Contains information deleted, marked as deleted, or
          otherwise indicated as superfluous or spurious in the copy text by an
          author, scribe, annotator, or corrector. The resp attribute contains
          an ID reference to an element containing the name of the editor or
          transcriber responsible for identifying the hand of the deletion. The
          cert attribute signifies the degree of certainty ascribed to the
          identification of the hand of the deletion. The hand of the agent
          which made the deletion should be pointed to using the hand attribute.
          The rend attribute may be used to record the method used to make the
          deletion (overstrike, strike[through], etc.) or how the deleted matter
          should be displayed. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.trans"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="rend" usage="opt">
            <desc>contains an indication of how the deletion should be
              rendered.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="gap" module="MEI.edittrans">
        <desc>gap ― Indicates a point where material has been omitted in a
          transcription, whether as part of sampling practice or for editorial
          reasons described in the MEI header. When material is omitted because
          it is illegible or inaudible, &lt;unclear&gt; should be used instead.
          Similarly, use &lt;damage&gt; if the omission is due to damage and
          &lt;del&gt; if the omission is because the material is marked as
          deleted, or otherwise indicated as superfluous or spurious in the copy
          text by an author, scribe, annotator, or corrector. An indication of
          how much material has been omitted from the transcription may be
          recorded in the extent attribute. The unit attribute names the unit
          used for describing the extent of the gap. The reason attribute gives
          the reason for omission. Sample values include 'sampling',
          'irrelevant', 'cancelled'. The resp attribute contains an ID reference
          to an element containing the name of the editor, transcriber or
          encoder responsible for the decision not to provide any transcription
          of the material and hence the application of the &lt;gap&gt; tag. The
          hand attribute signifies the hand which made the deletion in the case
          of text omitted from the transcription because of deliberate deletion
          by an identifiable hand. The cert attribute signifies the degree of
          certainty ascribed to the identification of the extent of the missing
          material. This element is modelled on an element in the Text Encoding
          Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.extent"/>
          <memberOf key="att.handident"/>
          <memberOf key="att.measurement"/>
          <memberOf key="att.reasonident"/>
          <memberOf key="model.editLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="handshift" module="MEI.edittrans">
        <desc>hand shift ― Marks the beginning of a passage written in a new
          hand, or of a change in the scribe, writing style, ink or character of
          the document hand. The character attribute describes characteristics
          of the hand, particularly those related to the quality of the writing,
          e.g., 'shaky', 'thick', regular'. A description of the tint or type of
          ink, e.g. 'brown' or the writing medium, e.g. 'pencil', may be placed
          in the medium attribute. The new hand may be identified using the new
          attribute, while the previous hand may be recorded in the old
          attribute. The resp attribute contains an ID reference to an element
          containing the name of the editor or transcriber responsible for
          identifying the change of hand. The cert attribute signifies the
          degree of certainty ascribed to the identification of the new hand.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.medium"/>
          <memberOf key="model.editLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_handshift" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:handshift[@old]">
              <sch:let name="thisold" value="@old"/>
              <sch:assert
                test="@old = preceding::mei:hand[@xml:id=$thisold]/@xml:id">The
                value of @old must be the ID of a hand element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_handshiftnew" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:handshift[@new]">
              <sch:let name="thisnew" value="@new"/>
              <sch:assert
                test="@new = preceding::mei:hand[@xml:id=$thisnew]/@xml:id">The
                value of @new must be the ID of a hand element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <attList>
          <attDef ident="character" usage="opt">
            <desc>describes the character of the new hand.</desc>
          </attDef>
          <attDef ident="new" usage="opt">
            <desc>identifies the new hand. The value must contain the ID of a
              hand element given elsewhere in the document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
          <attDef ident="old" usage="opt">
            <desc>identifies the old hand. The value must contain the ID of a
              hand element given elsewhere in the document.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="orig" module="MEI.edittrans">
        <desc>original ― Contains a reading which is marked as following the
          original, rather than being normalized or corrected. This element will
          often be combined with a regularized form within a choice element. The
          editor(s) responsible for asserting that the material is original may
          be recorded in the resp attribute. The value of resp must point to one
          or more identifiers declared in the document header. The cert
          attribute signifies the degree of certainty ascribed to the
          transcription of the original text. This element is modelled on an
          element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.choicePart"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="reg" module="MEI.edittrans">
        <desc>regularization ― Contains a reading which has been regularized or
          normalized in some sense. It is possible to identify the individual
          responsible for the regularization, and, using the choice and orig
          elements, to provide both original and regularized readings. The
          editor(s) responsible for asserting the regularized material may be
          recorded in the resp attribute. The value of resp must point to one or
          more identifiers declared in the document header. The cert attribute
          signifies the degree of certainty ascribed to the regularized reading.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="model.choicePart"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="restore" module="MEI.edittrans">
        <desc>restore ― Indicates restoration of musical material to an earlier
          state by cancellation of an editorial or authorial marking or
          instruction. The desc (description) attribute gives a prose
          description of the means of restoration, 'stet' or 'strike-down', for
          example. The cert attribute signifies the degree of certainty ascribed
          to the identification of the hand of the restoration. The type
          attribute may be used to indicate the action cancelled by the
          restoration. The resp attribute contains an ID reference to an element
          containing the name of the editor or transcriber responsible for
          identifying the hand of the restoration. The hand attribute signifies
          the hand of the agent which made the restoration. This element is
          modelled on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.trans"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="desc" usage="opt">
            <desc>provides a description of the means of restoration.</desc>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="sic" module="MEI.edittrans">
        <desc>sic ― Contains apparently incorrect or inaccurate musical
          material. A correction for the apparent error may be given in an
          accompanying child or sibling corr element. This element is modelled
          on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="model.choicePart"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="subst" module="MEI.edittrans">
        <desc>substitution ― Groups transcriptional elements when the
          combination is to be regarded as a single intervention in the text.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.editLike"/>
        </classes>
        <content>
          <rng:ref name="model.transcriptionLike"/>
          <rng:oneOrMore>
            <rng:ref name="model.transcriptionLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="supplied" module="MEI.edittrans">
        <desc>supplied ― Contains musical material supplied by the transcriber
          or editor in place of text which cannot be read, either because of
          physical damage or loss in the original or because it is illegible for
          any reason. When the presumed loss of text arises from an identifiable
          cause, agent signifies the causative agent. When the presumed loss of
          text arises from action (partial deletion, etc.) assignable to an
          identifiable hand, the hand attribute signifies the hand responsible
          for the action. The reason attribute indicates why the text has to be
          supplied, e.g. 'overbinding', 'faded ink', 'lost folio', 'omitted in
          original', etc. The source attribute contains the source of the
          supplied text. The editor(s) responsible for supplied material may be
          recorded in the resp attribute. The value of resp must point to one or
          more identifiers declared in the document header. The cert attribute
          signifies the degree of certainty ascribed to the supplied material.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.agentident"/>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.reasonident"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="unclear" module="MEI.edittrans">
        <desc>unclear ― Contains musical material that cannot be transcribed
          with certainty because it is illegible or inaudible in the source.
          Where the difficulty in transcription arises from an identifiable
          cause, the agent attribute signifies the causative agent. The cert
          attribute signifies the degree of certainty ascribed to the
          transcription of the text contained within the &lt;unclear&gt;
          element. Where the difficulty in transcription arises from action
          (partial deletion, etc.) assignable to an identifiable hand, the hand
          attribute signifies the hand responsible for the action. The reason
          attribute indicates why the material is difficult to transcribe. The
          resp attribute indicates the individual responsible for the
          transcription of the word, phrase, or passage contained with the
          &lt;unclear&gt; element. The value of resp must point to one or more
          identifiers declared in the document header. This element is modelled
          on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.agentident"/>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.handident"/>
          <memberOf key="att.reasonident"/>
          <memberOf key="model.choicePart"/>
          <memberOf key="model.transcriptionLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.eventLike"/>
              <rng:ref name="model.eventLike.neumes"/>
              <rng:ref name="model.controleventLike"/>
              <rng:ref name="model.lyricsLike"/>
              <rng:ref name="model.midiLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
              <rng:ref name="model.eventLike.measureFilling"/>
              <rng:ref name="model.noteModifierLike"/>
              <rng:ref name="model.sectionLike"/>
              <rng:ref name="model.measureLike"/>
              <rng:ref name="model.staffLike"/>
              <rng:ref name="model.layerLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="facsimile" module="MEI.facsimile">
        <desc>facsimile ― Contains a representation of some written source in
          the form of a set of images rather than as transcribed or encoded
          text. The source attribute may be used to link the collection of
          images with a particular source described in the header. This element
          is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.source"/>
          <memberOf key="model.facsimileLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="surface"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="surface" module="MEI.facsimile">
        <desc>surface ― Defines a written surface in terms of a rectangular
          coordinate space, optionally grouping one or more graphic
          representations of that space, and rectangular zones of interest
          within it. The startid attribute may be used to hold a reference to
          the first feature occurring on this surface. This element is modelled
          on an element in the Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.coordinated"/>
          <memberOf key="att.startid"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.figdescLike"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.graphicLike"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="zone"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="zone" module="MEI.facsimile">
        <desc>zone ― Defines a rectangular area contained within a surface. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.coordinated"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.figdescLike"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.graphicLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="graphic" module="MEI.figtable">
        <desc>graphic ― Indicates the location of an inline graphic,
          illustration, or figure. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.internetmedia"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.measurement"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.width"/>
          <memberOf key="model.graphicLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="height" usage="opt">
            <desc>measurement of the vertical dimension of an image.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="fig" module="MEI.figtable">
        <desc>figure ― groups elements representing or containing graphic
          information such as an illustration or figure. This element is
          modelled on the figure element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.figureLike"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="model.captionLike"/>
          </rng:optional>
          <rng:optional>
            <rng:ref name="figdesc"/>
          </rng:optional>
          <rng:zeroOrMore>
            <rng:ref name="model.graphicLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="figdesc" module="MEI.figtable">
        <desc>figure description ― Contains a brief prose description of the
          appearance or content of a graphic figure, for use when documenting an
          image without displaying it. Best practice suggests the use of
          controlled vocabulary. Don't confuse this element with a figure
          caption. A caption is text primarily intended for display with an
          illustration. It may or may not function as a description of the
          illustration. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.figdescLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.annotLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="table" module="MEI.figtable">
        <desc>table ― Visual layout in tabular form. This element is modelled on
          elements in Encoded Archival Description (EAD), Text Encoding
          Initiative (TEI), and HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.tableLike"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="model.captionLike"/>
          </rng:optional>
          <rng:oneOrMore>
            <rng:ref name="tr"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="td" module="MEI.figtable">
        <desc>table data ― Designates a table cell that contains data as opposed
          to a cell that contains column or row heading information. The colspan
          and rowspan attributes tabular display rendering information. This
          element is modelled on an element in HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.tabular"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="th" module="MEI.figtable">
        <desc>table header ― Designates a table cell containing column or row
          heading information as opposed to one containing data. The colspan and
          rowspan attributes tabular display rendering information. This element
          is modelled on an element in HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.tabular"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="tr" module="MEI.figtable">
        <desc>table row ― A formatting element that contains one or more
          &lt;td&gt; or &lt;th&gt; elements (cells) in a &lt;table&gt;. A cell
          is the intersection of a row and a column. The precise rendition of
          the table and its cells should be specified in a style sheet. This
          element is modelled on an element in HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="th"/>
              <rng:ref name="td"/>
            </rng:choice>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="barre" module="MEI.harmony">
        <desc>barre ― An indication of fingering in a chord tablature grid. The
          startid and endid attributes are used to indicate the
          &lt;chordmember&gt; elements on which the barre starts and finishes
          respectively. The fret at which the barre should be created is
          recorded by the fret attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.fretlocation"/>
          <memberOf key="att.startendid"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_barrestartid_and_endid"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:barre">
              <sch:let name="from" value="@startid"/>
              <sch:let name="to" value="@endid"/>
              <sch:assert
                test="@startid = preceding-sibling::mei:chordmember[@xml:id=$from]/@xml:id"
                >The value of @startid must be the ID of a chordmember
                element.</sch:assert>
              <sch:assert
                test="@endid = preceding-sibling::mei:chordmember[@xml:id=$to]/@xml:id"
                >The value of @endid must be the ID of a chordmember
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="chorddef" module="MEI.harmony">
        <desc>chord definition ― Chord tablature definition. An id attribute,
          while not required by the schema, is needed so that &lt;harm&gt;
          elements can reference a particular chord definition. The pos
          (position) attribute is provided in order to create displayable chord
          tablature grids. &lt;chordmember&gt; sub-elements record the
          individual pitches of the chord. &lt;barre&gt;sub-elements may be used
          when a single finger is used to stop multiple strings.</desc>
        <classes>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="chordmember"/>
          </rng:zeroOrMore>
          <rng:zeroOrMore>
            <rng:ref name="barre"/>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="pos" usage="opt">
            <desc>records the fret position at which the chord tablature is to
              be played.</desc>
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="chordmember" module="MEI.harmony">
        <desc>chord member ― An individual pitch in a chord defined by a
          &lt;chorddef&gt; element. The fing and fret attributes are provided in
          order to create displayable chord tablature grids. The inth (harmonic
          interval) attribute may be used to facilitate automated performance of
          a chord. It gives the number of 1/2 steps above the bass. Of course,
          for the bass note itself, inth should be set to '0'. The fret at which
          a finger should be placed is recorded in the fret attribute.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.accidental.performed"/>
          <memberOf key="att.fretlocation"/>
          <memberOf key="att.intervalharmonic"/>
          <memberOf key="att.pitched"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="fing" usage="opt">
            <desc>indicates which finger, if any, should be used to play an
              individual string. The values 'x' and 'o' indicated muffled and
              open strings, respectively.</desc>
            <datatype>
              <rng:ref name="data.FINGER.FRET"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="chordtable" module="MEI.harmony">
        <desc>chord table ― Chord/tablature look-up table. A table may be shared
          between MEI instances through the use of an external parsed entity
          containing the look-up table to be shared.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.chordtableLike"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="chorddef"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="harm" module="MEI.harmony">
        <desc>harmony ― An indication of harmony, e.g., chord names, tablature
          grids, harmonic analysis, figured bass. The starting point of the
          harmony may be indicated by either a tstamp, tstamp.ges, tstamp.real
          or startid attribute, while the ending point may be recorded by either
          a dur, dur.ges or endid attribute. It is a semantic error not to
          specify a starting point attribute. The dur attribute encodes the
          logical and visual duration of the harmony. Please note that the dur
          attribute here is not a true duration, but rather a time stamp for the
          end point of the harmony.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.harm.log"/>
          <memberOf key="att.harm.vis"/>
          <memberOf key="att.harm.ges"/>
          <memberOf key="att.harm.anl"/>
          <memberOf key="model.harmLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.graphicprimitiveLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
        <constraintSpec
          ident="Start-type_attributes_required_on_some_control_events"
          scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:harm">
              <sch:assert
                test="@startid or @tstamp or @tstamp.ges or @tstamp.real"> Must
                have one of the attributes: startid, tstamp, tstamp.ges or
                tstamp.real</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <constraintSpec ident="Check_harmchordref" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:harm[@chordref]">
              <sch:let name="thischordref" value="@chordref"/>
              <sch:assert
                test="@chordref = preceding::mei:chorddef[@xml:id=$thischordref]/@xml:id"
                >The value of @chordref must be the ID of a chorddef
                element.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
      </elementSpec>
      <elementSpec ident="timeline" module="MEI.linkalign">
        <desc>timeline ― Provides a set of ordered points in time to which
          musical elements can be linked in order to create a temporal alignment
          of those elements. The origin attribute designates the origin of the
          timeline, i.e., the time at which it begins. It must point to one of
          the when elements in its content. Units specifies the unit of time
          corresponding to the value of the interval attribute of the timeline
          or of its constituent points in time. The mediacontent attribute is
          provided in order to link the timeline to a particular external media
          file, such as an audio file. The medialength attribute specifies the
          length of the external media file in terms of the unit attribute. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.measurement"/>
          <memberOf key="model.alignLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="when"/>
          </rng:zeroOrMore>
        </content>
        <attList>
          <attDef ident="mediacontent" usage="opt">
            <datatype>
              <rng:ref name="data.URI"/>
            </datatype>
          </attDef>
          <attDef ident="medialength" usage="opt">
            <datatype>
              <rng:data type="positiveInteger"/>
            </datatype>
          </attDef>
          <attDef ident="origin" usage="req">
            <desc>designates the origin of the timeline, i.e. the &lt;when&gt;
              element associated with the beginning of the timeline.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="when" module="MEI.linkalign">
        <desc>when ― Indicates a point in time either absolutely (using the
          absolute attribute), or relative to other elements in the same
          timeline element (using the interval and since attributes). The data
          attribute may be used to reference one or more features that occur at
          this point in time. This element is modelled on an element in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.datapointing"/>
          <memberOf key="att.measurement"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <constraintSpec ident="Check_whensince" scheme="isoschematron">
          <constraint>
            <sch:rule context="mei:when[@since]">
              <sch:let name="thissince" value="@since"/>
              <sch:assert
                test="@since = preceding-sibling::mei:when[@xml:id=$thissince]/@xml:id"
                >The value of @since must be the ID of a preceding sibling when
                element.</sch:assert>
              <sch:assert test="@interval and @unit">If @since is present,
                @interval and @unit are also required.</sch:assert>
            </sch:rule>
          </constraint>
        </constraintSpec>
        <attList>
          <attDef ident="absolute" usage="opt">
            <desc>provides an absolute value for the time associated with a
              point on a timeline. This attribute is required for the element
              designated as the origin by the parent timeline.</desc>
          </attDef>
          <attDef ident="interval" usage="opt">
            <desc>specifies the time interval between this timepoint and the one
              designated by the since attribute.</desc>
            <datatype>
              <rng:data type="decimal">
                <rng:param name="minInclusive">1</rng:param>
              </rng:data>
            </datatype>
          </attDef>
          <attDef ident="since" usage="opt">
            <desc>identifies the reference point for determining the time of the
              current when element, which is obtained by adding the interval to
              the time of the reference point. The value should be the ID of
              another when element in the same timeline. If the since attribute
              is omitted and the absolute attribute is not specified, then the
              reference point is understood to be the immediately preceding when
              element.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="lyrics" module="MEI.lyrics">
        <desc>lyrics ― Vocally performed 'text' of a musical composition, such
          as a song or opera. The staff attribute gives the staff to which the
          lyrics are attached. If there is more than one layer on that staff,
          the layer attribute may be used to indicate the layer from which the
          rhythm should be taken. Often, automatic text underlay may rely on the
          notes of the indicated staff. When this is not desirable, however, the
          rhythm of the lyrics may be recorded in the rhythm attribute of the
          parent verse element. </desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.lyrics.log"/>
          <memberOf key="att.lyrics.vis"/>
          <memberOf key="att.lyrics.ges"/>
          <memberOf key="att.lyrics.anl"/>
          <memberOf key="model.lyricsLike"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.verseLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="verse" module="MEI.lyrics">
        <desc>verse ― Lyric verse. The lb element is allowed here in order to
          facilitate karaoke applications. The func attribute on lb may be used
          to distinguish true line ends from line group ends for these
          applications.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.verse.log"/>
          <memberOf key="att.verse.vis"/>
          <memberOf key="att.verse.ges"/>
          <memberOf key="att.verse.anl"/>
          <memberOf key="model.verseLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="dir"/>
              <rng:ref name="dynam"/>
              <rng:ref name="tempo"/>
              <rng:ref name="space"/>
            </rng:choice>
          </rng:zeroOrMore>
          <rng:oneOrMore>
            <rng:ref name="model.sylLike"/>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.lbLike"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="cc" module="MEI.midi">
        <desc>control change ― MIDI parameter/control change. The num attribute
          specifies parameter number, while val contains the parameter value.
          Each must fall in the range 0-127.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
          <memberOf key="att.midivalue"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="chan" module="MEI.midi">
        <desc>channel ― MIDI channel assignment.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="num" usage="req">
            <desc>MIDI number in the range set by data.MIDICHANNEL.</desc>
            <datatype>
              <rng:ref name="data.MIDICHANNEL"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="chanpr" module="MEI.midi">
        <desc>channel pressure ― MIDI channel pressure/after touch. The value of
          the num attribute must be in the range 0-127.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="cue" module="MEI.midi">
        <desc>cue ― MIDI cue point.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="hex" module="MEI.midi">
        <desc>hex ― Arbitrary MIDI data in hexadecimal form. The element's
          content must be wrapped in a CDATA section to avoid parsing
          errors.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="marker" module="MEI.midi">
        <desc>marker ― MIDI marker meta-event.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="metatext" module="MEI.midi">
        <desc>meta text ― MIDI text meta-event.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="midi" module="MEI.midi">
        <desc>midi ― Container for elements that contain information useful when
          generating MIDI output. The n attribute can be used to differentiate
          between multiple MIDI data streams, e.g. quantized/unquantized,
          straight/swing, ornamented/as notated, etc.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.log"/>
          <memberOf key="att.midi.vis"/>
          <memberOf key="att.midi.ges"/>
          <memberOf key="att.midi.anl"/>
          <memberOf key="model.midiLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:ref name="cc"/>
              <rng:ref name="chan"/>
              <rng:ref name="chanpr"/>
              <rng:ref name="cue"/>
              <rng:ref name="hex"/>
              <rng:ref name="marker"/>
              <rng:ref name="metatext"/>
              <rng:ref name="noteoff"/>
              <rng:ref name="noteon"/>
              <rng:ref name="port"/>
              <rng:ref name="prog"/>
              <rng:ref name="seqnum"/>
              <rng:ref name="trkname"/>
              <rng:ref name="vel"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="noteoff" module="MEI.midi">
        <desc>note-off ― MIDI note-off event.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="noteon" module="MEI.midi">
        <desc>note-on ― MIDI note-on event.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="port" module="MEI.midi">
        <desc>port ― MIDI port. The num attribute must be in the range
          0-127.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="prog" module="MEI.midi">
        <desc>program ― MIDI program change. The num attribute must be in the
          range 0-127.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="seqnum" module="MEI.midi">
        <desc>sequence number ― MIDI sequence number.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="num" usage="req">
            <desc>number in the range 0-65535.</desc>
            <datatype>
              <rng:data type="nonNegativeInteger">
                <rng:param name="maxInclusive">65535</rng:param>
              </rng:data>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="trkname" module="MEI.midi">
        <desc>track name ― MIDI track/sequence name.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
        </classes>
        <content>
          <rng:text/>
        </content>
      </elementSpec>
      <elementSpec ident="vel" module="MEI.midi">
        <desc>velocity ― MIDI Note-on/off velocity. The num attribute must be in
          the range 0-127.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.midi.event"/>
          <memberOf key="att.midinumber"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="form" usage="req">
            <desc>indicates whether this is note-on or note-off velocity
              data.</desc>
            <valList type="closed">
              <valItem ident="on"/>
              <valItem ident="off"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="corpname" module="MEI.namesdates">
        <desc>corporate name ― Identifies an organization or group of people
          that acts as a single entity. Examples include names of associations,
          institutions, business firms, non-profit enterprises, governments,
          government agencies, projects, programs, religious bodies, churches,
          conferences, athletic contests, exhibitions, expeditions, fairs, and
          ships. Secondary name parts may be encoded in &lt;corpname&gt;
          sub-elements. The name of the list from which a controlled value is
          taken may be recorded using the authority attribute. This element is
          modelled on an element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike.agent"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="geogname" module="MEI.namesdates">
        <desc>geographic name ― The proper noun designation for a place, natural
          feature, or political jurisdiction. Examples include Black Forest;
          Baltimore, Maryland; and Quartier Latin, Paris. Name sub-parts may be
          encoded in &lt;geogname&gt; sub-elements. The name of the list from
          which a controlled value is taken, such as the Thesaurus of Geographic
          Names (TGN), may be recorded using the authority attribute. This
          element is modelled on an element in Encoded Archival Description
          (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike.geogname"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="periodname" module="MEI.namesdates">
        <desc>period name ― A label that describes a period of time, such as
          'Baroque' or '3rd Style period'. The name of the list from which a
          controlled value is taken may be recorded using the authority
          attribute.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike.label"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="persname" module="MEI.namesdates">
        <desc>personal name ― Designation for an individual, including any or
          all of that individual's forenames, surnames, honorific titles, and
          added names. Name sub-parts may be recorded in &lt;persname&gt;
          sub-elements. The name of the list from which a controlled value is
          taken may be recorded using the authority attribute. This element is
          modelled on an element in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.datable"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike.agent"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="stylename" module="MEI.namesdates">
        <desc>style name ― A label for a characteristic style of writing or
          performance, such as 'bebop' or 'rock-n-roll'. Do not confuse this
          element with the &lt;periodname&gt; element. The name of the list from
          which a controlled value is taken may be recorded using the authority
          attribute.</desc>
        <classes>
          <memberOf key="att.bibl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.edit"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.name"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.nameLike.label"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="extptr" module="MEI.ptrref">
        <desc>external pointer ― An empty linking element that uses attributes
          to connect the MEI document to an external electronic object. Either
          the entityref or href attribute may be used to identify the external
          object. Don't confuse this element with the &lt;ptr&lt; element, which
          is an internal link for movement from one place in the MEI document to
          another in the same document. This element is modelled on an element
          in Encoded Archival Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.internetmedia"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="model.locrefLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="extref" module="MEI.ptrref">
        <desc>external reference ― A linking element that can include text and
          sub-elements as part of its reference to an electronic object that is
          external to the MEI document. Either the entityref or href attribute
          may be used to identify the external object. Don't confuse this
          element with the &lt;ref&gt; element, which is an internal link for
          movement from one place in the MEI document to another in the same
          document. This element is modelled on an element in Encoded Archival
          Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.external"/>
          <memberOf key="model.locrefLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="ptr" module="MEI.ptrref">
        <desc>pointer ― An empty internal linking element that uses attributes
          to provide for movement from one place in an MEI document to another
          place in the same document. Unlike the &lt;ref&gt; element,
          &lt;ptr&gt; cannot contain text or sub-elements to describe the
          referenced object. Don't confuse this element with &lt;extptr&gt;
          which is used to connect the MEI document to an external electronic
          object. This element is modelled on an element in Encoded Archival
          Description (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="model.ptrLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="ref" module="MEI.ptrref">
        <desc>reference ― An internal linking element that provides for movement
          from one place in a MEI document to another point in the same
          document. Unlike the &lt;ptr&gt; element, &lt;ref&gt; may contain text
          and sub-elements to describe the destination. Don't confuse this
          element with &lt;extref&gt; which provides for linking to an
          electronic object that is external to the MEI document. This element
          is modelled on an element in Encoded Archival Description
          (EAD).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.link.common"/>
          <memberOf key="att.link.internal"/>
          <memberOf key="model.locrefLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="back" module="MEI.text">
        <desc>back ― Back matter such as indexes, advertisements, etc. following
          the main part of a text. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.backLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
          <rng:oneOrMore>
            <rng:ref name="model.divLike"/>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="blockquote" module="MEI.text">
        <desc>blockquote ― A formatting element that designates an extended
          quotation; that is, a passage attributed to a source external to the
          text. The quotation is normally set off from the text by spacing or
          other typographic distinction. The source for the quote may be
          included in the optional &lt;bibl&gt; sub-element. Use &lt;rend&gt;
          for words that are enclosed in quotation marks for emphasis or for a
          short quoted phrase that occurs within a line of text. This element is
          modelled on an element in HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.quoteLike"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.textcomponentLike"/>
          </rng:oneOrMore>
          <rng:optional>
            <rng:ref name="model.biblLike"/>
          </rng:optional>
        </content>
      </elementSpec>
      <elementSpec ident="div" module="MEI.text">
        <desc>division ― Major structural division of text, such as a preface,
          chapter or section. Often, the &lt;head&gt; sub-element identifies the
          &lt;div&gt;'s purpose. This element is modelled on an element in the
          Text Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.typed"/>
          <memberOf key="model.divLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
          <rng:optional>
            <rng:ref name="model.headLike"/>
          </rng:optional>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.textcomponentLike"/>
            </rng:choice>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="front" module="MEI.text">
        <desc>front ― Bundles prefatory text found before the start of the
          musical text. &lt;titlepage&gt; may be used to transcribe the item's
          title page. Other front matter structures, such as a preface,
          dedication, or table of contents, may be encoded as textual divisions;
          that is, as &lt;div&gt;s, with an optional &lt;head&gt; sub-element
          describing the nature of the division. The &lt;pb&gt; element is
          allowed here in order to accommodate page images, e.g. cover,
          endpapers, etc. before and after the actual textual matter. This
          element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.frontLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
          <rng:oneOrMore>
            <rng:choice>
              <rng:ref name="model.divLike"/>
              <rng:ref name="model.frontPart"/>
            </rng:choice>
          </rng:oneOrMore>
          <rng:zeroOrMore>
            <rng:ref name="model.milestoneLike.text"/>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="head" module="MEI.text">
        <desc>heading ― Contains any heading, for example, the title of a
          section of text, or the heading of a list. When &lt;head&gt; is used,
          it should be the first sub-element, followed by one or more other
          elements. This element is modelled on elements in Encoded Archival
          Description (EAD), Text Encoding Initiative (TEI), and HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.headLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="item" module="MEI.text">
        <desc>item ― Single item in a &lt;list&gt;. This element is modelled on
          elements in Encoded Archival Description (EAD), Text Encoding
          Initiative (TEI), and HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textcomponentLike"/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="l" module="MEI.text">
        <desc>line of text ― Contains a single line of text within a line group.
          The n attribute should be used to record a label for the line, i.e.,
          most likely a line number. Do not confuse this element with the
          &lt;line&gt; element, which is used for graphical lines that occur in
          music notation. This element is modelled on elements in the Text
          Encoding Initiative (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="model.lLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="lg" module="MEI.text">
        <desc>line group ― Usually contains a lyric verse although it may be
          used for any section of text that is organized as a group of lines.
          This element is modelled on an element in the Text Encoding Initiative
          (TEI).</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.lgLike"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="model.headLike"/>
          </rng:optional>
          <rng:oneOrMore>
            <rng:ref name="model.lLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="list" module="MEI.text">
        <desc>list ― A formatting element that contains a series of items
          separated from one another and arranged in a linear, often vertical,
          sequence. This element is modelled on elements in Encoded Archival
          Description (EAD), Text Encoding Initiative (TEI), and HTML.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.listLike"/>
        </classes>
        <content>
          <rng:optional>
            <rng:ref name="model.headLike"/>
          </rng:optional>
          <rng:oneOrMore>
            <rng:ref name="item"/>
          </rng:oneOrMore>
        </content>
        <attList>
          <attDef ident="form" usage="opt">
            <desc>used to identify and format a list. In a "simple" list,
              &lt;item&gt;s are not numbered or bulleted. In a "marked" list,
              the sequence of the list items is not critical, and a bullet, box,
              dash, or other character is displayed at the start of each
              &lt;item&gt;. In an "ordered" list, the sequence of the items is
              important, and each &lt;item&gt; is lettered or numbered. Style
              sheet functions should be used to specify the mark or numeration
              system for each &lt;item&gt;.</desc>
            <valList type="closed">
              <valItem ident="simple"/>
              <valItem ident="marked"/>
              <valItem ident="ordered"/>
            </valList>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="anchoredtext" module="MEI.usersymbols">
        <desc>anchored text ― Container for text that is fixed to a particular
          location, regardless of changes made to the layout of the measures
          around it. This element may be used where semantic markup of the text
          is neither possible nor desirable, such as in optical music
          recognition (OMR) applications. The content model here is similar to
          paragraph without model.textcomponent and &lt;pb&gt; sub-elements. The
          starting point of the text may be identified in absolute output
          coordinate terms using the x and y attributes or relative to the
          location of another element using the startid attribute. The
          attributes in the att.visualoffset class may be used to record
          horizontal, vertical, or time offsets from the absolute coordinates or
          from the location of the referenced element.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.lang"/>
          <memberOf key="att.startid"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.graphicprimitiveLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
              <rng:ref name="model.editLike"/>
              <rng:ref name="model.transcriptionLike"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="curve" module="MEI.usersymbols">
        <desc>curve ― A curved line that cannot be represented by a more
          specific element, such as a &lt;slur&gt;. The starting point of the
          curve may be identified in absolute output coordinate terms using the
          x1 and y1 attributes or relative to the location of another element
          using the startid attribute. The attributes in the att.visualoffset
          class may be used to record horizontal, vertical, or time offsets from
          the absolute coordinates or from the location of the referenced
          element. Similarly, the terminal point of the curve may be recorded
          using either the x2,y2 coordinates or in relation to the location of
          another element using the endid attribute. Attributes in the
          att.visualoffset2 class maybe used to record the offsets of the ending
          point. The bulge attribute or, alternatively, the bezier attribute,
          describes the shape of the curve. The bulge attribute describes the
          curve as a set of distance values above or below an imaginary line
          connecting the endpoints of the curve while the bezier attribute
          records the placement of Bezier control points as a series of
          space-separated xy coordinate pairs, eg. 19 45 -32 118. The bulge
          attribute must contain one or more values of the NUMBER datatype. The
          rend attribute captures the appearance of the curve.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.color"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.curvature"/>
          <memberOf key="att.curverend"/>
          <memberOf key="model.graphicprimitiveLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
      </elementSpec>
      <elementSpec ident="line" module="MEI.usersymbols">
        <desc>line ― A line that cannot be represented by a more specific
          element. The starting point of the line may be identified in absolute
          output coordinate terms using the x1 and y1 attributes or relative to
          the location of another element using the startid attribute. The
          attributes in the att.visualoffset class may be used to record
          horizontal, vertical, or time offsets from the absolute coordinates or
          from the location of the referenced element. Similarly, the terminal
          point of the line may be recorded using either the x2 and y2
          attributes or in relation to the location of another element using the
          endid attribute. Attributes in the att.visualoffset2 class maybe used
          to record the offsets of the ending point. Text content of the line
          element, e.g. 'gliss.', may be rendered with the line. The appearance
          of the line is captured in the rend attribute.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.color"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.startendid"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.visualoffset2"/>
          <memberOf key="att.xy"/>
          <memberOf key="att.xy2"/>
          <memberOf key="att.linerend"/>
          <memberOf key="model.graphicprimitiveLike"/>
        </classes>
        <content>
          <rng:zeroOrMore>
            <rng:choice>
              <rng:text/>
              <rng:ref name="model.textphraseLike.limited"/>
            </rng:choice>
          </rng:zeroOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="symbol" module="MEI.usersymbols">
        <desc>symbol ― A reference to a previously defined symbol. The starting
          point, e.g. "hotspot", of the symbol may be indentified in absolute
          output coordinate terms using the x and y attributes or relative to
          another element using the startid attribute. Attributes in the
          att.visualoffset class may be used to record horizontal, vertical, or
          time offsets from the absolute coordinates or from the location of the
          referenced element. The ref attribute must contain the id of a
          symboldef element. The scale attribute indicates that the printed
          output must be scaled by the specified percentage.</desc>
        <classes>
          <memberOf key="att.common.anl"/>
          <memberOf key="att.color"/>
          <memberOf key="att.common"/>
          <memberOf key="att.facsimile"/>
          <memberOf key="att.scalable"/>
          <memberOf key="att.startid"/>
          <memberOf key="att.typed"/>
          <memberOf key="att.visualoffset"/>
          <memberOf key="att.xy"/>
          <memberOf key="model.graphicprimitiveLike"/>
        </classes>
        <content>
          <rng:empty/>
        </content>
        <attList>
          <attDef ident="ref" usage="req">
            <desc>contains a reference to a previously-declared user-defined
              symbol.</desc>
            <datatype>
              <rng:data type="IDREF"/>
            </datatype>
          </attDef>
        </attList>
      </elementSpec>
      <elementSpec ident="symboldef" module="MEI.usersymbols">
        <desc>symbol definition ― Declaration of an individual symbol in a
          symboltable.</desc>
        <classes>
          <memberOf key="att.common"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="model.graphicprimitiveLike"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
      <elementSpec ident="symboltable" module="MEI.usersymbols">
        <desc>symbol table ― Contains individual, user-defined symbols. Like a
          chord table, a symboltable may be shared between mei instances through
          the use of an external parsed entity containing the symboltable to be
          shared.</desc>
        <classes>
          <memberOf key="att.common"/>
          <memberOf key="model.symboltableLike"/>
        </classes>
        <content>
          <rng:oneOrMore>
            <rng:ref name="symboldef"/>
          </rng:oneOrMore>
        </content>
      </elementSpec>
    </body>
  </text>
</TEI>
