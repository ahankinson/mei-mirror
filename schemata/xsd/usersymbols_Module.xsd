<?xml version="1.0" encoding="UTF-8"?>
<!-- ************************************************************** -->
<!--
  NAME:     Music Encoding Initiative (MEI) schema component:
            usersymbols_Module.rng
  
  NOTICE:   Copyright (c) 2010 by the Music Encoding Initiative (MEI)
            Council.
  
            Licensed under the Educational Community License, Version
            2.0 (the "License"); you may not use this file except in
            compliance with the License. You may obtain a copy of the
            License at http://www.osedu.org/licenses/ECL-2.0.
  
            Unless required by applicable law or agreed to in writing,
            software distributed under the License is distributed on
            an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
            KIND, either express or implied. See the License for the
            specific language governing permissions and limitations
            under the License.
  
            This is a derivative work based on earlier versions of the
            schema copyright (c) 2001-2006 Perry Roland and the Rector
            and Visitors of the University of Virginia; licensed under
            the Educational Community License version 1.0.
  
  CONTACT:  contact@music-encoding.org 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.music-encoding.org/ns/mei" xmlns:mei="http://www.music-encoding.org/ns/mei" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xs:import schemaLocation="analysis_Module.xsd"/>
  <xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!-- UserSymbols Module -->
  <!-- Declare module attr classes -->
  <!-- Declare module model classes -->
  <xs:group name="model.graphicprimitiveLike">
    <xs:annotation>
      <xs:documentation>groups elements that function as drawing
      primitives.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element ref="mei:curve"/>
      <xs:element ref="mei:line"/>
      <xs:element ref="mei:symbol"/>
      <xs:element ref="mei:anchoredtext"/>
    </xs:choice>
  </xs:group>
  <xs:group name="model.symboltableLike">
    <xs:annotation>
      <xs:documentation>groups elements that group symbol
      definitions.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="mei:symboltable"/>
    </xs:sequence>
  </xs:group>
  <!-- Declare module elements -->
  <xs:complexType name="content.anchoredtext" mixed="true">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="mei:model.textphraseLike.limited"/>
      <xs:group ref="mei:model.editLike"/>
      <xs:group ref="mei:model.transcriptionLike"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="anchoredtext">
    <xs:annotation>
      <xs:documentation>anchored text ― Container for text that is
        fixed to a particular location, regardless of changes made to the layout
        of the measures around it. This element may be used where semantic
        markup of the text is neither possible nor desirable, such as in optical
        music recognition (OMR) applications. The content model here is similar
        to paragraph without model.textcomponent and &lt;pb&gt;
        sub-elements. The starting point of the text may be identified in
        absolute output coordinate terms using the x and y attributes or
        relative to the location of another element using the startid attribute.
        The attributes in the att.visualoffset class may be used to record
        horizontal, vertical, or time offsets from the absolute coordinates or
        from the location of the referenced element.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mei:content.anchoredtext">
          <xs:attributeGroup ref="mei:attlist.anchoredtext"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.anchoredtext">
    <xs:attributeGroup ref="att.common.anl"/>
    <xs:attributeGroup ref="mei:att.common"/>
    <xs:attributeGroup ref="mei:att.facsimile"/>
    <xs:attributeGroup ref="mei:att.lang"/>
    <xs:attributeGroup ref="mei:att.startid"/>
    <xs:attributeGroup ref="mei:att.typed"/>
    <xs:attributeGroup ref="mei:att.visualoffset"/>
    <xs:attributeGroup ref="mei:att.xy"/>
  </xs:attributeGroup>
  <xs:element name="curve">
    <xs:annotation>
      <xs:documentation>curve ― A curved line that cannot be
        represented by a more specific element, such as a &lt;slur&gt;.
        The starting point of the curve may be identified in absolute output
        coordinate terms using the x1 and y1 attributes or relative to the
        location of another element using the startid attribute. The attributes
        in the att.visualoffset class may be used to record horizontal,
        vertical, or time offsets from the absolute coordinates or from the
        location of the referenced element. Similarly, the terminal point of the
        curve may be recorded using either the x2,y2 coordinates or in relation
        to the location of another element using the endid attribute. Attributes
        in the att.visualoffset2 class maybe used to record the offsets of the
        ending point. The bulge attribute or, alternatively, the bezier
        attribute, describes the shape of the curve. The bulge attribute
        describes the curve as a set of distance values above or below an
        imaginary line connecting the endpoints of the curve while the bezier
        attribute records the placement of Bezier control points as a series of
        space-separated xy coordinate pairs, eg. 19 45 -32 118. The bulge
        attribute must contain one or more values of the NUMBER datatype. The
        rend attribute captures the appearance of the curve.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="mei:attlist.curve"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.curve">
    <xs:attributeGroup ref="att.common.anl"/>
    <xs:attributeGroup ref="mei:att.color"/>
    <xs:attributeGroup ref="mei:att.common"/>
    <xs:attributeGroup ref="mei:att.facsimile"/>
    <xs:attributeGroup ref="mei:att.startendid"/>
    <xs:attributeGroup ref="mei:att.typed"/>
    <xs:attributeGroup ref="mei:att.visualoffset"/>
    <xs:attributeGroup ref="mei:att.visualoffset2"/>
    <xs:attributeGroup ref="mei:att.xy"/>
    <xs:attributeGroup ref="mei:att.xy2"/>
    <xs:attributeGroup ref="mei:att.curvature"/>
    <xs:attributeGroup ref="mei:att.curverend"/>
  </xs:attributeGroup>
  <xs:complexType name="content.line" mixed="true">
    <xs:group minOccurs="0" maxOccurs="unbounded" ref="mei:model.textphraseLike.limited"/>
  </xs:complexType>
  <xs:element name="line">
    <xs:annotation>
      <xs:documentation>line ― A line that cannot be represented
        by a more specific element. The starting point of the line may be
        identified in absolute output coordinate terms using the x1 and y1
        attributes or relative to the location of another element using the
        startid attribute. The attributes in the att.visualoffset class may be
        used to record horizontal, vertical, or time offsets from the absolute
        coordinates or from the location of the referenced element. Similarly,
        the terminal point of the line may be recorded using either the x2 and
        y2 attributes or in relation to the location of another element using
        the endid attribute. Attributes in the att.visualoffset2 class maybe
        used to record the offsets of the ending point. Text content of the line
        element, e.g. 'gliss.', may be rendered with the line. The appearance of
        the line is captured in the rend attribute.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mei:content.line">
          <xs:attributeGroup ref="mei:attlist.line"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.line">
    <xs:attributeGroup ref="att.common.anl"/>
    <xs:attributeGroup ref="mei:att.color"/>
    <xs:attributeGroup ref="mei:att.common"/>
    <xs:attributeGroup ref="mei:att.facsimile"/>
    <xs:attributeGroup ref="mei:att.startendid"/>
    <xs:attributeGroup ref="mei:att.typed"/>
    <xs:attributeGroup ref="mei:att.visualoffset"/>
    <xs:attributeGroup ref="mei:att.visualoffset2"/>
    <xs:attributeGroup ref="mei:att.xy"/>
    <xs:attributeGroup ref="mei:att.xy2"/>
    <xs:attributeGroup ref="mei:att.linerend"/>
  </xs:attributeGroup>
  <xs:element name="symbol">
    <xs:annotation>
      <xs:documentation>symbol ― A reference to a previously
        defined symbol. The starting point, e.g. "hotspot", of the symbol may be
        indentified in absolute output coordinate terms using the x and y
        attributes or relative to another element using the startid attribute.
        Attributes in the att.visualoffset class may be used to record
        horizontal, vertical, or time offsets from the absolute coordinates or
        from the location of the referenced element. The ref attribute must
        contain the id of a symboldef element. The scale attribute indicates
        that the printed output must be scaled by the specified
        percentage.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="mei:attlist.symbol"/>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.symbol">
    <xs:attributeGroup ref="att.common.anl"/>
    <xs:attributeGroup ref="mei:att.color"/>
    <xs:attributeGroup ref="mei:att.common"/>
    <xs:attributeGroup ref="mei:att.facsimile"/>
    <xs:attributeGroup ref="mei:att.scalable"/>
    <xs:attributeGroup ref="mei:att.startid"/>
    <xs:attributeGroup ref="mei:att.typed"/>
    <xs:attributeGroup ref="mei:att.visualoffset"/>
    <xs:attributeGroup ref="mei:att.xy"/>
    <xs:attribute name="ref" use="required" type="xs:IDREF">
      <xs:annotation>
        <xs:documentation>contains a reference to a
        previously-declared user-defined symbol.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:complexType name="content.symboldef">
    <xs:group maxOccurs="unbounded" ref="mei:model.graphicprimitiveLike"/>
  </xs:complexType>
  <xs:element name="symboldef">
    <xs:annotation>
      <xs:documentation>symbol definition ― Declaration of an
        individual symbol in a symboltable.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mei:content.symboldef">
          <xs:attributeGroup ref="mei:attlist.symboldef"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.symboldef">
    <xs:attributeGroup ref="mei:att.common"/>
  </xs:attributeGroup>
  <xs:complexType name="content.symboltable">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="mei:symboldef"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="symboltable">
    <xs:annotation>
      <xs:documentation>symbol table ― Contains individual,
        user-defined symbols. Like a chord table, a symboltable may be shared
        between mei instances through the use of an external parsed entity
        containing the symboltable to be shared.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mei:content.symboltable">
          <xs:attributeGroup ref="mei:attlist.symboltable"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:attributeGroup name="attlist.symboltable">
    <xs:attributeGroup ref="mei:att.common"/>
  </xs:attributeGroup>
</xs:schema>
