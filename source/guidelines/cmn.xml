<?xml version="1.0" encoding="UTF-8"?>
<!--
  © 2010 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Creative Commons Attribution-NoDerivs Unported License, 
  Version 3.0 (the "License"); you may not use this file except in compliance with the License.
  You may obtain a copy of the License at http://creativecommons.org/licenses/by-nd/3.0/.
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="cmn" n="0">
  <head>Common Music Notation</head>
  <div type="div2" xml:id="cmnOverview">
    <head>Overview of the CMN Module</head>
    <p>The module described in this chapter offers the means to describe music in so-called
        <soCalled>Common Music Notation</soCalled> (<term>CMN</term>, sometimes referred to as
        <soCalled>Common Western Music Notation</soCalled>). For this purpose, it offers a number of
      special elements and adds an even larger number of additional attribute classes to elements
      from the <ref target="#shared">Shared</ref> module.</p>
  </div>

  <div type="div2" xml:id="cmnBasics">
    <head>Basic Elements and Data Structures of CMN</head>
    <p>This section describes the use of the most important, basic features of MEI for encoding CMN
      material. Most of the elements discussed here are defined in chapter <ptr target="#shared"/>
      of these Guidelines, but are used in specialized ways to express music from the CMN
      repertoire.</p>

    <div type="div3" xml:id="cmnMeasures">
      <head>The Role of the Measure Element</head>
      <p>Arguably, the most important element of the CMN module is the <gi>measure</gi> element. It
        is used as a structural unit inside <gi>section</gi>s and acts as a container for
          <soCalled>events</soCalled> from the <ident type="class">model.eventLike</ident> class,
        such as <gi>note</gi>s, <gi>chord</gi>s and <gi>rest</gi>s as well as <soCalled>control
          events</soCalled> from the <ident type="class">model.controleventLike</ident> class, such
        as <gi>slur</gi>s and indications of <gi>dynam</gi>ics.</p>
      <p>The following example demonstrates the use of the measure element in the context of a
          <gi>section</gi>:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <section>
          <measure n="1">
            <staff n="1">
              <layer>
                <chord dur="1">
                  <note pname="c" oct="5"/>
                  <note pname="g" oct="4"/>
                  <note pname="e" oct="4"/>
                </chord>
              </layer>
            </staff>
            <staff n="2">
              <layer>
                <note pname="c" oct="3" dur="1"/>
              </layer>
            </staff>
          </measure>
        </section>
      </egXML>

      <p>A measure slices the flow of a score or part into chunks that normally comply with a
        duration determined by the meter defined within a preceding <gi>scoreDef</gi> or
          <gi>staffDef</gi> element. <!-- TODO: ptr to shared module --> Each staff in the source is
        represented by a <gi>staff</gi> element, which may hold a number of <gi>layer</gi> elements
        to reflect multiple <soCalled>voices</soCalled>. As the order of these elements in the file
        does not have to reflect their original order in the document, they should always refer to a
          <gi>staffDef</gi> (or <gi>layerDef</gi>) element, using either an <att>n</att> or
          <att>def</att> attribute. Whereas the <att>def</att> attribute should refer to a
          <gi>staffDef</gi> or <gi>layerDef</gi> using the <term>xs:anyURI</term> datatype, the
          <att>n</att> refers to the closest preceding <gi>staffDef</gi> or <gi>layerDef</gi> with
        the same value in its <att>n</att> attribute.</p>
    </div>

    <div type="div4" xml:id="cmnDefs">
      <head>Defining Score parameters for CMN</head>
      <p>When encoding a score in CMN, MEI heavily utilizes the following elements from the <ref
          target="#shared">Shared</ref> module:</p>
      <p>
        <specList>
          <specDesc key="scoreDef"/>
          <specDesc key="staffGrp"/>
          <specDesc key="staffDef"/>
          <specDesc key="layerDef"/>
        </specList>
      </p>
      <p>A <gi>scoreDef</gi> element is used to specify the common parameters of a score, e.g., key
        and meter. The most important attributes for this purpose are:</p>
      <p>
        <specList>
          <specDesc key="scoreDef" atts="meter.count meter.unit meter.sym key.pname key.accid
            key.mode key.sig"/>
        </specList>
      </p>
      <p>Other attributes allow the description of standard page and system margins as well as fonts
        for text and music.</p>
      <p>The following example describes a score in common time with 3 flats:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <scoreDef meter.count="4" meter.unit="4" meter.sym="common" key.sig="3f"/>
      </egXML>

      <p>A <gi>scoreDef</gi> used in this way is the first child of <gi>score</gi> or <gi>part</gi>
        element, since a performer's part is a kind of score. Subsequent <gi>scoreDef</gi>s may be
        used to override the characteristics described in this first <gi>scoreDef</gi>. The scope of
        this effect depends on the context: Every <gi>scoreDef</gi> affects only the content
        following it within the same parent element. A <gi>scoreDef</gi> at the beginning of a
          <gi>section</gi> affects this particular section, a scoreDef at the begin of a
          <gi>measure</gi> only that measure. Please consider the possibility of nesting
          <gi>section</gi> elements for changing meter, etc.</p>
      <p>A <gi>scoreDef</gi> element may contain a <gi>staffGrp</gi> element. This element is used
        to group individual <gi>staffDef</gi>s and other <gi>staffGrp</gi> elements and mark them as
        a group of instruments. This is particularly useful for collecting instrument groups in a
        large score, such as woodwinds, brasses, etc., but also for assigning a shared label for the
        two staves of a grand staff using the <att>label</att> and <att>label.abbr</att> attributes.
        Also, the <att>barthru</att> attribute on <gi>staffGrp</gi> allows one to specify whether
        barlines are drawn across the space between staves of that group or only on the staves
        themselves.</p>
      <p>A <gi>staffDef</gi> element is used to describe an individual staff of a <gi>score</gi> or
          <gi>part</gi>. It bears all the attributes described above, including <att>label</att> and
          <att>label.abbr</att> for providing labels for the first and subsequent pages.</p>
      <p>Every <gi>staffDef</gi> must bear an <att>n</att> attribute with an integer (a natural
        number) as its value. The first occurence of a <gi>staffDef</gi> with a given number must
        also indicate the number of staff lines using the <att>lines</att> attribute.</p>
      <p>The order of <gi>staffDef</gi> elements within <gi>scoreDef</gi> follows the order of
        staves in the source document or planned rendering. The individual <gi>staff</gi> elements
        within <gi>measure</gi>s refer back to their <gi>staffDef</gi> using their <att>n</att>
        attribute value. The encoding order of staves does not have to mimic the order of the
          <gi>staffDef</gi> elements in <gi>scoreDef</gi>.</p>
      <p>Every <gi>staffDef</gi> may contain a number of <gi>layerDef</gi> elements, which describe
        distinct layers or <soCalled>voices</soCalled> sharing one staff.</p>
      <p>Besides the parameters inherited from <gi>scoreDef</gi>, the following attributes are
        important for <gi>staffDef</gi>s:</p>

      <p>
        <specList>
          <specDesc key="staffDef" atts="clef.shape clef.line clef.dis clef.dis.place"/>
        </specList>
      </p>

      <p>A staff with a tenor clef is encoded as in the following example:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <staffDef clef.shape="G" clef.line="2" clef.dis="8" clef.dis.place="below"/>
      </egXML>

      <p>In the case of transposing instruments, the key-related attributes described above may be
        used to override the written key as expressed in the <gi>scoreDef</gi> element. As a basic
        principle, MEI always captures written pitches, so the <att>trans.diat</att> and
          <att>trans.semi</att> attributes may be used to indicate the number of diatonic steps and
        semitones to calculate sounded pitch from written pitch. The piccolo and E♭ clarinet staves
        in the example below utilize these attributes:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <scoreDef meter.count="6" meter.unit="8">
          <staffDef n="1" xml:id="P1" label="Piccolo" label.abbr="Picc." lines="5" clef.line="2"
            clef.shape="G" key.sig="4f" key.mode="major" trans.semi="12" trans.diat="0"/>
          <staffDef n="2" xml:id="P2" label="Flute" label.abbr="Fl." lines="5" clef.line="2"
            clef.shape="G" key.sig="4f" key.mode="major"/>
          <staffDef n="3" xml:id="P3" label="Oboe" label.abbr="Ob." lines="5" clef.line="2"
            clef.shape="G" key.sig="4f" key.mode="major"/>
          <staffDef n="4" xml:id="P4" label="Bassoon" label.abbr="Bsn." lines="5" clef.line="4"
            clef.shape="F" key.sig="4f" key.mode="major"/>
          <staffDef n="5" xml:id="P5" label="Clarinet in E♭" label.abbr="Eb Cl." lines="5"
            clef.line="2" clef.shape="G" key.sig="1f" key.mode="major" trans.semi="3" trans.diat="2"
          />
        </scoreDef>
      </egXML>

      <p>There are a number of additional elements that can be used as children of <gi>staffDef</gi>
        in order to describe additional features such as the color of a clef or a key signature
        added by a different writer. These elements include:</p>
      <p>
        <specList>
          <specDesc key="clef"/>
          <specDesc key="clefGrp"/>
          <specDesc key="keySig"/>
          <specDesc key="keyAccid"/>
          <specDesc key="label"/>
          <!-- TODO: We should really add meter to the allowed elements here! -->
        </specList>
      </p>

      <p>Except for <gi>label</gi>, these elements may be combined with the elements described in
        chapters <ptr target="#critApp"/> and <ptr target="#editTrans"/> of these Guidelines. They
        may also used as musical events, as they are members of <ident type="class"
          >model.eventLike</ident>. In the latter case, they may occur in <gi>layer</gi> and affect
        all following content, even in subsequent measures, until their information is again
        overridden either by the same element bearing different information or a <gi>staffDef</gi>
        or <gi>scoreDef</gi>.</p>
      <p>This flexibility may require a close inspection of an encoding to retrieve the correct
        definitions for a given staff. As a general rule, the closest preceding and most specific
        element provides this information: A <gi>keySig</gi> in the preceding measure is more
        relevant than a <gi>staffDef</gi> at the beginning of the section, which is more relevant
        than a <gi>scoreDef</gi> at the begin of the score. However, a section-specific
          <gi>scoreDef</gi> that provides only information about the meter does not override the
        more specific information about key signature gathered from a <gi>staffDef</gi> for a
        transposing instrument.</p>
    </div>
    <div type="div3" xml:id="cmnNotesChords">
      <head>Notes, Chords and Rests in CMN</head>
      <p>
        <specList>
          <specDesc key="note"/>
          <specDesc key="mRest"/>
          <specDesc key="multiRest"/>
          <specDesc key="mSpace"/>
        </specList>
      </p>
      <div type="div4" xml:id="cmnNotes">
        <head>Notes</head>
        <p>The most important element for encoding music notation is the <gi>note</gi> element,
          which is defined in section <ptr target="#basicEvents"/>. This section describes the usage
          of <gi>note</gi> in the CMN repertoire as well as CMN-specific additions to the definition
          in the shared module.</p>
        <div type="div5" xml:id="cmnNotesBasic">
          <head>Basic Usage of Notes in CMN</head>
          <p>In CMN, notes are determined by three basic parameters:</p>
          <list type="bulleted">
            <item>pitch name (using <att>pname</att>)</item>
            <item>octave (using <att>oct</att>)</item>
            <item>duration (using <att>dur</att>)</item>
          </list>
          <p>A typical note is therefore encoded like so:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <note pname="c" oct="4" dur="4"/>
          </egXML>

          <p>While this structure is the same as for other repertoires (see chapter <ptr
              target="#mensural"/> for instance), the CMN-specific values for <att>dur</att>
            are:</p>
          <list type="gloss">
            <label>1</label>
            <item>whole note</item>
            <label>2</label>
            <item>half note</item>
            <label>4</label>
            <item>quarter note</item>
            <label>8</label>
            <item>eighth note</item>
            <label>16</label>
            <item>sixteenth note</item>
            <label>…</label>
            <item>…</item>
            <label>2048</label>
            <item>2048th note
              <!-- TODO: as seen in http://www.informatics.indiana.edu/donbyrd/InterestingMusicNotation.html --></item>
          </list>
          <p>Additionally, the following two values are also allowed as they sometimes appear in
            CMN:</p>
          <list type="gloss">
            <label>breve</label>
            <item>double whole</item>
            <label>longa</label>
            <item>quadruple whole</item>
          </list>
          <p>Dotted durational values are accommodated by the <att>dots</att> attribute, which
            records the number of written augmentation dots:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <note pname="c" oct="4" dur="4" dots="1"/>
          </egXML>
        </div>
        <div type="div5" xml:id="cmnNotesGrace">
          <head>Grace Notes</head>
          <p>The CMN module adds two optional attributes <att>grace</att> and <att>grace.time</att>
            to <gi>note</gi> and <gi>chord</gi>. The presence of the <att>grace</att> attribute
            indicates a grace note.</p>
          <figure>
            <graphic url="../samples/snippets/mei2012-30shortexamples/beam-grace/grace-300.png"
              width="500px"/>
          </figure>
          <p>The encoding of the left example would look like this:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <beam>
              <note pname="d" oct="5" dur="8" stem.dir="down"/>
              <note pname="e" oct="5" dur="8" grace="acc" stem.dir="up"/>
              <note pname="d" oct="5" dur="8" stem.dir="down"/>
              <note pname="c" accid="s" oct="5" dur="8" grace="acc" stem.dir="up"/>
              <note pname="d" oct="5" dur="8" stem.dir="down"/>
              <note pname="b" oct="4" dur="8" stem.dir="down"/>
            </beam>
          </egXML>

          <p>The values of <att>grace</att> indicate from which note time is
              <soCalled>borrowed</soCalled> to perform the grace note: The preceding note
            ('unacc'ented) or the following note ('acc'ented). Technically this determines if the
            note following the grace will keep its original onset timestamp or will be slightly
            delayed to allow an accent on the grace itself. Sometimes it is not clear how to perform
            a grace; in these situations the value 'unknown' allows one to indicate a grace without
            saying anything about its performance.</p>
          <p>The <att>grace.time</att> attribute is only to be used in combination with the
              <att>grace</att> attribute. It records the amount of time (as a percentage of the
            written duration) that the grace note should 'steal' from the preceding (when
              <att>grace</att>="unacc") or following (when <att>grace</att>="acc") note.</p>
          <p>More information about grace notes in the context of other CMN ornaments is available
            in chapter <ptr target="#cmnOrnaments"/>.</p>
        </div>
        <div type="div5" xml:id="cmnNotesStems">
          <head>Stem Modifications</head>
          <p>The CMN module also makes the attribute class <ident type="class"
              >att.stemmed.cmn</ident> available, which adds <att>stem.mod</att> and
              <att>stem.with</att> to <gi>note</gi> and <gi>chord</gi>.</p>
          <p>The <att>stem.mod</att> attribute accommodates various stem modifiers. These symbols
            are placed on the note's or chord's stem and generally indicate different types of
            tremolo and Sprechstimme. The following values are allowed: <list>
              <label>1slash</label>
              <item>1 slash through stem</item>
              <label>2slash</label>
              <item>2 slashes through stem</item>
              <label>3slash</label>
              <item>3 slashes through stem</item>
              <label>4slash</label>
              <item>4 slashes through stem</item>
              <label>5slash</label>
              <item>5 slashes through stem</item>
              <label>6slash</label>
              <item>6 slashes through stem</item>
              <label>sprech</label>
              <item>X placed on stem</item>
              <label>z</label>
              <item>Z placed on stem</item>
            </list> The use of <att>stem.mod</att> is optional. It is normally used in the context
            of <ptr target="#cmnTrem"/>. <!-- TODO: Include image and example -->
          </p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <!-- NEED EXAMPLE HERE! -->
          </egXML>
          <p>The attribute <att>stem.with</att> allows for the indication of a stem that joins notes
            on adjacent staves. <!--image: Chord on two staves.jpg--></p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <staff>
              <layer n="1">
                <chord dur="2" stem.dir="up">
                  <note pname="g" oct="4"/>
                  <note pname="d" oct="4"/>
                  <note pname="g" oct="3" stem.with="below"/>
                  <note pname="f" oct="3" stem.with="below"/>
                </chord>
                <beam>
                  <chord dur="8" stem.dir="up">
                    <note pname="f" oct="4"/>
                    <note pname="b" oct="3"/>
                    <note pname="g" oct="3" stem.with="below"/>
                    <note pname="f" oct="3" stem.with="below"/>
                  </chord>
                  <rest dur="16"/>
                  <chord dur="16" stem.dir="up">
                    <note pname="f" oct="4"/>
                    <note pname="b" oct="3"/>
                    <note pname="g" oct="3" stem.with="below"/>
                    <note pname="f" oct="3" stem.with="below"/>
                  </chord>
                </beam>
                <chord dur="8" stem.dir="up">
                  <note pname="f" oct="4"/>
                  <note pname="b" oct="3"/>
                  <note pname="g" oct="3" stem.with="below"/>
                  <note pname="f" oct="3" stem.with="below"/>
                </chord>
                <rest dur="8"/>
              </layer>
            </staff>
          </egXML>

        </div>
      </div>
      <div type="div4" xml:id="cmnRests">
        <head>Rests</head>
        <p>The use of rests in CMN is similar to other repertoires in MEI. The <att>dur</att>
          attribute on <gi>rest</gi> allows the same values as on <gi>note</gi> and <gi>chord</gi>
          in CMN. However, the CMN module makes three more elements available for special forms of
          rest:</p>
        <p>
          <specList>
            <specDesc key="mRest"/>
            <specDesc key="multiRest"/>
            <specDesc key="mSpace"/>
          </specList>
        </p>
        <div type="div5" xml:id="cmnRestsMRest">
          <head>mRest</head>
          <p>The <gi>mRest</gi> (<expan>measure rest</expan>) element is used to indicate a complete
            measure rest, independent from the meter of the current <gi>measure</gi>. The
              <att>dur</att> attribute may be used to indicate the visual symbol that should be
            rendered if it differs from the symbol that should be drawn according to the current
            meter.</p>
          <p>The <att>cutout</att> attribute provides for the description of the rendition of the
              <gi>mRest</gi>. By default, it is rendered as whole rest (see below), independent of
            its actual duration. However, if <att>cutout</att> is set to <soCalled>cutout</soCalled>
            (the only value allowed), then the complete staff including the staff lines will not be
            rendered for this measure.</p>
          <!-- TODO: Include image -->
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <staff>
              <layer>
                <mRest xml:id="d1e437" cutout="cutout"/>
              </layer>
            </staff>
          </egXML>

          <p>It is a semantic error to mix an <gi>mRest</gi> with other events in the same
              <gi>layer</gi>. However, other controlevents, such as <gi>fermata</gi>, may be
            used.</p>
        </div>
        <div type="div5" xml:id="cmnRestsMultiRest">
          <head>multiRest</head>
          <p>The <gi>multiRest</gi> (<expan>multiple measure rest</expan>) element is used to encode
            rests with a duration of multiple measures. It is commonly used in performer parts, but
            due to the problem of synchronicity with other staves, it is never found scores. A
            numeric value, stored in the <att>num</att> attribute, indicates the number of resting
            measures.</p>
          <!-- TODO: include image: multiple_rest.jpg -->
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <staff>
              <layer>
                <multiRest num="9"/>
              </layer>
            </staff>
          </egXML>
        </div>
        <div type="div5" xml:id="cmnRestsMSpace">
          <head>mSpace</head>
          <p>The <gi>mSpace</gi> (<expan>measure space</expan>) element is closely related to the
              <gi>space</gi> and <gi>mRest</gi> elements. By definition, the value of the
              <att>dur</att> attribute must match the duration of the measure, independent from its
            meter. Therefore, <gi>mSpace</gi> can be interpreted as a <soCalled>invisible
                <gi>mRest</gi></soCalled>.</p>
          <!-- TODO: include image: mspace.png-->
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <staff>
              <layer>
                <mSpace/>
              </layer>
            </staff>
          </egXML>

        </div>
      </div>
    </div>
    <div type="div3" xml:id="cmnTstamp">
      <head>Timestamps and Durations</head>
      <!-- TODO: add information about note's @dur -->
      <p>MEI offers multiple ways of defining on- and offsets of timed musical events such as notes
        and slurs. The most common approach to this is through the use of a combination of the
        attributes <att>tstamp</att> and <att>dur</att>, which are made available by the attribute
        classes <ident type="class">att.timestamp.musical</ident> (which is inherited by <ident
          type="class">att.controlevent</ident>) and <ident type="class"
          >att.duration.musical</ident>, both from the shared module.</p>
      <p>The <term>timestamp</term> (<att>tstamp</att>) of a musical event is calculated in relation
        to the meter of the current measure and resembles the so-called <soCalled>beat</soCalled>.
        In a common time <!-- TODO: add reference --> measure with four quarter notes, the timestamp
        of each quarter equals its beat position in the measure: The first quarter has a timestamp
        of 1, the second one has a timestamp of 2, and so on. MEI defines the value of
          <att>tstamp</att> as a real number; the second eighth note position in a measure would
        thus be represented by the value of "1.5". The range of possible values is defined as
        starting with zero and ending with the number of metrical units in a measure (the
          <soCalled>numerator</soCalled> in a time signature)<!-- TODO: add reference --> + 1. This
        allows the capture of all graphical positions starting from the left barline ('0') and
        ending with the right barline of the measure ('5', in the case of 4/4 time).</p>
      <p>For expressing durations, MEI offers two separate attributes which permit distinctly
        different values, however both named <att>dur</att>. The first <att>dur</att> attribute
        indicates the duration of events in the <ident type="class">model.eventLike</ident> class,
        such as <gi>note</gi>s, <gi>chord</gi>s or <gi>rest</gi>s. This attribute is described in
          <ptr target="#cmnNotesBasic"/>. For <soCalled>spanning</soCalled> elements like slurs,
        which are members of the <ident type="class">model.controleventLike</ident> class, a
        different <att>dur</att> attribute is available. Its datatype is constrained to values
        following the formula "<hi rend="bold"><hi rend="italic">x</hi>m+<hi rend="italic"
          >y</hi></hi>", where <hi rend="italic">x</hi> is the number of full measures that this
        particular feature lasts, and <hi rend="italic">y</hi> is the timestamp in the target
        measure where the feature ends. The timestamp is expressed using the same logic as described
        above. For example, a value of "0m+3" in 4/4 time indicates that the slur, or whatever
        element bears this attribute, ends on beat 3 of the same measure where it started. A value
        of "1m+1.5" would indicate an end on the second eighth of the following measure. In 6/8
        time, the value "2m+2.3" means that the feature ends two measures later on the second eighth
        note following beat two.</p>
    </div>
  </div>

  <div type="div2" xml:id="additionalMeasureContent">
    <head>Advanced CMN Features</head>
    <p>Over time many other symbols have been added to CMN besides the basic features of note,
      chord, and rest. The following section describes these symbols and introduces their handling
      in MEI.</p>

    <div type="div3" xml:id="cmnBeams">
      <head>Beams</head>
      <!-- TODO: What about @beam on notes? maybe deprecate? Do we need all of these [imt][1-6] datatypes?-->
      <p>A very common feature of music from the CMN repertoire is the beaming of eighth or shorter
        notes. Encoding a beam in MEI is straightforward:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer> … <beam>
            <note dur="8"/>
            <note dur="8"/>
          </beam> … </layer>
      </egXML>
      <p>Whereas in music notation every note value shorter than an eighth adds another beam
        (sometimes referred to as <soCalled>secondary beams</soCalled>), in MEI only one beam
        element is used, no matter what the durations of the contained notes are:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer> … <beam>
            <note dur="16"/>
            <note dur="32"/>
            <note dur="32"/>
            <note dur="16" dots="1"/>
            <note dur="32"/>
          </beam> … </layer>
      </egXML>
      <p>From the 19th century onwards, it became quite common to break secondary beams to increase
        readability of longer beamed passages. It is possible to encode situations like this in MEI
        without nesting beam elements. Instead, the optional <att>breaksec</att> attribute on
          <gi>note</gi>s and <gi>chord</gi>s under the beam may be used to encode the breaking of
        secondary beams <emph>after</emph> the note or chord bearing the attribute. The value of
          <att>breaksec</att> indicates the number of continuous beams. For example:</p>
      <!-- TODO: Include image -->
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer> … <beam>
            <note dur="16"/>
            <note dur="16"/>
            <note dur="16"/>
            <note dur="16" breaksec="1"/>
            <note dur="32"/>
            <note dur="32"/>
            <note dur="32"/>
            <note dur="32" breaksec="2"/>
            <note dur="32"/>
            <note dur="32"/>
            <note dur="32"/>
            <note dur="32"/>
          </beam> … </layer>
      </egXML>
      <p>In the music of the second half of the 20th century, it is quite common to indicate
        acceleration or deceleration using converging beams as in the image below:</p>
      <figure>
        <graphic url="guidelines/Images/modules/cmn/beamAcc-Rit.png" width="500px"/>
      </figure>
      <p>The encoding of such a beam is accomplished using the <att>rend</att> attribute of the
        beam, which allows the following values:</p>
      <list type="gloss">
        <label>acc</label>
        <item> The secondary beams start in their usual position and gradually converge until they
          meet with the primary beam on the last note (or, the first eighth note under the beam). </item>
        <label>rit</label>
        <item> The beams gradually diverge until they reach their regular distance. </item>
        <label>norm</label>
        <item> The beam is rendered as usual (default). </item>
      </list>
      <p>The examples above may be encoded like so:</p>
      <!-- TODO: Do we need to specify durations for the notes in the middle? They don't have exact values! -->
      <!-- PR: The propagation of attribute values should be covered somewhere. -->
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer>
          <!-- … -->
          <beam rend="acc">
            <note dur="8"/>
            <note dur="8"/>
            <note/>
            <note/>
            <note/>
            <note dur="32"/>
          </beam>
          <!-- … -->
        </layer>
      </egXML>

      <!-- TODO: Cross-staff beaming, add discussion of beam.with, and rewrite the para. below -->

      <p>Due to the potential problem of creating overlapping hierarchies, the <gi>beam</gi> element
        only allows the encoding of beams that do not cross barlines. Situations like these require
        the use of the <gi>beamSpan</gi> element. This element is not used in a structural way like
          <gi>beam</gi>, which contains all beamed notes or chords as children. Instead, it
        references the <att>xml:id</att>s of all affected notes in its <att>plist</att>
        attribute.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <beamSpan plist="#note1 #note2 #note3 #note4"/>
      </egXML>

      <p>When <gi>beamSpan</gi> is used, MEI requires one to specify a starting point for the beam
        as well as an ending point. This can be achieved as described in
        <!-- TODO: Add reference here (or, if there is no such section in shared, add one such -->
      </p>
      <p>The following image demonstrates a typical example of such hierarchy-crossing beams.</p>
      <!-- TODO: Include figure and encoding -->
      <p>
        <specList>
          <specDesc key="beam"/>
          <!-- note/@breaksec -->
          <specDesc key="beamSpan"/>
        </specList>
      </p>
    </div>

    <div type="div3" xml:id="cmnSlurTies">
      <head>Ties, Slurs and Phrase Marks</head>
      <p>One of the most specific features of CMN is the use of <soCalled>curved lines</soCalled>
        which connect notes. These lines are used to indicate various musical features, depending on
        their context.</p>
      <p>A <term>tie</term> is a curved line connecting <hi rend="bold">two</hi> notes of the <hi
          rend="bold">same pitch</hi>. The intention of a tie is to combine the duration of both
        notes, so that the first note sounds for the combined duration, while the second note isn't
        played separately from the first note. In other words, there is only one onset for both
        notes.</p>
      <!-- TODO: Include graphic -->

      <p>In MEI, ties can be encoded in different ways, depending on the level of detail that the
        encoder wants to preserve. The simplest solution is to use the <att>tie</att> attribute
        found on <gi>note</gi> and <gi>chord</gi>.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <note pname="f" oct="4" dur="2" tie="i"/>
        <note pname="f" oct="4" dur="4" dots="1" tie="t"/>
      </egXML>
      <p>The attribute allows three values: <list type="gloss">
          <label><hi rend="bold">i</hi> (initial)</label>
          <item>Marks the start of a tie</item>
          <label><hi rend="bold">m</hi> (medial)</label>
          <item>Marks a participant in a tie other than the first or last</item>
          <label><hi rend="bold">t</hi> (terminal)</label>
          <item>Marks the end of a tie</item>
        </list>
      </p>

      <p>The scope of the <att>tie</att> attribute is the musical <gi>layer</gi>: A tie started in
        one layer may only be ended by a subsequent musical event with a <att>tie</att> attribute
        with an <hi rend="bold">m</hi> or <hi rend="bold">t</hi> value in the same layer. Document
        order is not important in this situation, especially when the ending note or chord is in the
        following measure.</p>
      <p>When <att>tie</att> is used on chords, it functions as a shorthand indication; that is, a
        separate tie is drawn for every pitch in the chord that remains unchanged in the succeeding
        chord.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- NEED EXAMPLE HERE! -->
      </egXML>

      <p>A <term>slur</term> is a curved line that connects a <hi rend="bold">range of notes</hi>
        and normally denotes that the affected notes are to be played <term>legato</term>. In MEI,
        slurs may be encoded in a very similar way to ties: <gi>note</gi> and <gi>chord</gi> bear a
          <att>slur</att> attribute that allows the commencement or ending of a slur at this
        element.</p>
      <p>The allowed values, however, are slightly different: The <hi rend="bold">i</hi>, <hi
          rend="bold">m</hi> or <hi rend="bold">t</hi> are followed by a single digit in the range
          <hi rend="bold">1 to 6</hi>, as in the following example:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <note pname="f" oct="4" dur="4" accid="s" slur="i1"/>
        <note pname="g" oct="4" dur="4" slur="m1"/>
        <note pname="a" oct="4" dur="4" slur="t1"/>
      </egXML>

      <p>The reason for this difference is that slurs, unlike ties, may overlap, so that a second
        slur may start while the first slur is still ongoing. The digit indicates the level of
        nesting of slurs on the note; '1' indicates no nesting, while '2' indicates the existence of
        2 slurs in which this note participates, and so on. In the example below, the second and
        third quarter notes lie under 2 slurs:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer>
          <note pname="g" oct="4" dur="2" slur="i1"/>
          <note pname="a" oct="4" dur="8" slur="i2"/>
          <note pname="g" oct="4" dur="8" slur="t2"/>
          <note pname="f" oct="4" dur="4" accid="s" slur="t1"/>
        </layer>
        <layer>
          <note pname="b" oct="3" dur="2" dots="1" slur="i1"/>
          <note pname="d" oct="4" dur="4" slur="t1"/>
        </layer>
      </egXML>

      <!-- To support analytical operations, @slur may take on more than one value.  For
        example, the example above may be explicitly encoded as:        
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer>
          <note pname="g" oct="4" dur="2" slur="i1"/>
          <note pname="a" oct="4" dur="8" slur="m1 i2"/>
          <note pname="g" oct="4" dur="8" slur="m1 t2"/>
          <note pname="f" oct="4" dur="4" accid="s" slur="t1"/>
        </layer>
        <layer>
          <note pname="b" oct="3" dur="2" dots="1" slur="i1"/>
          <note pname="d" oct="4" dur="4" slur="t1"/>
        </layer>
      </egXML>
      
      Perhaps this should only be permitted when the analysis module is enabled. Hmmm ...
      -->

      <p>While ties are not allowed to cross layers or staves in standard notation, slurs may. The
        following example demonstrates how cross-staff slurs may be encoded using the
          <att>slur</att> attribute:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <staff>
          <layer>
            <note pname="g" oct="4" dur="2" slur="i1"/>
            <note pname="a" oct="4" dur="8" slur="m1"/>
            <note pname="g" oct="4" dur="8" slur="m1"/>
            <note pname="f" oct="4" dur="4" accid="s" slur="m1"/>
          </layer>
        </staff>
        <staff>
          <layer>
            <note pname="b" oct="3" dur="2" dots="1" slur="t1"/>
            <note pname="d" oct="4" dur="4"/>
          </layer>
        </staff>
      </egXML>

      <p>Slurs and ties that cross system or page breaks are split into two separate symbols. One
        slur or tie ends at the last barline, another one starts at the begin of the new system. MEI
        expects this to be the default rendering behaviour, so that in situations like these, the
        regular <att>tie</att> or <att>slur</att> attributes are sufficient to describe both curved
        lines resulting from the split.</p>
      <p>Sometimes, however, one of these two symbols is missing in the document, or the encoder
        wants to provide additional information about the slur or tie. In these cases, using an
        attribute is not an adequate solution. Therefore, MEI offers dedicated elements:
          <gi>tie</gi> and <gi>slur</gi>. A third element, <gi>phrase</gi> is used to identify a
        unified melodic idea (in German: <foreign>Phrasierungsbogen</foreign>), whereas the
          <gi>slur</gi> element is used as a generic element for all curved lines (in German:
          <foreign>Bogensetzung</foreign>) except ties. All three elements have nearly identical
        models.</p>
      <p>Although these elements are allowed within a <gi>layer</gi> to accommodate unmeasured
        notation, by convention they are normally placed inside <gi>measure</gi>, after the
          <gi>staff</gi> children, grouped with other so-called <soCalled>control events</soCalled>
        from the <ident type="class">model.controleventLike</ident> class.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <layer>
              <note pname="c" oct="5" dur="4"/>
              <note pname="f" oct="4" dur="4"/>
              <note pname="g" oct="4" dur="4"/>
              <note pname="c" oct="4" dur="4"/>
            </layer>
          </staff>
          <slur/>
        </measure>
      </egXML>

      <p>Obviously, the slur in the above example needs to be <soCalled>attached</soCalled> to the
        notes somehow. The <soCalled>vertical assignment</soCalled> is done using the
          <att>staff</att> and <att>layer</att> attributes. This information can be added to the
        slur in the example above like so:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <slur staff="1" layer="1"/>
      </egXML>

      <p>For the <soCalled>horizontal assignment</soCalled>, the encoder may choose between two
        different mechanisms. The first uses timestamp and duration as described in section <ptr
          target="#cmnTstamp"/>. The start and end points of the slur may be indicated thusly:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <slur staff="1" layer="1" tstamp="1" dur="0m+4"/>
      </egXML>

      <p>By using <att>tstamp</att> and <att>dur</att>, the encoder denotes a rather loose
        connection – the slur (or tie) is attached to a certain position in the measure, not to a
        specific note or chord. If the encoder wants to specify a close connection to a particular
        event, the <att>startid</att> and <att>endid</att> attributes may be used instead. Here, the
          <att>xml:id</att>s of the first and last note of the slur are referenced. This mechanism
        also allows the crossing of layers and staves, as in the following example:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- TODO: Snippet from Webern, also as graphic -->
      </egXML>

      <!-- The following para. describes the best encoding for human-readability, but it may be
        beneficial for processing to put the slur, etc. in the measure *where it ends*.  All slurs, etc.
        could even be placed in the last measure. Doing this makes all references back references,
        which is good using stream (SAX) parsing. -->
      <p>While there is no technical need to do so, it is recommended to encode <gi>slur</gi>s,
          <gi>tie</gi>s and <gi>phrase</gi> marks that use <att>startid</att> and <att>endid</att>
        in the <gi>measure</gi> where they begin, that is the one that holds the element referenced
        by <att>startid</att>.</p>
      <p>When using the <gi>tie</gi>, <gi>slur</gi> or <gi>phrase</gi> elements, the curvature of
        the line may be described using the <att>curvedir</att>, <att>bulge</att> and
          <att>bezier</att> attributes. Whereas the first allows only specification of its vertical
        placement, the others give increasingly more precise control of the curve.</p>
      <p>An argument for using elements instead of attributes is that only elements may be combined
        with the functionality provided in chapters <ptr target="#editTrans"/> and <ptr
          target="#critApp"/> of these Guidelines.</p>
      <p>If the encoder wishes to draw attention to the appearance of a slur or tie in a given
        source, the <att>facs</att> attribute may be used instead of (or in addition to) the curve
        description attributes to point to a graphic image or a zone within an image (see <ptr
          target="#facsimile"/>).</p>

    </div>

    <div type="div3" xml:id="cmnDynam">
      <head>Dynamics in CMN</head>
      <p>Common Music Notation provides two different methodologies for expressing the degree of
        loudness of a note, phrase, section, etc. The first is a verbal instruction providing such
        information in human language, possibly in an abbreviated form. An example of this is the
        word <term>piano</term>, meaning a quiet volume, often abbreviated as <term>p</term>. In
        MEI, verbal instructions like this are encoded using the <gi>dynam</gi> element from the
        Shared module (see <ptr target="#shared"/>):</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <dynam>p</dynam>
      </egXML>

      <p>By convention, <gi>dynam</gi> elements, like all elements belonging to the <ident
          type="class">model.controleventLike</ident> class, are encoded at the end of the
          <gi>measure</gi> to which they belong. This requires <gi>dynam</gi> to be assigned to a
        certain <gi>staff</gi> using the <att>staff</att> attribute, which refers to the target
        element's <att>n</att> attribute.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <dynam staff="1">p</dynam>
      </egXML>

      <p>When the layers of a staff have different dynamic indications, the <att>layer</att>
        attribute may be used to associate the dynamic marking with a particular layer:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <dynam staff="1" layer="1">p</dynam>
        <dynam staff="1" layer="2">mf</dynam>
      </egXML>

      <p>The location of the dynamic in relation to a staff may be specified using the
          <att>place</att> attribute, which may be given as <hi rend="bold">above</hi>, <hi
          rend="bold">within</hi> or <hi rend="bold">below</hi> the staff:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <dynam staff="1" place="above">p</dynam>
      </egXML>

      <p>Dynamics must also be associated with a particular time point, using the <att>tstamp</att>
        or <att>startid</att> attributes as described in section <ptr target="#cmnTstamp"/>:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <!-- content omitted -->
          </staff>
          <staff n="2">
            <layer n="1">
              <note pname="c" oct="4" dur="2" stem.mod="2slash"/>
              <note pname="e" oct="4" dur="2" stem.mod="2slash"/>
            </layer>
            <layer n="2">
              <!-- content omitted -->
            </layer>
          </staff>
          <dynam staff="2" layer="1" place="above" tstamp="1">p</dynam>
          <dynam staff="2" layer="1" place="above" tstamp="2.5">cresc. poco a poco</dynam>
        </measure>
      </egXML>

      <p>Dynamics which do not have an explicit endpoint are often referred to as
          <soCalled>instantaneous</soCalled>. On the other hand, some dynamic directions indicate a
        continuous change that must have a defined end point. It is possible to specify the logical
        scope of continuous dynamic marks using the attributes <att>dur</att> or <att>endid</att>.
        In order to capture the fact that they continue until the first beat of the next measure,
        the dynamics in the example above may be marked:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- using the dur attribute -->
        <dynam staff="2" place="above" tstamp="2.5" dur="1m+1">cresc. poco a poco</dynam>
        <!-- using the endid attribute -->
        <dynam staff="2" place="above" tstamp="2.5" endid="ID of ending note">cresc. poco a
          poco</dynam>
      </egXML>

      <p>Any combination of tstamp, startid, dur, and endid attributes may be used to define the
        scope of a dynamic. For example, the following alternatives are all possibilities for
        marking up a crescendo. The choice of attributes is often processor-dependent.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- tstamp attribute indicates starting point, dur attribute marks the end -->
        <dynam staff="2" place="above" tstamp="2.5" dur="1m+1">cresc. poco a poco</dynam>
        <!-- tstamp attribute indicates starting point, endid attribute marks the end -->
        <dynam staff="2" place="above" tstamp="2.5" endid="ID of last note">cresc. poco a
          poco</dynam>
        <!-- startid attribute indicates starting point, dur attribute marks the end -->
        <dynam staff="2" place="above" startid="ID of starting note" dur="1m+1">cresc. poco a
          poco</dynam>
        <!-- startid attribute indicates starting point, endid attribute marks the end -->
        <dynam staff="2" place="above" startid="ID of starting note" endid="ID of ending note"
          >cresc. poco a poco</dynam>
      </egXML>

      <p>All musical elements affected by the <gi>dynam</gi> may be explicitly specified using the
          <att>plist</att> attribute, which contains <att>xml:id</att> attribute values:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <dynam staff="2" place="above" startid="#note1" endid="#note4" plist="#note1 #note2 #note3
          #note4">cresc. poco a poco</dynam>
      </egXML>

      <!-- Should plist only be allowed when the analysis module is enabled?  Hmmmm ... -->
      <p>Since the <att>plist</att> attribute's use is primarily analytical and the tstamp/startid
        and dur/endid attributes are often used for rendering, it is recommended that the list of
        references in <att>plist</att> include all participants in the dynamic marking, including
        the first and last notes as in the preceding example, even though they may also be
        referenced by <att>startid</att> and <att>endid</att> attributes.</p>

      <p>In addition to verbal instructions, Common Music Notation uses graphical symbols to
        indicate <soCalled>continuous</soCalled> dynamics. These <term>crescendo</term> and
          <term>decrescendo</term> (or <term>diminuendo</term>) symbols are encoded in MEI using the
          <gi>hairpin</gi> element. It also is a member of the <ident type="class"
          >model.controleventLike</ident> class, which means it is used just before the close of a
          <gi>measure</gi> element, following the encoding of all staves. The required attribute
          <att>form</att> specifies the direction of the symbol by taking one of two possible
        values: <hi rend="bold">cres</hi>cendo (louder) or <hi rend="bold">dim</hi>inuendo
        (softer).</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <hairpin form="cres"/>
      </egXML>

      <p>Positioning of hairpins is possible using the same attributes as for <gi>dynam</gi>, so the
        example above could be encoded as:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <!-- content omitted -->
          </staff>
          <staff n="2">
            <layer n="1">
              <note pname="c" oct="4" dur="2" stem.mod="2slash"/>
              <note pname="e" oct="4" dur="2" stem.mod="2slash"/>
            </layer>
            <layer n="2">
              <!-- content omitted -->
            </layer>
          </staff>
          <hairpin form="cres" staff="2" layer="1" place="above" tstamp="2.5" dur="1m+1"/>
        </measure>
      </egXML>

      <!-- TODO: discuss the other visual attributes of hairpin:
        @opening
        <memberOf key="att.color"/>
        <memberOf key="att.visualoffset"/>
        <memberOf key="att.visualoffset2"/>
        <memberOf key="att.xy"/>
        <memberOf key="att.xy2"/> -->

    </div>
    <div type="div3" xml:id="cmnTuplets">
      <head>Tuplets</head>
      <p>Tuplets indicate a localized change of meter; that is, a given duration in the regular
        meter is divided between a group of notes with irregular (according to the current meter)
        rhythmic values. The most common tuplet is a so-called <soCalled>triplet</soCalled>, in
        which three notes take the time normally occupied by two.</p>
      <p>The relation of the tuplet to the underlying meter is specified using the <att>num</att>
        and <att>numbase</att> attributes, where <att>numbase</att> specifies the number of beats in
        the current meter to be replaced and <att>num</att> specifies the number of replacing notes.
        When three eighth notes replace one quarter in common time, <att>num</att> takes a value of
        "3", whereas <att>numbase</att> reads "1". When three quarters replace two in the same
        meter, <att>numbase</att> reads "2" instead. The combination of attributes may be read as "3
        (notes) in the time of 2 (beats)".</p>
      <p>The duration of the entire tuplet may be encoded using the usual <soCalled>power of
          2</soCalled> values, e.g., 1, 2, 4, etc., in the <att>dur</att> attribute.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <layer>
          <tuplet num="3" numbase="2" dur="2">
            <note pname="g" oct="4" dur="4"/>
            <note pname="f" oct="4" dur="4" accid="s"/>
            <note pname="g" oct="4" dur="4"/>
          </tuplet>
          <note pname="d" oct="4" dur="2"/>
        </layer>
      </egXML>

      <!-- TODO: Demonstrate how numbase can be omitted when dur is present. -->

      <p>Depending on stylistic choices, tuplets may be highlighted using brackets above or below
        the affected notes. The presence and position of these brackets can be encoded using the
          <att>bracket.place</att> (above / below) and <att>bracket.visible</att> (true / false)
        attributes.</p>
      <p>A number or ratio may be given in addition to, or in some cases as a replacement for, the
        bracket. The <att>num.format</att> attribute indicates whether a plain number (the value of
          <att>num</att>) or a ratio (comprised of <att>num</att> and <att>numbase</att>, e.g.,
        "3:2") should be displayed and <att>num.visible</att> indicates the general presence of such
        a number. By default, tuplets are rendered with a bracket
        (<att>bracket.visible</att>="true") and a single number (<att>num.format</att>="count" and
          <att>num.visible</att>="true").</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- NEED EXAMPLE HERE! -->
      </egXML>

      <p>Besides <gi>note</gi> elements, <gi>tuplet</gi> may contain other elements, such as
          <gi>rest</gi> or <gi>space</gi>, to match the content of a source document or intended
        rendering.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- NEED EXAMPLE HERE! -->
      </egXML>

      <p>In some situations, however, a tuplet is made up of events from different measures or
        staves. As this raises the issues of non-concurrent hierarchies, it is not possible to
        encode such situations with the <gi>tuplet</gi> element described above. Therefore, MEI
        offers the <gi>tupletSpan</gi> element, which is member of the <ident type="class"
          >model.controleventLike</ident> class. It is nested inside of <gi>measure</gi>, successing
        all <gi>staff</gi> children. It uses the same attributes as <gi>tuplet</gi> to describe
        tuplets, but instead of nesting all affected notes inside, it points to their respective
          <att>xml:id</att>s using its <att>plist</att> (participant list) attribute.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <!-- NEED EXAMPLE HERE! -->
      </egXML>

      <!-- TODO: Address the following: -->
      <!-- The beam sub-element is allowed so that custom beaming may be indicated, e.g., a
        septuplet may be divided into a group of three plus a group of four notes. See Read, p.
        187-215. The tuplet element may also used for bowed tremolo (Read, p. 394) and double,
        triple, or flutter tonguing (Read, p. 348-349); that is, for repetition of the same pitch.
        In the case of irrational durations, such as such as two quarter notes in the time of five
        8th notes in a measure of 5/8 time, decimal values may be used in the dur.ges attribute. For
        example, the dur.ges attribute would take the value "2.5" if the midi.div attribute's value
        was "1". The num and numbase attributes may be used for explicit labelling of a tuplet, such
        as, '3' with an 8th-note triplet, '3:2' over a quarter-note triplet, etc. The rendering of
        the ratio, however, is dependent on the num.format attribute found in the att.vis.tuplet
        attribute class.-->

    </div>

    <div type="div3" xml:id="cmnArtic">
      <head>Articulation and Performance Instructions in CMN</head>
      <p>This section introduces elements and attributes which may hold CMN-specific performance
        instructions. The functionality described herein is somewhat related to the <att>artic</att>
        attribute and <gi>artic</gi> element introduced in <ptr target="#shared"/>. The following
        elements are relevant in this context:</p>
      <p>
        <specList>
          <specDesc key="bend"/>
          <specDesc key="bTrem"/>
          <specDesc key="fTrem"/>
          <specDesc key="gliss"/>
          <specDesc key="arpeg"/>
          <specDesc key="octave"/>
          <specDesc key="fermata"/>
        </specList>
      </p>
      <div type="div4" xml:id="cmnArpegGliss">
        <head>Arpeggio and Glissando</head>
        <p>In CMN, the notes of a chord are sometimes to be performed successively rather than
          simultaneously. This behavior, called <term>arpeggio</term>, is normally indicated using a
          wavy line preceding the chord. MEI offers the <gi>arpeg</gi> elements to describe
          arpeggios. It is a member of the<ident type="class">model.controleventLike</ident> class,
          but as it effects only one chord element, it might be positioned in a <gi>layer</gi>
          element, directly preceding the affected <gi>chord</gi>.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <layer>
            <!-- preceding content -->
            <arpeg/>
            <chord>
              <note/>
              <note/>
              <note/>
            </chord>
            <!-- succeeding content -->
          </layer>
        </egXML>

        <p>It might equally well encoded as child of <gi>measure</gi>, in which case
            <att>staff</att>, <att>layer</att> and <att>tstamp</att> may be used to connect it to a
          certain chord in a given staff and layer.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <measure>
            <staff n="1">
              <!-- content omitteed -->
            </staff>
            <staff n="2">
              <layer>
                <note dur="4"/>
                <note dur="4"/>
                <chord dur="4">
                  <!-- notes omitted -->
                </chord>
                <note/>
              </layer>
            </staff>
            <arpeg staff="2" tstamp="3"/>
          </measure>
        </egXML>

        <p>The regular direction for this "breaking up" is from lowest to highest. When the notes
          are to be performed from highest to lowest, an arrowhead is usually added to the lower end
          of the line. This may be indicated by adding <att>arrow</att>="true" to the element. Even
          though it is redundant, an arrowhead is sometimes added to the upper end of the line for
          the sake of consistency or when the direction of successive arpeggios alternates. The
          direction may be indicated by adding the <att>order</att> attribute with values of "down"
          and "up".</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <arpeg staff="2" tstamp="3" arrow="true" order="down"/>
          <arpeg staff="2" tstamp="4" arrow="true" order="up"/>
        </egXML>

        <p>A third value for <att>order</att>, "nonarp", indicates that no arpeggio shall be
          performed. It is normally rendered as bracket instead of a wavy line. For arpeggios that
          involve chords spanning multiple staves as a continuous arpeggio (instead of two separate
          arpeggios), the <att>plist</att> attribute may be used to point to all affected
            <gi>chord</gi> elements' <att>xml:id</att>s.
          <!-- TODO: Example from Rachmaninoff c#min sonata -->
        </p>
        <p>Whereas an arpeggio just splits up the onset times of provided notes of a chord, a
          so-called <term>glissando</term> denotes a situation where the pitch
            <soCalled>slides</soCalled> from one note to another. It makes no difference whether
          this slide produces distinct intermediate pitches (as on the piano) or not (as on the
          trombone), though the latter is sometimes referred to as <term>portamento</term>. The
          visual appearance of a glissando, which MEI encodes as <gi>gliss</gi>, is normally a line
          connecting the two most distant notes in the glissando.</p>
        <!-- TODO: Is gliss really eventLike, or should it rather be controleventLike??? -->
        <p>The <gi>gliss</gi> element is a member of the <ident type="class">model.eventLike</ident>
          class, so it has to be placed inside a <gi>layer</gi>. By convention, it is placed between
          the two notes that are to be connected as glissando.
          <!-- TODO: Why do we require a starting point, but no ending point? Why is there no @dur? Do we require affected notes
           to be encoded within the gliss? If so, why do we allow exactly note, rest and tuplet??? My impression is that gliss is
           somewhat buggy!!! -->
          The visual appearance of the indicating line may be recorded in the <att>rend</att>
          attribute. Any text accompanying the line, such as "gliss.", may be provided in the
            <att>text</att> attribute. The starting point of the glissando may be indicated by
          either a tstamp, tstamp.ges, tstamp.real or startid attribute. It is a semantic error not
          to specify a starting point attribute.</p>

        <!-- In former versions, MEI allowed to provide precise performance data as child elements. Instead of using this
          deprecated mechanism, it is recommended to use a combination of <gi>choice</gi> with <gi>orig</gi> and <gi>reg</gi>
          or <gi>abbr</gi> and <gi>expan</gi> children. See <ptr target="#edittrans"/>-->
      </div>
      <!--TODO: include bend <div type="div4" xml:id="cmnBend">
        <head>Bend</head>
        <p>
          <gi>bend</gi>: A variation in pitch (often microtonal) upwards or downwards during the course of a note. 
          Typically, the performer attacks the note at "true" pitch, bends the intonation, then returns to true pitch. 
          The bend element can also be used for scoop, plop, falloff, and doit performance effects. It should *not* be 
          used for l.v. (laissez vibrer) indications. Precise performance data that differs from the logical events in 
          a measure may be recorded within the bend element. The starting point of the bend may be indicated by either 
          a tstamp, tstamp.ges, tstamp.real or startid attribute. It is a semantic error not to specify a starting 
          attribute. 
       </p>
      </div>-->
      <div type="div4" xml:id="cmnTrem">
        <head>Tremolandi</head>
        <!-- TODO: In german terminology, a tremolo often indicates an unmeasured series of notes (play as
          fast as you can). What we call "Faulenzer" (lazy one) is measured, though. Basically, the rendition of both
          is the same, but we distinguish between measured and unmeasured, not between identical and differing
          pitches. Is this something we should discuss on MEI-L?
        -->
        <p>CMN has two slightly different concepts which are both called <term>tremolo</term>. The
          first is a rapid repetition of a single pitch or chord, whereas the second is a rapid
          alternation between different notes and / or chords.</p>
        <p>For the first of these, MEI offers the <gi>bTrem</gi> (bowed tremolo) element, which
          should also be used for wind instrument double and triple tonguing and for flutter
          tonguing when these are expressed as tremolandi. A <gi>bTrem</gi> is a member of the
            <ident type="class">model.eventLike</ident> class, which means it is encoded following
          the normal course of musical events within a <gi>layer</gi>. It holds exactly one
            <gi>note</gi> or <gi>chord</gi> element that is to be repeated as tremolo.</p>
        <!-- TODO: provide better example with image… -->
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <layer>
            <note/>
            <bTtrem>
              <note pname="g" oct="4" dur="4"/>
            </bTtrem>
            <note/>
          </layer>
        </egXML>

        <p>As seen in the example above, the <gi>bTrem</gi> element itself does not have a duration.
          Instead, this duration is derived from the child element. The <att>num</att> attribute on
            <gi>bTrem</gi> can be used to store a number to be rendered along with a tremolo. The
            <att>slash</att> attribute indicates the number of slashes to be drawn. The number of
          slashes indicates the exact note values in an aural rendition of measured tremolandi,
          i.e., 4ths or 8ths=1, 16ths=2, 32nds=3, 64ths=4, 128ths=5, 256ths=6. The stem modifier
          (slash or z) must also be explicity set on the child <gi>note</gi> or <gi>chord</gi>
          element for a complete visual representation. <!-- TODO: Isn't that redundant??? --></p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <layer>
            <note/>
            <bTtrem slash="3">
              <note pname="g" oct="4" dur="4" stem.mod="3slash"/>
            </bTtrem>
            <note/>
          </layer>
        </egXML>

        <p>In case of alternating pitches, MEI offers the <gi>fTrem</gi> (fingered tremolo) element
          instead. While it mostly behaves the same as <gi>bTrem</gi>, it requires exactly two child
          elements, either being a <gi>note</gi> or <gi>chord</gi>. Again, the <att>slash</att>
          attribute records the number of slashes required – 4ths or 8ths=1, 16ths=2, 32nds=3,
          64ths=4, 128ths=5, 256ths=6.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <layer>
            <note/>
            <fTtrem slash="3">
              <note pname="g" oct="4" dur="4" stem.mod="3slash"/>
              <note pname="c" oct="4" dur="4" stem.mod="3slash"/>
            </fTtrem>
            <note/>
          </layer>
        </egXML>

      </div>
      <!--TODO: include fermata <div type="div4" xml:id="cmnFermata">
        <head>Fermata</head>
        <p>
          <gi>fermata</gi>: An indication placed over a note or rest to indicated that it should be held longer than 
          its written value. May also occur over a barline to indicate the end of a phrase or section. Sometimes called 
          a 'hold' or 'pause'. The <gi>fermata</gi> element is a specialized form of, i.e., syntactic sugar for, dir/@type="fermata" 
          with <!-\-&ferm; or &uferm;-\-> as its PCDATA content. Other visual forms of a fermata may be indicated via the altsym 
          attribute. The starting point of the fermata may be indicated by either a tstamp, tstamp.ges, tstamp.real or 
          startid attribute. It is a semantic error not to specify a starting point attribute. 
       </p>
      </div>-->
      <!--TODO: include octave <div type="div4" xml:id="cmnOctave">
        <head>Octave shift</head>
        <p>
          <gi>octave</gi>: An indication that a passage should be performed one or more octaves above or below its written 
          pitch. The dis and dis.place attributes record the amount and direction of displacement, respectively. The rend 
          attribute captures the appearance of the continuation line associated with the octave displacement. The starting 
          point of the octave displacement may be indicated by either a tstamp, tstamp.ges, tstamp.real or startid attribute, 
          while the ending point may be recorded by either a dur, dur.ges or endid attribute. It is a semantic error not to 
          specify one starting and one ending type of attribute. Please note that the dur attribute here is not a true duration, 
          but rather a time stamp for the end point of the octave displacement. Also, note that the dur attribute is not 
          required because the octave displacement can be visually instantaneous. 
       </p>
      </div>-->
    </div>

    <div type="div3" xml:id="cmnInstr">
      <head>Instrument-specific Symbols in CMN</head>
      <p>CMN contains a number of symbols which are closely related to a specific instrument. MEI
        offers elements for three of these symbols, namely breath marks, diagram for tuning harps,
        and indications for piano pedals.</p>
      <div type="div4" xml:id="cmnBreath">
        <head>Breath Marks</head>
        <p>A <term>breat mark</term> indicates a point at which the performer of a wind instrument
          or singer may breathe. It is sometimes also used to indicate a short pause or break for
          instruments <hi rend="italic">not</hi> requiring breath, which makes it often serve as a
          guide to phrasing. In MEI, breath marks are encoded using the <gi>breath</gi> element.
          Although it is a member of <ident type="class">model.controleventLike</ident> and may
          therefore be located as child of <gi>measure</gi>, it is often more convenient to use it
          inline where it appears in the <gi>layer</gi>, like in the following example:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <layer>
            <note pname="g" oct="3" dur="2" syl="Wald,"/>
            <breath/>
            <note pname="c" oct="3" dur="4" syl="so"/>
          </layer>
        </egXML>

        <p>The usual sign for the breath mark is a comma; however, other visual forms of the breath
          mark may be indicated using the <att>altsym</att> attribute (see <ptr
            target="#userSymbols"/> for further details).
          <!-- TODO: We had a sentence that "It is a semantic
          error not to specify a starting point attribute", but there is no corresponding schematron rule. 
          When used inline as in the example above, I don't think it's necessary to have this at all. Or, we could add a 
          schematron rule that checks if it's used within a measure, and only then requires a starting point attribute. Opinions?
          -->
        </p>
      </div>
      <div type="div4" xml:id="cmnHarp">
        <head>Harp Pedal</head>
        <p>Modern harps have seven pedals which allow to adjust their strings to different keys.
          Sometimes, however, it is necessary to change the tuning in the course of a musical
          performance, which is then indicated using a special <term>harp pedal diagram</term>.</p>
        <p>In MEI, harp pedal diagram are encoded using the <gi>harpPedal</gi> element. It is a
          member of the <ident type="class">model.controleventLike</ident> class and is therefore
          placed within <gi>measure</gi>, following all <gi>staff</gi> children. The
            <att>staff</att> and <att>layer</att> attributes may be used to assign it to a certain
            <gi>staff</gi> or <gi>layer</gi> by refering the corresponding <att>n</att> attribute.
          Either a <att>tstamp</att> or <att>startid</att> attribute must be used to indicate the
          placement within the measure (see <ptr target="#cmnTstamp"/> and <ptr target="#ptrRef"/>
          for further details about those linking mechanisms).</p>
        <p>The musical intention of the element is described using the <att>c</att>, <att>d</att>,
            <att>e</att>, <att>f</att>, <att>g</att>, <att>a</att> and <att>b</att> attributes,
          which affect the corresponding strings of the harp. All of these attributes may take the
          values "<hi rend="bold">f</hi>" (flat), "<hi rend="bold">s</hi>" (sharp) or "<hi
            rend="bold">n</hi>" (natural), where "n" is the default value, which is assumed when one
          of these attributes is not specified. A <gi>harpPedal</gi> indicating a keychange to E
          flat major would therefore look like so:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <measure>
            <!-- staffs omitted -->
            <harpPedal staff="2" tstamp="1" b="f" e="f" a="f"/>
          </measure>
        </egXML>

      </div>
      <div type="div4" xml:id="cmnPedal">
        <head>Piano Pedal</head>
        <p>Classical music for pianos often includes hints on the pedalling. In MEI, these symbols
          are encoded using the <gi>pedal</gi> element. As a member of the <ident type="class"
            >model.controleventLike</ident> class, it is located within <gi>measure</gi> and refers
          to a staff, layer and timestamp using the <att>staff</att>, <att>layer</att> and
            <att>tstamp</att> attributes. Alternatively, the <att>startid</att> attribute may be
          used to identify a <gi>note</gi> or <gi>chord</gi> to which the mark should be
          assigned.</p>
        <p>The meaning of the mark is captured using the <att>dir</att> attribute, which provides
          the following values: <list type="simple">
            <label>up</label>
            <item>depress the pedal</item>
            <label>down</label>
            <item>release the pedal</item>
            <label>bounce</label>
            <item>depress, then immediately release the pedal</item>
            <label>half</label>
            <item>half pedal</item>
          </list></p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <measure>
            <!-- staffs omitted -->
            <pedal staff="2" tstamp="1" dir="down"/>
          </measure>
        </egXML>

        <!-- TODO: How do we encode organ pedal marks? -->
      </div>
    </div>

    <div type="div3" xml:id="cmnOssia">
      <head>Ossia</head>
      <p>The term <term>ossia</term>, italian for "or", denotes one of the most specific features of
        CMN. An ossia is an alternative for a certain passage which is provided by the composer
          <emph>without any preference</emph>. Although an ossia usually describes a simpler, easier
        to perform version of the original content, both possibilities are equally valid. Another
        frequent use case for ossias is the provision of indications about the performance practice,
        such as ornamentation written out. In all cases, it is up to the performer to choose between
        the alternatives.</p>
      <p>Often an ossia is rendered above the main staff on a reduced-size staff. Sometimes the
        alternate material occurs on the same staff as the primary text, but in a separate layer. In
        this case, the alternative material is often rendered in small-sized notation. For both
        situations, MEI offers the <gi>ossia</gi> element, which may be nested either inside
          <gi>measure</gi> to reflect an ossia on a separate staff, or inside <gi>staff</gi> to
        reflect an inline ossia in a separate layer. The following example demonstrates an ossia on
        a separate staff:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <!-- first staff, without ossia -->
          </staff>
          <ossia>
            <staff>
              <!-- alternative content on reduced-size staff -->
            </staff>
            <staff n="2">
              <!-- original content on regular staff -->
            </staff>
          </ossia>
          <staff n="3">
            <!-- third staff, without ossia -->
          </staff>
        </measure>
      </egXML>

      <p>The example above demonstrates that only one of the two <gi>staff</gi>s in <gi>ossia</gi>
        has an <att>n</att> attribute. This mechanism allows to distinguish between the "regular"
        and the alternative content: The one bearing the <att>n</att> attribute goes in line with
        the preceding measure's staff, the other one is printed in reduced size above. In this case,
        the vertical order of staves follows document order: The topmost staff is encoded as first
        child, the lowest comes last. In combination with the presence of the <att>n</att>
        attribute, this allows to capture even multiple simultaneous ossia staves.</p>
      <p>All staves within <gi>ossia</gi>, even the alternative ones without a direct reference,
        obey the definitions of the associated <gi>staffDef</gi>, which can be derived from the
        value of the <att>n</att> attribute. Alternatively, a separate <gi>staffDef</gi> may be
        given at the beginning of the contained <gi>layer</gi> element(s).</p>
      <p>In case of an inline ossia, the whole setup of elements moves down one step in the
        hierarchy, as seen in the following example:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <!-- content omitted -->
          </staff>
          <staff n="2">
            <ossia>
              <layer n="1">
                <!-- original content in regular layer -->
              </layer>
              <layer>
                <!-- alternative content in separate layer -->
              </layer>
            </ossia>
          </staff>
          <staff n="3">
            <!-- content omitted -->
          </staff>
        </measure>
      </egXML>

    </div>

    <div type="div3" xml:id="cmnDir">
      <head>Directions and Rehearsal marks</head>
      <!-- should we reassign reh to one of the above sections? -->
      <p>In CMN scores, there are often very many verbal instructions and directives. Some of them
        may concern the loudness of the performance, in which case MEI offers the the <gi>dynam</gi>
        element (see <ptr target="#cmnDynam"/>). In other cases, however, they affect the tempo, or
        other, more specific instructions for the performer. Instead of providing separate elements
        for all possible types of such directions, MEI offers the somewhat generic <gi>dir</gi>
        element. Although this element is not CMN specific (it is defined in <ptr target="#shared"
        />), it is especially important in this repertoire.</p>
      <p>Very often in CMN, a tempo or character indication is provided above the topmost staff of
        the first measure of a given movement. This indication is normally regarded as the label for
        that particular movement, such as "Allegro moderato" or "Andante maestoso". Though the
        movement may be labelled using the <att>label</att> attribute on <gi>mdiv</gi> or somewhere
        in the <ref target="#header">header</ref>, it is often required to capture the exact
        position, spelling, or other features of the label as found in the underlying source
        material.</p>
      <p>Therefore, movement label are encoded as <gi>dir</gi> elements. As <gi>dir</gi> is a member
        of <ident type="class">model.controleventLike</ident>, it is normally nested as child of
          <gi>measure</gi>, following all <gi>staff</gi> children. Its <att>staff</att>,
          <att>layer</att> and <att>tstamp</att> attributes are used to ensure correct semantic
        positioning (alternative: <att>startid</att>), whereas <att>place</att> indicates a
        positioning above or below the staff.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure n="1">
          <!-- all staves omitted -->
          <dir staff="1" tstamp="1" place="above">Allegro moderato</dir>
        </measure>
      </egXML>

      <p>Another general direction is the presence of <term>rehearsal marks</term>. These marks,
        which often use letters or numbers for a better distinction, are used in scores and
        corresponding parts material to identify convenient points to restart rehearsal after breaks
        or interruptions. For this reason, they are often visually more emphasized than measure
        numbers. In MEI, they are encoded using the <gi>reh</gi> element, which holds the respective
        content.</p>
      <p>The following detail from an edition of Hector Berlioz' Symphonie Fantastique shows a
        typical example for rehearsal marks:</p>
      <figure>
        <graphic url="guidelines/Images/modules/cmn/reh-berlioz.png" width="185px"/>
      </figure>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <measure>
          <staff n="1">
            <!-- content omitted -->
          </staff>
          <staff n="2">
            <!-- content omitted -->
          </staff>
          <staff n="3">
            <!-- content omitted -->
          </staff>
          <reh staff="1" place="above" tstamp="1">37</reh>
        </measure>
      </egXML>

      <p>Please note that when there are multiple rehearsal marks in different staves, each of them
        has to be encoded separately.
        <!-- TODO: Include example from Brahms op. 98 with manually added reh marks… -->
      </p>
    </div>

    <div type="div3" xml:id="cmnRep">
      <head>Repetition in CMN</head>
      <p>One characteristic feature of music is repetition. Many musical forms rely on repetition
        and modification of distinct sections of the music. Repetition in this sense is called
        structural repetition. At the same time, scribers and engravers of music often use local
        symbols for repeating smaller chunks of music instead of writing them twice or more.</p>
      <div type="div4" xml:id="cmnRepStruct">
        <head>Structural Repetition</head>
        <p>Structural repetition is already handled in chapter <ptr target="#shared"/>. <!-- TODO: find better link -->
          <!-- TODO: What needs to be handled here:
            measure/@right="rptstart" etc.
            section
            ending
            expansion
          -->
        </p>
      </div>
      <div type="div4" xml:id="cmnRepSym">
        <head>Repetition Symbols</head>
        <p>Besides these rather large scale repetitions, CMN provides a number of different symbols
          for locally bound repetitions. Many of these symbols are found in manuscripts and may be
          regarded as personal convention of their respective authors. The most common symbol is a
          simple or double slash, which may or may not have dots in the upper left and lower right
          like a percentage sign. The actual meaning of this symbol depends on the current context,
          so that no general rule can be provided. All elements described in the following allow to
          capture the original symbol by using either the <att>facs</att> or <att>altsym</att>
          attribute, however. See <ptr target="#facsimile"/> and <ptr target="#userSymbols"/> for
          further details. On all these elements the <att>expand</att> attribute may be used to
          indicate whether to render the repeat symbol ("false"), or the repeated content
          ("true").</p>
        <p>It is very common in manuscripts or narrow prints to indicate the repetition of the
          previous beat by a slash.
          <!-- TODO: Perry, could you write the explanation for @rend? It seems wrong to me, or maybe I don't get it… -->
        </p>
        <!-- TODO: Re: the halfmRpt, I have a kind of bad feeling. It seems arbitrary to have that, instead of a generic
          rptSnippet or so. I know that you invented it for my Waldstein example (or was it one of the others?), but it seems
          wrong. I'd prefer to specify the snippet to be repeated by a tstamp and dur combination, maybe also with a reference 
          to a measure in there. That would definitely be much more helpful than halfmRpt. Should we put this on the table and
          offer to deprecate halfmRpt? I know we have to keep it for now, but…
        -->
        <p>In some situations, a symbol is used to indicatete the repetition of a half measure. This
          can be captured using the <gi>halfmRpt</gi> element. The following example from the
          beginning of Beethoven's Waldstein sonata illustrates such usage:</p>
        <figure>
          <graphic url="guidelines/Images/modules/cmn/halfmRpt_beethoven.png" width="418px"/>
        </figure>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <measure>
            <staff n="1"><!-- omitted --></staff>
            <staff n="2">
              <layer n="1"><!-- omitted --></layer>
              <layer n="2">
                <chord dur="2" stem.mod="1slash">
                  <note pname="g" oct="2"/>
                  <note pname="b" oct="1"/>
                </chord>
                <halfmRpt/>
              </layer>
            </staff>
          </measure>
          <measure>
            <staff n="1"><!-- omitted --></staff>
            <staff n="2">
              <layer n="2">
                <halfmRpt/>
                <halfmRpt/>
              </layer>
            </staff>
          </measure>
        </egXML>

        <p>As seen in the example above, it is possibel to continuously repeat half measures, even
          across barlines.</p>
        <p>When the scope of the repetition is the full measure, the <gi>mRpt</gi> element is used
          instead. It is used as sole child of <gi>layer</gi>, so no other markup is allowed besides
          a <gi>mRpt</gi>. The <gi>mRpt2</gi> element indicates the repetition of the last two
          measures, and the <gi>multiRpt</gi> element is used to capture symbols for repeating more
          than the last two measures. In both cases, the automated numbering of consecutive measures
          of rest may be controlled via the <att>multi.number</att> attribute on the
            <gi>scoreDef</gi> or <gi>staffDef</gi> elements. For <gi>multiRpt</gi>, the
            <att>num</att> attribute indicates the number of preceding measures to be repeated.
          <!-- TODO: @num uses a wrong definition (it's the one from tuplets, should have a different desc! -->
        </p>
      </div>
    </div>
  </div>

  <!--<div type="div2" xml:id="originalContent">
    <head>Overview of the CMN Module</head>
    <p>The module described in this chapter makes available the following components:</p>
    <!-\-<div type="div3" xml:id="cmnElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="_arpeg"/>
          <specDesc key="_beam"/>
          <specDesc key="_beamSpan"/>
          <specDesc key="_beatRpt"/>
          <specDesc key="_bend"/>
          <specDesc key="_breath"/>
          <specDesc key="_bTrem"/>
          <specDesc key="_fermata"/>
          <specDesc key="_fTrem"/>
          <specDesc key="_hairpin"/>
          <specDesc key="_harpPedal"/>
          <specDesc key="_gliss"/>
          <specDesc key="_halfmRpt"/>
          <specDesc key="_measure"/>
          <specDesc key="_mRest"/>
          <specDesc key="_mRpt"/>
          <specDesc key="_mRpt2"/>
          <specDesc key="_mSpace"/>
          <specDesc key="_multiRest"/>
          <specDesc key="_multiRpt"/>
          <specDesc key="_octave"/>
          <specDesc key="_ossia"/>
          <specDesc key="_pedal"/>
          <specDesc key="_reh"/>
          <specDesc key="_slur"/>
          <specDesc key="_tie"/>
          <specDesc key="_tuplet"/>
          <specDesc key="_tupletSpan"/>
        </specList>
     </p>
    </div>-\->
    <div type="div3" xml:id="cmnAttributeClasses">
      <head>Attribute Classes</head>
      <p>
        <specList>
          <specDesc key="att.arpeg.anl"/>
          <specDesc key="att.arpeg.ges"/>
          <specDesc key="att.arpeg.log"/>
          <specDesc key="att.arpeg.vis"/>
          <specDesc key="att.beam.anl"/>
          <specDesc key="att.beam.ges"/>
          <specDesc key="att.beam.log"/>
          <specDesc key="att.beam.vis"/>
          <specDesc key="att.beamed"/>
          <specDesc key="att.beamedwith"/>
          <specDesc key="att.beaming.log"/>
          <specDesc key="att.beamrend"/>
          <specDesc key="att.beamsecondary"/>
          <specDesc key="att.beamSpan.anl"/>
          <specDesc key="att.beamSpan.ges"/>
          <specDesc key="att.beamSpan.log"/>
          <specDesc key="att.beamSpan.vis"/>
          <specDesc key="att.beatRpt.anl"/>
          <specDesc key="att.beatRpt.ges"/>
          <specDesc key="att.beatRpt.log"/>
          <specDesc key="att.beatRpt.vis"/>
          <specDesc key="att.bend.anl"/>
          <specDesc key="att.bend.ges"/>
          <specDesc key="att.bend.log"/>
          <specDesc key="att.bend.vis"/>
          <specDesc key="att.breath.anl"/>
          <specDesc key="att.breath.ges"/>
          <specDesc key="att.breath.log"/>
          <specDesc key="att.breath.vis"/>
          <specDesc key="att.bTrem.anl"/>
          <specDesc key="att.bTrem.ges"/>
          <specDesc key="att.bTrem.log"/>
          <specDesc key="att.bTrem.vis"/>
          <specDesc key="att.chord.ges.cmn"/>
          <specDesc key="att.chord.log.cmn"/>
          <specDesc key="att.chord.vis.cmn"/>
          <specDesc key="att.cutout"/>
          <specDesc key="att.expandable"/>
          <specDesc key="att.fermata.anl"/>
          <specDesc key="att.fermata.ges"/>
          <specDesc key="att.fermata.log"/>
          <specDesc key="att.fermata.vis"/>
          <specDesc key="att.fTrem.anl"/>
          <specDesc key="att.fTrem.ges"/>
          <specDesc key="att.fTrem.log"/>
          <specDesc key="att.fTrem.vis"/>
          <specDesc key="att.gliss.anl"/>
          <specDesc key="att.gliss.ges"/>
          <specDesc key="att.gliss.log"/>
          <specDesc key="att.gliss.vis"/>
          <specDesc key="att.graced"/>
          <specDesc key="att.hairpin.anl"/>
          <specDesc key="att.hairpin.ges"/>
          <specDesc key="att.hairpin.log"/>
          <specDesc key="att.hairpin.vis"/>
          <specDesc key="att.halfmRpt.anl"/>
          <specDesc key="att.halfmRpt.ges"/>
          <specDesc key="att.halfmRpt.log"/>
          <specDesc key="att.halfmRpt.vis"/>
          <specDesc key="att.harpPedal.anl"/>
          <specDesc key="att.harpPedal.ges"/>
          <specDesc key="att.harpPedal.log"/>
          <specDesc key="att.harpPedal.vis"/>
          <specDesc key="att.layerDef.log.cmn"/>
          <specDesc key="att.lvpresent"/>
          <specDesc key="att.measure.vis"/>
          <specDesc key="att.mRest.anl"/>
          <specDesc key="att.mRest.ges"/>
          <specDesc key="att.mRest.log"/>
          <specDesc key="att.mRest.vis"/>
          <specDesc key="att.mRpt.anl"/>
          <specDesc key="att.mRpt.ges"/>
          <specDesc key="att.mRpt.log"/>
          <specDesc key="att.mRpt.vis"/>
          <specDesc key="att.mRpt2.anl"/>
          <specDesc key="att.mRpt2.ges"/>
          <specDesc key="att.mRpt2.log"/>
          <specDesc key="att.mRpt2.vis"/>
          <specDesc key="att.mSpace.anl"/>
          <specDesc key="att.mSpace.ges"/>
          <specDesc key="att.mSpace.log"/>
          <specDesc key="att.mSpace.vis"/>
          <specDesc key="att.multiRest.anl"/>
          <specDesc key="att.multiRest.ges"/>
          <specDesc key="att.multiRest.log"/>
          <specDesc key="att.multiRest.vis"/>
          <specDesc key="att.multiRpt.anl"/>
          <specDesc key="att.multiRpt.ges"/>
          <specDesc key="att.multiRpt.log"/>
          <specDesc key="att.multiRpt.vis"/>
          <specDesc key="att.note.ges.cmn"/>
          <specDesc key="att.note.log.cmn"/>
          <specDesc key="att.note.vis.cmn"/>
          <specDesc key="att.numbered"/>
          <specDesc key="att.numberplacement"/>
          <specDesc key="att.octave.anl"/>
          <specDesc key="att.octave.ges"/>
          <specDesc key="att.octave.log"/>
          <specDesc key="att.octave.vis"/>
          <specDesc key="att.ornamentaccid"/>
          <specDesc key="att.ossia.anl"/>
          <specDesc key="att.ossia.ges"/>
          <specDesc key="att.ossia.log"/>
          <specDesc key="att.ossia.vis"/>
          <specDesc key="att.pedal.anl"/>
          <specDesc key="att.pedal.ges"/>
          <specDesc key="att.pedal.log"/>
          <specDesc key="att.pedal.vis"/>
          <specDesc key="att.phrase.vis.cmn"/>
          <specDesc key="att.pianopedals"/>
          <specDesc key="att.reh.anl"/>
          <specDesc key="att.reh.ges"/>
          <specDesc key="att.reh.log"/>
          <specDesc key="att.reh.vis"/>
          <specDesc key="att.rehearsal"/>
          <specDesc key="att.rest.log.cmn"/>
          <specDesc key="att.rest.vis.cmn"/>
          <specDesc key="att.scoreDef.log.cmn"/>
          <specDesc key="att.scoreDef.vis.cmn"/>
          <specDesc key="att.slur.anl"/>
          <specDesc key="att.slur.ges"/>
          <specDesc key="att.slur.log"/>
          <specDesc key="att.slur.vis"/>
          <specDesc key="att.slurrend"/>
          <specDesc key="att.space.log.cmn"/>
          <specDesc key="att.staffDef.log.cmn"/>
          <specDesc key="att.staffDef.vis.cmn"/>
          <specDesc key="att.stemmed.cmn"/>
          <specDesc key="att.tie.anl"/>
          <specDesc key="att.tie.ges"/>
          <specDesc key="att.tie.log"/>
          <specDesc key="att.tie.vis"/>
          <specDesc key="att.tierend"/>
          <specDesc key="att.tuplet.anl"/>
          <specDesc key="att.tuplet.ges"/>
          <specDesc key="att.tuplet.log"/>
          <specDesc key="att.tuplet.vis"/>
          <specDesc key="att.tupletSpan.anl"/>
          <specDesc key="att.tupletSpan.ges"/>
          <specDesc key="att.tupletSpan.log"/>
          <specDesc key="att.tupletSpan.vis"/>
        </specList>
     </p>
    </div>
    <div type="div3" xml:id="cmnModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.controleventLike.cmn"/>
          <specDesc key="model.eventLike.cmn"/>
          <specDesc key="model.eventLike.measureFilling"/>
          <specDesc key="model.layerPart.cmn"/>
          <specDesc key="model.measureLike"/>
          <specDesc key="model.measurePart"/>
          <specDesc key="model.ossiaLike"/>
          <specDesc key="model.sectionPart.cmn"/>
        </specList>
     </p>
    </div>
  </div>-->
</div>
