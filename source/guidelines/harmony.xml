<?xml version="1.0" encoding="UTF-8"?>
<!--
  © 2010 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Creative Commons Attribution-NoDerivs Unported License, 
  Version 3.0 (the "License"); you may not use this file except in compliance with the License.
  You may obtain a copy of the License at http://creativecommons.org/licenses/by-nd/3.0/.
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="harmony" n="0">
  <head>Harmony</head>
  <p>This chapter describes ways of encoding musical signs of harmony ocurring within a music text, e.g. chord names, tablature grids, figured bass, or signs for harmonic analysis. The modules provides way of encoding the indications of harmony within the music text as well as connecting them with a standoff definition referenceable even over the boundaries of a single document.</p>
  <div type="div2" xml:id="harmonyOverview">
    <!-- Overview -->
    <head>Overview of the Harmony Module</head>
    <p>The module makes available the following components:</p>
    <div type="div3" xml:id="harmonyElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="barre"/>
          <!--<elementSpec ident="barre" module="MEI.harmony">
            <desc>― An indication of fingering in a chord tablature
              grid.<!-\- The startid and endid
        attributes are used to indicate the &lt;chordMember&gt; elements on which the barre starts
        and finishes respectively. The fret at which the barre should be created is recorded by the
        fret attribute.-\-></desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.fretlocation"/>
              <memberOf key="att.startendid"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
          </elementSpec>-->
          <specDesc key="chordDef"/>
          <!--<elementSpec ident="chordDef" module="MEI.harmony">
            <desc>(chord definition) ― Chord tablature
              definition.<!-\- An id attribute, while not required by
        the schema, is needed so that &lt;harm&gt; elements can reference a particular chord
        definition. The pos (position) attribute is provided in order to create displayable chord
        tablature grids. &lt;chordMember&gt; sub-elements record the individual pitches of the
        chord. &lt;barre&gt;sub-elements may be used when a single finger is used to stop multiple
        strings.-\-></desc>
            <classes>
              <memberOf key="att.common"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:ref name="chordMember"/>
              </rng:zeroOrMore>
              <rng:zeroOrMore>
                <rng:ref name="barre"/>
              </rng:zeroOrMore>
            </content>
            <attList>
              <attDef ident="pos" usage="opt">
                <desc>records the fret position at which the chord tablature is to be played.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>-->
          <specDesc key="chordMember"/>
          <!--<elementSpec ident="chordMember" module="MEI.harmony">
            <desc>― An individual pitch in a chord defined by a &lt;chordDef&gt;
              element.<!-\- The
        fing and fret attributes are provided in order to create displayable chord tablature grids.
        The inth (harmonic interval) attribute may be used to facilitate automated performance of a
        chord. It gives the number of 1/2 steps above the bass. Of course, for the bass note itself,
        inth should be set to '0'. The fret at which a finger should be placed is recorded in the
        fret attribute.-\-></desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.accidental.performed"/>
              <memberOf key="att.fretlocation"/>
              <memberOf key="att.intervalharmonic"/>
              <memberOf key="att.pitched"/>
            </classes>
            <content>
              <rng:empty/>
            </content>
            <attList>
              <attDef ident="fing" usage="opt">
                <desc>indicates which finger, if any, should be used to play an individual string. The
                  values 'x' and 'o' indicated muffled and open strings, respectively.</desc>
                <datatype>
                  <rng:ref name="data.FINGER.FRET"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>-->
          <specDesc key="chordTable"/>
          <!--<elementSpec ident="chordTable" module="MEI.harmony">
            <desc>― Chord/tablature look-up table.
              <!-\- A table may be shared between MEI instances
        through the use of an external parsed entity containing the look-up table to be
        shared.-\-></desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="model.chordTableLike"/>
            </classes>
            <content>
              <rng:oneOrMore>
                <rng:ref name="chordDef"/>
              </rng:oneOrMore>
            </content>
          </elementSpec>-->
          <specDesc key="f"/>
          <!--<elementSpec ident="f" module="MEI.harmony">
            <desc>(figure) ― Single element of a figured bass indication.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.common.anl"/>
              <memberOf key="att.altsym"/>
              <memberOf key="att.facsimile"/>
              <memberOf key="model.fLike"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:text/>
                  <rng:ref name="model.textphraseLike.limited"/>
                  <rng:ref name="model.editLike"/>
                  <rng:ref name="model.transcriptionLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
            <attList>
              <attDef ident="extender" usage="opt">
                <desc>indicates the presence of an extension symbol, typically a dash or underscore, drawn
                  from the end of the harmonic indication to the point indicated by the dur
                  attribute.</desc>
                <datatype>
                  <rng:ref name="data.BOOLEAN"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>-->
          <specDesc key="fb"/>
          <!-- <elementSpec ident="fb" module="MEI.harmony">
      <desc>(figured bass) ― Short-hand indication of harmony.</desc>
      <classes>
        <memberOf key="att.common"/>
        <memberOf key="att.common.anl"/>
        <memberOf key="att.facsimile"/>
        <memberOf key="model.figbassLike"/>
      </classes>
      <content>
        <rng:zeroOrMore>
          <rng:choice>
            <rng:ref name="model.fLike"/>
            <rng:ref name="model.editLike"/>
            <rng:ref name="model.transcriptionLike"/>
          </rng:choice>
        </rng:zeroOrMore>
      </content>
    </elementSpec> -->
          <specDesc key="harm"/>
          <!--(harmony) ― An indication of harmony, e.g., chord names, tablature grids, harmonic
    analysis, figured
    bass.--><!-- The starting point of the harmony may be indicated by either a
        tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending point may be recorded
        by either a dur, dur.ges or endid attribute. It is a semantic error not to specify a
        starting point attribute. The dur attribute encodes the logical and visual duration of the
        harmony. Please note that the dur attribute here is not a true duration, but rather a time
        stamp for the end point of the harmony.-->
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="harmonyAttributeClasses">
      <head>Attribute Classes</head>
      <p>
        <specList>
          <specDesc key="att.fretlocation"/>
          <!--<classSpec ident="att.fretlocation" module="MEI.harmony" type="atts">
      <desc>Attributes that describe a fret location</desc>
      <attList>
        <attDef ident="fret" usage="opt">
          <desc>records the location at which a string should be stopped against a fret.</desc>
          <datatype>
            <rng:ref name="data.FRET"/>
          </datatype>
        </attDef>
      </attList>
    </classSpec>-->
          <specDesc key="att.harm.anl"/>
          <!-- <classSpec ident="att.harm.anl" module="MEI.harmony" type="atts">
      <desc>Analytical domain attributes</desc>
      <classes>
        <memberOf key="att.common.anl"/>
      </classes>
    </classSpec> -->
          <specDesc key="att.harm.ges"/>
          <!-- <classSpec ident="att.harm.ges" module="MEI.harmony" type="atts">
      <desc>Gestural domain attributes</desc>
      <classes>
        <memberOf key="att.duration.performed"/>
      </classes>
    </classSpec> -->
          <specDesc key="att.harm.log"/>
          <!-- <classSpec ident="att.harm.log" module="MEI.harmony" type="atts">
      <desc>Logical domain attributes</desc>
      <classes>
        <memberOf key="att.controlevent"/>
        <memberOf key="att.startendid"/>
        <memberOf key="att.duration.timestamp"/>
      </classes>
      <attList>
        <attDef ident="chordref" usage="opt">
          <desc>contains a reference to a &lt;chordDef&gt; element elsewhere in the document.</desc>
          <datatype>
            <rng:ref name="data.URI"/>
          </datatype>
        </attDef>
      </attList>
    </classSpec> -->
          <specDesc key="att.harm.vis"/>
          <!-- <classSpec ident="att.harm.vis" module="MEI.harmony" type="atts">
      <desc>Visual domain attributes</desc>
      <classes>
        <memberOf key="att.placement"/>
        <memberOf key="att.visualoffset"/>
        <memberOf key="att.visualoffset2.ho"/>
        <memberOf key="att.visualoffset2.to"/>
        <memberOf key="att.xy"/>
      </classes>
      <attList>
        <attDef ident="extender" usage="opt">
          <desc>indicates the presence of an extension symbol, typically a dash or underscore, drawn
            from the end of the harmonic indication to the point indicated by the dur
            attribute.</desc>
          <datatype>
            <rng:ref name="data.BOOLEAN"/>
          </datatype>
        </attDef>
        <attDef ident="rendgrid" usage="opt">
          <desc>describes how the harmonic indication should be rendered.</desc>
          <valList type="closed">
            <valItem ident="grid">
              <desc>chord tablature grid</desc>
            </valItem>
            <valItem ident="gridtext">
              <desc>chord tablature grid and the element's textual content</desc>
            </valItem>
            <valItem ident="text">
              <desc>textual content of the element</desc>
            </valItem>
          </valList>
        </attDef>
      </attList>
    </classSpec> -->
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="harmonyModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.chordTableLike"/>
          <!-- <classSpec ident="model.chordTableLike" module="MEI.harmony" type="model">
      <desc>groups elements that group playable chord definitions.</desc>
    </classSpec> -->
          <specDesc key="model.controleventLike.harmony"/>
          <!--<classSpec ident="model.controleventLike.harmony" module="MEI.harmony" type="model">
            <desc>groups elements that function as control events; that is, those events that modify or
              otherwise depend on the existence of notated events.</desc>
            <classes>
              <memberOf key="model.controleventLike"/>
            </classes>
          </classSpec>-->
          <specDesc key="model.figbassLike"/>
          <!--<classSpec ident="model.figbassLike" module="MEI.harmony" type="model">
            <desc>groups elements that record figured bass.</desc>
          </classSpec>-->
          <specDesc key="model.fLike"/>
          <!-- <classSpec ident="model.fLike" module="MEI.harmony" type="model">
      <desc>groups elements that represent single figured bass elements.</desc>
    </classSpec> -->
          <specDesc key="model.harmLike"/>
          <!-- <classSpec ident="model.harmLike" module="MEI.harmony" type="model">
      <desc>groups elements that record harmony.</desc>
      <classes>
        <memberOf key="model.controleventLike.harmony"/>
      </classes>
    </classSpec> -->
        </specList>
      </p>
    </div>
  </div>
  <div>
    <head>Detailed description</head>
    <p>MEI provides multiple methods for encoding chords resp. harmonic information.</p>
    <p>Basically chords in the music text can be encoded using the <gi>chord</gi> element defined in <ptr target="#shared"/>: 
      <specList>
        <specDesc key="chord"/>
      </specList>
    </p>
    <p>If this is what you are looking for, please refer to the rerspective chapter of these guidelines (<ptr target="#shared"/>).</p>
    <p>The <ref target="#harmony">Harmony Module</ref> described here however has a different focus. Instead of defining actual notes in the music text elements and attributes of this module allow for encoding proprietary indications of harmony in the score, such as chord symbols, tablature grids, figured bass or symbols for harmonic analysis (the possibilities of which come to their full scope in conjunction with <ptr target="#analysis"/>).</p>
    <p>Basically elements defined in this module influence your encoding possibilities in <gi>scoreDef</gi> (providing global score metadata) and for encoding indications of harmony in the music text.</p>
    <div>
      <head>Providing Chord Metadata in <gi>scoreDef</gi></head>
      <p>Basically elements defined in this module influence your encoding possibilities in <gi>scoreDef</gi> (providing global score metadata) for defining chords and tablatures that can be referenced when encoding indications of harmony in the music text, in order to provide these indications with musical information.</p>
      <p>The starting point in <gi>scoreDef</gi> is a new child element:</p>
      <p>
        <specList>
          <specDesc key="chordTable"/>
        </specList>
      </p>
      <p>A chord then is defined in <gi>chordTable</gi>&#x2019;s child element:</p>
      <p>
        <specList>
          <specDesc key="chordDef" atts="id pos"/>
        </specList>
      </p>
      <p>An <att>id</att> attribute, while not required by the schema, is needed so that <gi>harm</gi> elements can reference a particular chord definition. The <att>pos</att> (position) attribute is provided in order to create displayable chord tablature grids.</p>
      <p>Individual pitches of a chord are to be encoded using the child element:</p>
      <p>
        <specList>
          <specDesc key="chordMember" atts="inth fing fret"/>
        </specList>
      </p>
      <p>In order to spcify the individual pitches more precicesly following attributes should be used.</p>
      <p>The <att>inth</att> (harmonic interval) attribute may be used in order to indicate the number of half steps above the bass note, when encoding the bass note the attributes value should be set to <q>0</q>, of course.</p>
      <p>When about to encode tablature grids, &#2013; be it in transcribing or just wanting to supply additional rendition information &#2013; <att>fing</att> (finger) and <att>fret</att> attributes are provided. The fret at which a finger should be placed is recorded in the <att>fret</att> attribute, while <att>fing</att> indicates which finger, if any, should be used to play an individual string. The values <q>x</q> and <q>o</q> are used to indicate muffled and open strings, respectively. When intending to render proper grids <att>fret</att> and <att>fing</att> form essential data.</p>
              <!--<classes>
                <memberOf key="att.common"/>
                <memberOf key="att.accidental.performed"/>
                <memberOf key="att.fretlocation"/>
                <memberOf key="att.intervalharmonic"/>
                <memberOf key="att.pitched"/>
              </classes>-->
      <p>Another child element of <gi>chordDef</gi> being essential for encoding tablature grids is:</p>
       <p>
         <specList>
           <specDesc key="barre" atts="fret startid endid"/>
         </specList>
       </p>
      <p><gi>barre</gi> sub-elements may be used when a single finger is used to stop multiple strings and <att>fret</att> giving the fret position at which the barre should be created.</p>
      <p>The <att>startid</att> and <att>endid</att> attributes are used to indicate the <gi>chordMember</gi> elements on which the barre starts and finishes respectively.</p>
    </div>
    <div>
      <head>Encoding Indications of Harmony in the Music Text</head>
      <p>When encoding the music text one might stumble upon tablature grids, chord representations above a staff or figured-bass. Moreover indications of harmonic analysis or &#x2013; be they present in the music text or additional ones by the MEI editor &#x2013;</p>
      <div>
        <head>harm</head>
        <p>
          <specList>
            <specDesc key="harm" atts="startid tstamp tstamp.ges tstamp.real"></specDesc>
          </specList>
        </p>
        <p>Must have one of the attributes: <att>startid</att>, <att>tstamp</att>, <att>tstamp.ges</att> or <att>tstamp.real</att></p>
      </div>
    </div>
    <!--(harmony) ― An indication of harmony, e.g., chord names, tablature grids, harmonic
    analysis, figured
    bass.--><!-- The starting point of the harmony may be indicated by either a
        tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending point may be recorded
        by either a dur, dur.ges or endid attribute. It is a semantic error not to specify a
        starting point attribute. The dur attribute encodes the logical and visual duration of the
        harmony. Please note that the dur attribute here is not a true duration, but rather a time
        stamp for the end point of the harmony.-->
    
    <div>
      <p>
        <specList>
          <specDesc key="f"/>
        </specList>
      </p>
    </div>
    <!--<elementSpec ident="f" module="MEI.harmony">
            <desc>(figure) ― Single element of a figured bass indication.</desc>
            <classes>
              <memberOf key="att.common"/>
              <memberOf key="att.common.anl"/>
              <memberOf key="att.altsym"/>
              <memberOf key="att.facsimile"/>
              <memberOf key="model.fLike"/>
            </classes>
            <content>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:text/>
                  <rng:ref name="model.textphraseLike.limited"/>
                  <rng:ref name="model.editLike"/>
                  <rng:ref name="model.transcriptionLike"/>
                </rng:choice>
              </rng:zeroOrMore>
            </content>
            <attList>
              <attDef ident="extender" usage="opt">
                <desc>indicates the presence of an extension symbol, typically a dash or underscore, drawn
                  from the end of the harmonic indication to the point indicated by the dur
                  attribute.</desc>
                <datatype>
                  <rng:ref name="data.BOOLEAN"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>-->
    <div>
      <p>
        <specList>
          <specDesc key="fb"/>
        </specList>
      </p>
    </div>
    <!-- <elementSpec ident="fb" module="MEI.harmony">
      <desc>(figured bass) ― Short-hand indication of harmony.</desc>
      <classes>
        <memberOf key="att.common"/>
        <memberOf key="att.common.anl"/>
        <memberOf key="att.facsimile"/>
        <memberOf key="model.figbassLike"/>
      </classes>
      <content>
        <rng:zeroOrMore>
          <rng:choice>
            <rng:ref name="model.fLike"/>
            <rng:ref name="model.editLike"/>
            <rng:ref name="model.transcriptionLike"/>
          </rng:choice>
        </rng:zeroOrMore>
      </content>
    </elementSpec> -->
  </div>
</div>
