<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2012 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://www.osedu.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->

<div type="div1" xml:id="shared" n="1" xmlns="http://www.tei-c.org/ns/1.0">
  <head>Shared Elements, Models, and Attributes</head>
  <p>This chapter describes the elements, models, and attributes that are part of the MEI.shared
    module. The shared module contains declarations that are shared among two or more other
    modules.</p>
  <div type="div2" xml:id="structuralElements">
    <!-- Structural Elements -->
    <head>Structural Elements</head>
    <div type="div3" xml:id="documentElements">
      <head>Document Elements</head>
      <p>The following elements are available for the representation of the outermost structure of
        an MEI document:</p>
      <p>
        <specList>
          <specDesc key="mei" atts="meiversion"/>
          <specDesc key="meiCorpus"/>
          <specDesc key="meiHead"/>
          <specDesc key="music"/>
        </specList>
      </p>
      <p>A typical MEI document contains an <gi>mei</gi> element, which in turn contains metadata,
        represented by an <gi>meiHead</gi> element, and the musical text itself, represented by a
          <gi>music</gi> element. The <gi>meiHead</gi> element, formally declared in the MEI.header
        module, is described in chapter <ptr target="#header"/>.</p>
      <p>Other variations on this basic form are also available for the representation of a:</p>
      <list type="bulleted">
        <item>collection of related MEI-encoded texts, each with its own metadata, known as a
          corpus</item>
        <item>document that contain only metadata, known as an independent or stand-alone
          header</item>
        <item>music markup without metadata, typically intended to be embedded within another kind
          of markup, such as TEI</item>
      </list>
      <p>Further information regarding the organization and encoding of music corpora is given in
        chapter <ptr target="#corpus"/>. Stand-alone headers are more fully described in chapter
          <ptr target="#independentHeader"/>.</p>
      <p>Inclusion of MEI encodings (partial or complete) inside Text Encoding Initiative (TEI)
        documents is covered in the TEI Guidelines at <ref
          target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/FT.html#FTNM"
          >http://www.tei-c.org/release/doc/tei-p5-doc/en/html/FT.html#FTNM</ref> and by the TEI
        Music Special Interest Group at <ref target="http://www.tei-c.org/SIG/Music/twm/index.html"
          >http://www.tei-c.org/SIG/Music/twm/index.html</ref>.</p>
    </div>
    <div type="div3" xml:id="musicElement">
      <head>Music Element</head>
      <!--<p>This section describes the <gi>music</gi> element and its high-level constituents.</p>-->
      <p>MEI texts may be regarded either as unitary; that is, forming an organic whole, or as
        composite; that is, consisting of several components which are in some important sense
        independent of each other. The distinction is not always entirely obvious. For example, a
        collection of songs might be regarded as a single item in some circumstances, or as a number
        of distinct items in others. In such borderline cases, the encoder must choose whether to
        treat the text as unitary or composite; each option may have advantages and
        disadvantages.</p>
      <p>Whether unitary or composite, the musical text is marked with the <gi>music</gi> tag and
        may contain front matter, a body, and back matter. In unitary texts, the body is tagged
        using the <gi>body</gi> element; in composite texts, however, where the textual body
        consists of a series of subordinate musical texts or other groups, it is tagged with the
          <gi>group</gi> element. The overall structure of any musical text, unitary or composite,
        is thus defined by the following elements:</p>
      <p>
        <specList>
          <specDesc key="front"/>
          <specDesc key="body"/>
          <specDesc key="group"/>
          <specDesc key="back"/>
        </specList>
      </p>
      <p>Critical editions and collections of works often contain extensive text, such as a title
        page, table of contents, an introductory essay, commentary, biographical sketch, index, etc.
        These textual items may appear in either the front or back elements. The front and back
        elements, available only when the MEI.text module is activated, are described more fully in
        chapter <ptr target="#text"/>.</p>
      <p>The overall structure of a single musical text is:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <mei>
          <meiHead>
            <!-- metadata goes here -->
          </meiHead>
          <music>
            <front>
              <!-- front matter of text, if any, goes here -->
            </front>
            <body>
              <!-- body of text goes here -->
            </body>
            <back>
              <!-- back matter of text, if any, goes here -->
            </back>
          </music>
        </mei>
      </egXML>
      <p>The top-level structure of a composite musical text made up of two unitary musical texts
        is:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <mei>
          <meiHead>
            <!-- metadata for the composite musical text  -->
          </meiHead>
          <music>
            <front>
              <!-- front matter for composite musical text -->
            </front>
            <group>
              <music>
                <front>
                  <!-- front matter of first unitary musical text, if any -->
                </front>
                <body>
                  <!-- body of first unitary musical text -->
                </body>
                <back>
                  <!-- back matter of first unitary musical text, if any -->
                </back>
              </music>
              <music>
                <body>
                  <!-- body of second unitary musical text -->
                </body>
              </music>
            </group>
            <back>
              <!-- back matter for composite musical text, if any -->
            </back>
          </music>
        </mei>
      </egXML>
      <div type="div4">
        <head>Grouped Texts</head>
        <p>The <gi>group</gi> element may be used to represent a collection of independent musical
          texts which is to be regarded as a single unit for processing or other purposes. It is
          provided to simplify the encoding of collections, anthologies, and cyclic works. It can
          also be used to record the potentially complex internal structure of corpora, covered more
          fully in chapter <ptr target="#corpus"/>.</p>
        <p>
          <specList>
            <specDesc key="group"/>
          </specList>
        </p>
        <p>Examples of composite texts which may be represented using the <gi>group</gi> element
          include anthologies and other collections. The presence of common front matter referring
          to the whole collection, possibly in addition to front matter relating to each individual
          musical text, is a good indication that a given musical text might usefully be encoded in
          this way.</p>
        <p>For example, the overall structure of a collection of songs might be encoded as
          follows:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <music>
            <group>
              <music><!-- song 1 --></music>
              <music><!-- song 2 --></music>
              <!-- additional songs here -->
            </group>
          </music>
        </egXML>
        <p>A group of musical texts may contain other unitary and grouped texts:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <music>
            <group>
              <music><!-- song 1 --></music>
              <group>
                <!-- songs sharing one or more characteristics, treated as a group -->
                <music><!-- song 2 --></music>
                <music><!-- song 3 --></music>
              </group>
            </group>
          </music>
        </egXML>
        <p>The <gi>group</gi> element may be used to encode any kind of collection in which the
          constituents are regarded by the encoder as works in their own right, such as <foreign>ad
            hoc</foreign> single- or multiple-composer collections or anthologies of works not
          originally conceived of as a single composition.</p>
      </div>
      <div type="div4">
        <head>Divisions of the Body</head>
        <p>This section describes sub-division of the body of a musical text. Front and back matter
          are described in chapter <ptr target="#text"/>.</p>
        <p>The body of a unitary musical text may contain one or more discrete, linear segments. The
          names commonly used for these structural subdivisions vary with the genre, style, and time
          period of the music, or even at the whim of the author, editor, or publisher. For example,
          a major subdivision of a symphony is generally referred to as a ‘movement’. An opera, on
          the other hand, is usually organized into ‘acts’ and then further by ‘scenes’. All such
          divisions are treated as occurrences of the same neutrally-named element, with a
            <att>type</att> attribute used to categorize them independently of their hierarchic
          level.</p>
        <p>The following element is used to identify musical subdivisions. As a member of the class
          att.typed, the <gi>mdiv</gi> element has attributes which can be used to classify or
          sub-classify it.</p>
        <p>
          <specList>
            <specDesc key="mdiv" atts="type subtype"/>
          </specList>
        </p>
        <p>To accommodate "divisions within divisions", an <gi>mdiv</gi> element may contain
          additional <gi>mdiv</gi> sub-elements nested to any level required. For example, the
          encoding of a multi-movement work, such as a symphony, will have the following
          structure:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <body xmlns="http://www.music-encoding.org/ns/mei">
            <mdiv type="symphony">
              <mdiv type="movement" n="1">
                <!-- contents of mvt 1 -->
              </mdiv>
              <mdiv type="movement" n="2">
                <!-- contents of mvt 2 -->
              </mdiv>
              <mdiv type="movement" n="3">
                <!-- contents of mvt 3 -->
              </mdiv>
              <mdiv type="movement" n="4">
                <!-- contents of mvt 4 -->
              </mdiv>
            </mdiv>
          </body>
        </egXML>
        <p>while dramatic works, such as Verdi's opera, <title>Il Trovatore</title> often have a
          more deeply-nested structure:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <body>
            <mdiv type="opera">
              <mdiv type="act" n="I">
                <mdiv type="scene" n="1"><!-- contents of act I, sc. 1 --></mdiv>
                <mdiv type="scene" n="2"><!-- contents of act I, sc. 2--></mdiv>
                <mdiv type="scene" n="3"><!-- contents of act I, sc. 3 --></mdiv>
              </mdiv>
              <mdiv type="act" n="II">
                <mdiv type="scene" n="1"><!-- contents of act II, sc. 1 --></mdiv>
                <mdiv type="scene" n="2"><!-- contents of act II, sc. 2 --></mdiv>
                <mdiv type="scene" n="3"><!-- contents of act II, sc. 3 --></mdiv>
                <mdiv type="scene" n="4"><!-- contents of act II, sc. 4 --></mdiv>
                <mdiv type="scene" n="5"><!-- contents of act II, sc. 5 --></mdiv>
              </mdiv>
              <mdiv type="act" n="III">
                <mdiv type="scene" n="1"><!-- contents of act III, sc. 1 --></mdiv>
                <mdiv type="scene" n="2"><!-- contents of act III, sc. 2 --></mdiv>
                <mdiv type="scene" n="3"><!-- contents of act III, sc. 3 --></mdiv>
              </mdiv>
              <mdiv type="act" n="IV">
                <mdiv type="scene" n="1"><!-- contents of act IV, sc. 1 --></mdiv>
                <mdiv type="scene" n="2"><!-- contents of act IV, sc. 2 --></mdiv>
                <mdiv type="scene" n="3"><!-- contents of act IV, sc. 3 --></mdiv>
              </mdiv>
            </mdiv>
          </body>
        </egXML>
        <p>Conventionally, in performance the musical structures represented by <gi>mdiv</gi>
          elements are separated by pauses; however, <foreign>attacca</foreign>, <foreign>attacca
            subito</foreign>, <foreign>seque</foreign>, or similar terms are sometimes used at the
          end of an <gi>mdiv</gi> to indicate that the next <gi>mdiv</gi> should begin immediately
          after the conclusion of the current one. They are encoded using the <gi>dir</gi> element.
          <!-- TODO: Do we need a processable way to encode this fact (not necessarily the wording)? -->
        </p>
      </div>
      <div type="div4" xml:id="mdivContent">
        <head>Content of Musical Divisions</head>
        <p>The <gi>mdiv</gi> element may contain one or both of two possible views: score and
          parts.</p>
        <p>
          <specList>
            <specDesc key="score"/>
            <specDesc key="parts"/>
          </specList>
        </p>
        <p>The <gi>score</gi> element represents notation in which all the parts of an ensemble are
          arranged on vertically aligned staves, while the <gi>parts</gi> element collects the
          individually notated parts for each performer or group of performers. The explicit
          encoding of these two <soCalled>views</soCalled> is necessary because it is not always
          possible or desirable to automatically derive one view from the other. In addition,
          separating scores and parts can eliminate a great deal of markup complexity.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <body>
            <mdiv type="movement" n="1">
              <score>
                <!-- markup of score goes here -->
              </score>
              <parts>
                <!-- markup of performers’ parts goes here -->
              </parts>
            </mdiv>
            <!-- additional movements go here -->
          </body>
        </egXML>
        <p>The <gi>score</gi> and <gi>parts</gi> elements may also be employed to accommodate
          different methods of organizing the markup – with no particular presentation implied. In
          this case, software may render a collection of parts as a score or a score as a collection
          of parts.</p>
        <p>Within the collective <gi>parts</gi> element, notation for a single performer is
          represented by the <gi>part</gi> element:</p>
        <p>
          <specList>
            <specDesc key="part"/>
          </specList>
        </p>
        <p>A <gi>part</gi> is effectively a small-scale score, allowing all the encoding features of
          a full score, such as multiple staves, performance directives, and so on. A group of
            <gi>part</gi> element is useful for encoding performing parts when there is no score,
          such as in early music part books; when the parts have non-aligning bar lines; when
          different layout features, such as page turns, are needed for the score and parts; or for
          accommodating software that requires part-by-part encoding. Please note that part elements
          in MEI are not an indication of voice leading. Voice leading can be encoded using the
            <att>next</att> attribute available on all the members of the <ident type="class"
            >model.eventLike</ident> class.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <parts>
            <part label="Violin 1">
              <!-- first performer’s part -->
            </part>
            <part label="Violin 2">
              <!-- second performer’s part -->
            </part>
            <!-- additional performers’ parts -->
          </parts>
        </egXML>
        <p>In both score and part views, the <gi>scoreDef</gi> element is used to describe logical
          characteristics of the encoded music, such as key signature, the sounding key (as opposed
          to the notated key signature), meter, etc., and visual features, such as page size, staff
          groupings and display labels, etc. The order of <gi>staffGrp</gi> elements within
            <gi>scoreDef</gi> and the order of <gi>staffDef</gi> elements inside <gi>staffGrp</gi>
          determine the score order of the MEI file.</p>
        <p>A <gi>part</gi> or <gi>score</gi> may be further divided into linear segments called
          "sections".</p>
        <p>
          <specList>
            <specDesc key="section"/>
          </specList>
        </p>
        <p><gi>Section</gi> elements are often used as a scoping mechanism for clef signs, key and
          meter signatures, plus metronome, tempo, and expression markings. This use can help to
          minimize the need for backward scanning to establish context when the starting point for
          access is not at the beginning of the score. <gi>Section</gi> elements may also be used
          for other user-defined, i.e., analytical or editorial, purposes, and therefore may be
          arbitrarily nested to any desired level.</p>
        <p>The <gi>ending</gi> element shares the same model as the <gi>section</gi> element. Unlike
            <gi>section</gi>, however, it may not be recursively nested.</p>
        <p>
          <specList>
            <specDesc key="ending"/>
          </specList>
        </p>
        <p>The most common (non-analytical, non-editorial) use of <gi>section</gi> and
            <gi>ending</gi> elements is illustrated below:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <music>
            <body>
              <mdiv>
                <score>
                  <section>
                    <!-- section one to be repeated -->
                  </section>
                  <ending n="1">
                    <!-- 1st ending -->
                  </ending>
                  <ending n="2">
                    <!-- 2nd ending -->
                  </ending>
                  <section>
                    <!-- next section -->
                  </section>
                </score>
              </mdiv>
            </body>
          </music>
        </egXML>
        <p>Within <gi>section</gi> elements, several methods of organization are possible, depending
          upon the notational style of the source material and the encoder's needs. For example,
          when the MEI.cmn module is used, the default organization is measure-by-measure, with
            <gi>staff</gi> and <gi>layer</gi> sub-elements within each <gi>measure</gi>. Further
          discussion of CMN notation is continued in chapter <ptr target="#cmn"/>.</p>
        <p>However, staff-by-staff organization is more appropriate for music without measures and
          is provided when either the MEI.mensural or MEI.neumes module is employed. Coverage of
          mensural notation is provided in chapter <ptr target="#mensural"/>, while <ptr
            target="#neumes"/> describes neumatic notation.</p>
        <p>It must be noted that, when both the MEI.cmn and MEI.mensural modules are available, it
          is possible to encode CMN notation without using <gi>measure</gi> elements; that is,
          staff-by-staff organization may be used and the ends of measures marked using
            <gi>barLine</gi> elements.</p>
        <!-- TODO:
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <!-\- NEED EXAMPLE HERE! -\->
        </egXML>-->
        <p>In certain circumstances, this approach may be preferable for reproduction of the visual
          layout of the music. However, the simultaneous use of the <gi>measure</gi> and
            <gi>barLine</gi> elements may lead to confusion and should be avoided.</p>
        <p>Typically, MEI follows the order of sections as they appear in the document being
          encoded. When performance requires a different order, for instance in the case of D.C. and
          D.S. directives, the following element may be used to define the performance order.</p>
        <p>
          <specList>
            <specDesc key="expansion"/>
          </specList>
        </p>
        <p>In the following example, <gi>expansion</gi> is used to indicate how the notated sections
          should be ordered in a "through-composed" rendition, for example for machine performance
          or analysis. The plist attribute contains an ordered list of identifiers of descendant
            <gi>section</gi>, <gi>ending</gi>, <gi>lem</gi>, or <gi>rdg</gi> elements. The sequence
          "#A #B #A" indicates that the section labelled 'A' comes first, then the section labelled
          'B', followed by the 'A' section again. This mechanism must be specified independently of
          any textual directives, such as "Da capo" or "D.S. al Fine", that may be present in the
          document.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <music>
            <body>
              <mdiv>
                <score>
                  <section>
                    <expansion plist="#shared.A #shared.B #shared.A"/>
                    <section xml:id="shared.A">
                      <!-- "A" section -->
                    </section>
                    <section xml:id="shared.B">
                      <!-- "B" section -->
                    </section>
                  </section>
                </score>
              </mdiv>
            </body>
          </music>
        </egXML>
      </div>
    </div>
  </div>
  <div type="div2" xml:id="musicalElements">
    <!-- Musical Elements -->
    <head>Shared Musical Elements</head>
    <p>This section lists the elements defined in the shared module that are available within the
      music element.</p>
    <div type="div3" xml:id="ScoreAndParts">
      <head>Score and Parts</head>
      <p>The following elements are provided for the capture of scores and parts:</p>
      <p>
        <specList>
          <specDesc key="score"/>
          <specDesc key="parts"/>
          <specDesc key="part"/>
          <specDesc key="scoreDef"/>
          <specDesc key="staffDef"/>
          <specDesc key="layerDef"/>
          <specDesc key="staffGrp"/>
          <specDesc key="grpSym"/>
          <specDesc key="label"/>
          <specDesc key="clef"/>
          <specDesc key="clefGrp"/>
          <specDesc key="keySig"/>
          <specDesc key="keyAccid"/>
        </specList>
      </p>
      <p> The character of elements specifying one or more score parameters, such as meter and key
        signature, clefs, etc., is that of a milestone; that is, they affect all subsequent material
        until a following redefinition. A <gi>scoreDef</gi> element, which may affect more than just
        one staff, is allowed only within <gi>score</gi>, <gi>part</gi> and <gi>section</gi>
        elements, whereas <gi>staffDef</gi> is allowed only within <gi>staffGrp</gi>, <gi>staff</gi>
        and <gi>layer</gi>. A <gi>staffDef</gi> nested inside a <gi>staff</gi> must bear the same
        value for its <att>n</att> attribute as its parent staff and may thus not affect other
        staves.</p>
      <p>The actual use of these elements depends on the repertoire and historical context of the
        source material. For details on their use in Common Western Notation, please refer to
        chapter <ptr target="#cmnDefs"/>.</p>
    </div>
    <div type="div3" xml:id="stavesAndLayers">
      <head>Staves and Layers</head>
      <p>The elements below are used to capture the logical organization of musical notation:</p>
      <p>
        <specList>
          <specDesc key="staff"/>
          <specDesc key="layer"/>
        </specList>
      </p>
      <p>The actual use of the <gi>staff</gi> and <gi>layer</gi> elements depends on the repertoire
        and historical context of the source material. For details on their use in Common Western
        Notation, please refer to chapter <ptr target="#cmnMeasures"/>. For mensural notation, see
        chapter <ptr target="#mensuralData"/>, and for neumatic notation, chapter <ptr
          target="#neumes1.2"/>.</p>
    </div>

    <!-- TODO: add chapter about the distinction between events and controlevents here? Have I written stuff like this
    in cmn? -->
    <div type="div3" xml:id="basicEvents">
      <head>Basic Music Events</head>
      <p>The basic features of music notation are represented by the following elements:</p>
      <p>
        <specList>
          <specDesc key="note"/>
          <specDesc key="chord"/>
          <specDesc key="rest"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="otherEvents">
      <head>Other "Events"</head>
      <p>Because they can occur in the context of a stream of events on the staff, some elements
        which are used in other contexts are also treated as events. For example, in addition to
        being used to define the initial clef of a staff, the <gi>clef</gi> element can also be used
        to indicate a clef change.</p>
      <div type="div4" xml:id="keySignaturesAndClefs">
        <head>Key Signatures and Clefs</head>
        <p>Key signatures and clefs as well as inter-staff changes to these musical parameters are
          treated as events.</p>
        <p>
          <specList>
            <specDesc key="keySig"/>
            <specDesc key="keyAccid"/>
            <specDesc key="clef"/>
            <specDesc key="clefGrp"/>
          </specList>
        </p>
      </div>
      <div type="div4" xml:id="barlines">
        <head>Bar Lines and Custos Signs</head>
        <p>Measure separators, i.e., bar lines, and custos signs are also considered to be
          events.</p>
        <p>
          <specList>
            <specDesc key="barLine"/>
            <specDesc key="custos"/>
          </specList>
        </p>
      </div>
      <div type="div4" xml:id="accidentalsArticulations">
        <head>Accidentals, Articulation Symbols, Augmentation Dots, and Custos Signs</head>
        <p>The following elements are regarded as events primarily because they sometimes occur
          independently of any associated notes, rests, or chords, especially in mensural and neume
          repertoires.</p>
        <p>
          <specList>
            <specDesc key="accid"/>
            <specDesc key="artic"/>
            <specDesc key="dot"/>
          </specList>
        </p>
      </div>
      <div type="div4" xml:id="lyricSyllables">
        <head>Lyric Syllables</head>
        <p>The <gi>syl</gi> element is used to mark a word or portion of a word that is to be
          vocally performed. A fuller description of its use is provided in chapter <ptr
            target="#lyricsSyl"/>.</p>
        <p>
          <specList>
            <specDesc key="syl"/>
          </specList>
        </p>
      </div>
      <div type="div4" xml:id="noteSpacing">
        <head>Event Spacing</head>
        <p>The following elements provide control over the horizontal spacing of notational events,
          such as notes, chords, rests, etc.:</p>
        <p>
          <specList>
            <specDesc key="space"/>
            <specDesc key="pad" atts="num"/>
          </specList>
        </p>
        <p>In this context, the term <soCalled>space</soCalled> is used to mean whitespace that is
          required to meaningfully align multiple voices in a multi-voice texture. In DARMS these
          were referred to as <soCalled>push codes</soCalled>. The <gi>space</gi> element is most
          often used when a new voice appears on a staff mid-measure.</p>
        <!-- TODO:
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <!-\- NEED EXAMPLE HERE! -\->
        </egXML>-->
        <p>The <gi>space</gi> element may also be used to align material that crosses staves.</p>
        <!-- TODO:
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <!-\- NEED EXAMPLE HERE! -\->
        </egXML>-->
        <p><soCalled>Space</soCalled> can be thought of as another kind of event. In fact, some
          refer to this concept as an <soCalled>invisible rest</soCalled>.</p>
        <p>While <soCalled>space</soCalled> is meaningful, <soCalled>padding</soCalled> is
          non-essential whitespace that is used to shift the position of the events which
          follow.</p>
        <!-- TODO:
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <!-\- NEED EXAMPLE HERE! -\->
        </egXML>-->
        <p>The <gi>pad</gi> element is provided in order to capture software-dependent placement
          information when it is desirable to do so. Unless the MEI file will be used as an
          intermediate file format, this is usually not necessary.</p>
      </div>
    </div>
    <div type="div3" xml:id="expressionMarks">
      <head>Expression Marks</head>
      <p>Expression marks are instructions in the form of words, abbreviations, or symbols that
        convey aspects of performance that cannot be expressed purely through the musical
        notation.</p>
      <div type="div4" xml:id="textDirectives">
        <head>Text Directives</head>
        <p>All of the following elements can be considered text directives; however, MEI uses the
            <gi>dir</gi> element specifically for words, abbreviations, numbers, or symbols
          specifying or suggesting the manner of performance that are not encoded elsewhere using
          the more specific elements of <gi>tempo</gi>, <gi>dynam</gi>, and <gi>phrase</gi>.</p>
        <p>
          <specList>
            <specDesc key="dir"/>
          </specList>
        </p>
        <p>Examples include text strings such as 'affettuoso', fingering numbers, or music symbols
          such as segno and coda symbols or fermatas over a bar line. Directives can be control
          elements. That is, they can linked via their attributes to other events. The starting
          point of the directive may be indicated by either a tstamp, tstamp.ges, tstamp.real or
          startid attribute, while the ending point may be recorded by either a dur, dur.ges or
          endid attribute. It is a semantic error not to specify a starting point attribute.</p>
      </div>
      <div type="div4" xml:id="tempo">
        <head>Tempo</head>
        <p>Tempo marks are indications through words, abbreviations, or specific metronome settings
          of the speed at which a piece of music is to be performed.</p>
        <p>
          <specList>
            <specDesc key="tempo"/>
          </specList>
        </p>
        <p>Both instantaneous and continuous tempo markings may be encoded using this element.
          Please note that the <att>dur</att> attribute here is expressed in musical time, i.e.,
          beats or other time stamp. Therefore, it is not a true duration, but rather a time stamp
          for the end point of the directive. More information regarding time stamps is available in
          chapter <ptr target="#cmnTstamp"/>.</p>
      </div>
      <div type="div4" xml:id="dynamics">
        <head>Dynamics</head>
        <p>Dynamics, or dynamic marks, are terms, abbreviations, and symbols that indicate the
          specific degrees of volume of a note, phrase, or section of music, e.g., "piano", "forte".
          Transitions from one volume level to another, e.g., "crescendo", "diminuendo", are also
          specified through dynamic marks.</p>
        <p>
          <specList>
            <specDesc key="dynam"/>
          </specList>
        </p>
      </div>
      <div type="div4" xml:id="phraseMarks">
        <head>Phrase Marks</head>
        <p>Phrase marks are curved lines placed over or under notes to delineate short sections of a
          work that have a musical syntax, analogous to a phrase in literature. MEI maintains a
          distinction between phrase marks and slurs, the latter being curved lines (or brackets)
          over or under a sequence of notes indicating their grouping for a specific reason, such as
          breathing or articulation.</p>
        <p>
          <specList>
            <specDesc key="phrase"/>
            <specDesc key="slur"/>
          </specList>
        </p>
      </div>
    </div>
  </div>
  <div type="div2" xml:id="textualElements">
    <!-- Textual Elements -->
    <head>Shared Textual Elements</head>
    <p>This section lists elements declared in the shared module that pertain to the encoding of
      prose.</p>
    <div type="div3" xml:id="paragraphs">
      <head>Paragraphs</head>
      <p>A paragraph is a structural unit of a larger text. Usually it is typographically distinct:
        It usually begins on a new line and the first letter of the content is often indented,
        enlarged, or both. This element has a similar meaning as the corresponding elements in
        Encoded Archival Description (EAD), Text Encoding Initiative (TEI), and HTML.</p>
      <p>
        <specList>
          <specDesc key="p"/>
        </specList>
      </p>
      <p>In MEI, a <gi>p</gi> is used in many different situations, including transcriptional use as
        on a <gi>titlePage</gi> or descriptive purposes as in a <gi>changeDesc</gi>.</p>
    </div>
    <div type="div3" xml:id="textRendition">
      <head>Text Rendition</head>
      <p>Sometimes, the encoder wants to emphasize or highlight a chunk of text without assigning it
        a special meaning beyond its typographical speciality. For this purpose, MEI offers the
          <gi>rend</gi> element, which compares to TEI's <foreign>hi</foreign> element. Its
          <att>rend</att> attribute is used to specify typographic features like underlining or
        quotes, whereas <att>fontweight</att> and <att>fontstyle</att> are used to capture a bold or
        italic rendering respectively. The <att>altrend</att> attribute may be used to capture
        arbitrary individual rendition styles.</p>
      <p><specList>
          <specDesc key="rend" atts="rend fontweight fontstyle altrend"/>
        </specList></p>
    </div>
    <!-- TODO: add description of titlepages -->
    <div type="div3" xml:id="titlePages">
      <head>Transcription of Titlepages</head>
      <p>A specialized element is furnished for the capture of titlepage information.</p>
      <p>
        <specList>
          <specDesc key="titlePage"/>
        </specList>
      </p>
      <p>The <gi>titlePage</gi> element, modelled after a similar element in Encoded Archival
        Description (EAD), may occur within the textual matter preceding or following the musical
        content of the encoding. Since a diplomatic transcription of the titlepage is often
        necessary to accurately identify musical material contained within a source,
          <gi>titlePage</gi> may also be used within the metadata header as a child of the
          <gi>physDesc</gi> element.</p>
    </div>
    <div type="div3" xml:id="namesNumbersDates">
      <head>Names, Dates, Numbers, Abbreviations, and Addresses</head>
      <div type="div4" xml:id="names">
        <head>Names and Dates</head>
        <p>The <gi>name</gi> and <gi>date</gi> elements may be used to mark up portions of a text
          that function as names or dates.</p>
        <p>
          <specList>
            <specDesc key="name"/>
            <specDesc key="date"/>
          </specList>
        </p>
        <p>The <gi>name</gi> element is intended for generic applications and may be used to
          identify any named entity, such as a person, item, application, place, etc. The namesDates
          module documented in <ptr target="#namesDates"/> offers the more specific elements
            <gi>persName</gi>, <gi>corpName</gi> and <gi>geogName</gi>.</p>
      </div>
      <div type="div4" xml:id="numbers">
        <head>Numbers</head>
        <p>The <gi>num</gi> element may be used to identify any numeric information in a text. The
            <att>unit</att> may be used to specify the unit of measurement.</p>
        <p>
          <specList>
            <specDesc key="num" atts="unit"/>
          </specList>
        </p>
        <p>This element is useful when it is necessary to provide specific information about numeric
          data, such as the unit of measurement or the kind of quanity described, or when it should
          be displayed in a special manner.</p>
      </div>
      <div type="div4" xml:id="addresses">
        <head>Addresses</head>
        <p>Addresses may be encoded using the <gi>address</gi> element, which itself may hold an
          arbitrary number of <gi>addrLine</gi> elements.</p>
        <p>
          <specList>
            <specDesc key="address"/>
            <specDesc key="addrLine"/>
          </specList>
        </p>
        <p>It is important to notice that the address element does not hold a reference to the
          person or organization whose address is specified. This has to provided in a separate
          element, as in the following example:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <corpName> Universität Paderborn </corpName>
          <address>
            <addrLine>Warburger Straße 100</addrLine>
            <addrLine>33098 Paderborn</addrLine>
            <addrLine>Germany</addrLine>
          </address>
        </egXML>
      </div>
    </div>
    <div type="div3" xml:id="annotations">
      <head>Annotations</head>
      <p>Annotations are one of the most versatile features of MEI. They are provided using the
          <gi>annot</gi> element.</p>
      <p>
        <specList>
          <specDesc key="annot"/>
        </specList>
      </p>
      <p>This element may be contained by a wide range of other elements, and itself may contain a
        large number of other elements. It is up to the encoder to ensure that no unwanted nesting
        is constructed using <gi>annot</gi>. In all cases, <gi>annot</gi> always provides a comment
        for something, but no transcription.</p>
      <p>Depending on its context, an annotation will deal with either its parent element, or, more
        usually, with the element(s) specified in its <att>plist</att> attribute. This attribute
        uses URI references to specify one or more other elements' <att>xml:id</att> attribute, like
        in the following example:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <note xml:id="shared.someInterestingNote"/>
        <!-- elsewhere in the document: -->
        <annot plist="#shared.someInterestingNote">
          <!-- additional information about this note -->
        </annot>
      </egXML>
      <!-- TODO: further description required… -->
    </div>
    <!--<div type="div3" xml:id="referenceSystems">
      <head>Reference Systems</head>
    </div>-->
    <div type="div3" xml:id="bibliographicCitations">
      <head>Bibliographic Citations and References</head>
      <p>The following elements are commonly used in the encoding of bibliographic citations and
        references:</p>
      <p>
        <specList>
          <specDesc key="bibl"/>
          <specDesc key="address"/>
          <specDesc key="annot"/>
          <specDesc key="date"/>
          <specDesc key="edition"/>
          <specDesc key="identifier"/>
          <specDesc key="name"/>
          <specDesc key="repository"/>
          <specDesc key="title"/>
        </specList>
      </p>
      <p>The element <gi>bibl</gi>, or bibliographic reference, may contain a mix of text and more
        specific elements such as <gi>title</gi>, <gi>edition</gi>, <gi>persname</gi>, and
          <gi>corpname</gi>. This element may also function as a hypertext reference to an external
        electronic resource.</p>
      <p>The <gi>identifier</gi> for a given item may be an International Standard Book/Music
        Number, Library of Congress Control Number, a publisher's or plate number, a personal
        identification number, an entry in a bibliography or catalog, etc.</p>
      <p>The <gi>repository</gi> element identies an institution that holds a bibliographic item. To
        identify sub-units of the institution, <gi>repository</gi> sub-elements may be used. The
        name of the list from which a controlled value for the agency name is taken may be recorded
        using the <att>authority</att> attribute. This element is modelled on an element in Encoded
        Archival Description (EAD).</p>
      <p>To classify the <gi>title</gi> according to some convenient typology, the <att>type</att>
        attribute may be used. Sample values include: main (main title), subordinate (subtitle,
        title of part), abbreviated (abbreviated form of title), alternative (alternate title by
        which the work is also known), translated (translated form of title), uniform (collective
        title). The <att>type</att> attribute is provided for convenience in analysing titles and
        processing them according to their type; where such specialized processing is not necessary,
        there is no need for such analysis, and the entire title, including subtitles and any
        parallel titles, may be enclosed within a single <gi>title</gi> element. Title parts may be
        encoded in <gi>title</gi> sub-elements. The name of the list from which a controlled value
        is taken may be recorded using the <att>authority</att> attribute.</p>
      <p>Please consult <ptr target="#namesNumbersDates"/> and <ptr target="#namesDates"/> for more
        specific information about recording the names and dates frequently found in bibliographic
        citations.</p>
    </div>
  </div>
  <div type="div2" xml:id="commonAttributes">
    <head>Common Attributes</head>
    <p>The following attributes, provided by the <ident type="class">att.common</ident> attribute
      class, are available on nearly all elements in an MEI encoding. They provide the means to
      identify, label, and access elements in MEI-encoded files.</p>
    <p>
      <specList>
        <specDesc key="att.common" atts="xml:id label n xml:base"/>
      </specList>
    </p>
    <p>The value of the <att>xml:id</att> attribute serves as an identifier for an element and its
      content. Its value must be unique in the context of the current document and must conform to
      the definition of an XML Name provided by the W3C Recommendation at <ref
        target="http://www.w3.org/TR/xml/#NT-Name">http://www.w3.org/TR/xml/#NT-Name</ref>.
      Suggestions for constructing an ID value can be found at <ref
        target="http://www.w3.org/TR/xml/#sec-suggested-names"
        >http://www.w3.org/TR/xml/#sec-suggested-names</ref>.</p>
    <p>The <att>xml:id</att> attribute may take values similar to the following:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <!-- The following are valid IDs. -->
      <note xml:id="n1"/>
      <note xml:id="_n1"/>
      <note xml:id="thisIsMyFavoriteNote"/>
      <note xml:id="shared.thisIsMyFavoriteNote"/>
    </egXML>

    <p>This is an example of an incorrectly-formulated <att>xml:id</att> value:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
      <!-- xml:id not valid as IDs are not allowed to start with a number. --> &lt;note xml:id="1"/&gt;</egXML>

    <p>The <att>label</att> and <att>n</att> attributes both serve a labeling function; however,
      they differ in the values they allow. The <att>n</att> attribute must be a single token, while
        <att>label</att> may contain a string value that includes spaces. This makes
        <att>label</att> useful for the capture of free-text labels, but a name or number specified
      with <att>n</att> may be easier to process.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <!-- Example of a @label containing whitespace: -->
      <mdiv label="Allegro moderato"> … </mdiv>
      <!-- Example of a processable @n attribute: -->
      <measure n="42"> … </measure>
    </egXML>
    <p>When a reference to an external entity is not a complete URI, the <att>xml:base</att>
      attribute can record a value against which it can be resolved into a complete, or absolute,
      location.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <graphic target="myImage.jpg" xml:base="http://www.mySite.org/images/"/>
    </egXML>
    <p>The value of <att>xml:base</att> can be inherited from an ancestor. In the following example,
      the values of the graphic elements' <att>target</att> attribute can be completed by the
      xml:base value specified for the <gi>facsimile</gi> element:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <facsimile xml:base="http://www.mySite.org/images/">
        <surface>
          <graphic target="myImage.jpg"/>
          <graphic target="myImage.tif"/>
        </surface>
      </facsimile>
    </egXML>
    <p>See <ref target="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</ref> for more
      details on xml:base.</p>
  </div>
  <!--<div type="div2" xml:id="sharedOverview">
    <!-\- Overview -\->
    <head>Overview of the Shared Module</head>
    <p>The module described in this chapter makes available the following components:</p>
    <div type="div3" xml:id="sharedElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="abbr"/>
          <specDesc key="accid"/>
          <specDesc key="actor"/>
          <specDesc key="address"/>
          <specDesc key="addrLine"/>
          <specDesc key="annot"/>
          <specDesc key="artic"/>
          <specDesc key="barLine"/>
          <specDesc key="bibl"/>
          <specDesc key="body"/>
          <specDesc key="caption"/>
          <specDesc key="castGrp"/>
          <specDesc key="castItem"/>
          <specDesc key="castList"/>
          <specDesc key="chord"/>
          <specDesc key="clef"/>
          <specDesc key="clefGrp"/>
          <specDesc key="custos"/>
          <specDesc key="date"/>
          <specDesc key="dir"/>
          <specDesc key="dot"/>
          <specDesc key="dynam"/>
          <specDesc key="edition"/>
          <specDesc key="ending"/>
          <specDesc key="expan"/>
          <specDesc key="expansion"/>
          <specDesc key="fw"/>
          <specDesc key="group"/>
          <specDesc key="grpSym"/>
          <specDesc key="identifier"/>
          <specDesc key="incip"/>
          <specDesc key="instrDef"/>
          <specDesc key="instrGrp"/>
          <specDesc key="keyAccid"/>
          <specDesc key="keySig"/>
          <specDesc key="label"/>
          <specDesc key="layer"/>
          <specDesc key="layerDef"/>
          <specDesc key="lb"/>
          <specDesc key="mdiv"/>
          <specDesc key="mei"/>
          <specDesc key="music"/>
          <specDesc key="name"/>
          <specDesc key="note"/>
          <specDesc key="num"/>
          <specDesc key="p"/>
          <specDesc key="pad"/>
          <specDesc key="part"/>
          <specDesc key="parts"/>
          <specDesc key="pb"/>
          <specDesc key="pgDesc"/>
          <specDesc key="pgFoot"/>
          <specDesc key="pgFoot2"/>
          <specDesc key="pgHead"/>
          <specDesc key="pgHead2"/>
          <specDesc key="phrase"/>
          <specDesc key="rend"/>
          <specDesc key="repository"/>
          <specDesc key="rest"/>
          <specDesc key="role"/>
          <specDesc key="roleDesc"/>
          <specDesc key="sb"/>
          <specDesc key="score"/>
          <specDesc key="scoreDef"/>
          <specDesc key="section"/>
          <specDesc key="space"/>
          <specDesc key="stack"/>
          <specDesc key="staff"/>
          <specDesc key="staffDef"/>
          <specDesc key="staffGrp"/>
          <specDesc key="syl"/>
          <specDesc key="tempo"/>
          <specDesc key="title"/>
          <specDesc key="titlePage"/>
        </specList>
     </p>
    </div>
    <div type="div3" xml:id="sharedAttributeClasses">
      <head>Attribute Classes</head>
      <p>
        <specDesc key="att.accid.anl"/>
        <specDesc key="att.accid.ges"/>
        <specDesc key="att.accid.log"/>
        <specDesc key="att.accid.vis"/>
        <specDesc key="att.accidental"/>
        <specDesc key="att.accidental.performed"/>
        <specDesc key="att.altsym"/>
        <specDesc key="att.annot.anl"/>
        <specDesc key="att.annot.ges"/>
        <specDesc key="att.annot.log"/>
        <specDesc key="att.annot.vis"/>
        <specDesc key="att.artic.anl"/>
        <specDesc key="att.artic.ges"/>
        <specDesc key="att.artic.log"/>
        <specDesc key="att.artic.vis"/>
        <specDesc key="att.articulation"/>
        <specDesc key="att.articulation.performed"/>
        <specDesc key="att.augmentdots"/>
        <specDesc key="att.authorized"/>
        <specDesc key="att.barLine.anl"/>
        <specDesc key="att.barLine.ges"/>
        <specDesc key="att.barLine.log"/>
        <specDesc key="att.barLine.vis"/>
        <specDesc key="att.barplacement"/>
        <specDesc key="att.beaming.vis"/>
        <specDesc key="att.bibl"/>
        <specDesc key="att.calendared"/>
        <specDesc key="att.canonical"/>
        <specDesc key="att.chord.anl"/>
        <specDesc key="att.chord.ges"/>
        <specDesc key="att.chord.log"/>
        <specDesc key="att.chord.vis"/>
        <specDesc key="att.clef.anl"/>
        <specDesc key="att.clef.ges"/>
        <specDesc key="att.clef.log"/>
        <specDesc key="att.clef.vis"/>
        <specDesc key="att.cleffing.log"/>
        <specDesc key="att.cleffing.vis"/>
        <specDesc key="att.clefGrp.anl"/>
        <specDesc key="att.clefGrp.ges"/>
        <specDesc key="att.clefGrp.log"/>
        <specDesc key="att.clefGrp.vis"/>
        <specDesc key="att.clefshape"/>
        <specDesc key="att.color"/>
        <specDesc key="att.coloration"/>
        <specDesc key="att.common"/>
        <specDesc key="att.controlevent"/>
        <specDesc key="att.coordinated"/>
        <specDesc key="att.curvature"/>
        <specDesc key="att.curverend"/>
        <specDesc key="att.custos.anl"/>
        <specDesc key="att.custos.ges"/>
        <specDesc key="att.custos.log"/>
        <specDesc key="att.custos.vis"/>
        <specDesc key="att.datable"/>
        <specDesc key="att.datapointing"/>
        <specDesc key="att.declaring"/>
        <specDesc key="att.dir.anl"/>
        <specDesc key="att.dir.ges"/>
        <specDesc key="att.dir.log"/>
        <specDesc key="att.dir.vis"/>
        <specDesc key="att.distances"/>
        <specDesc key="att.dot.anl"/>
        <specDesc key="att.dot.ges"/>
        <specDesc key="att.dot.log"/>
        <specDesc key="att.dot.vis"/>
        <specDesc key="att.duration.default"/>
        <specDesc key="att.duration.musical"/>
        <specDesc key="att.duration.performed"/>
        <specDesc key="att.duration.ratio"/>
        <specDesc key="att.duration.timestamp"/>
        <specDesc key="att.dynam.anl"/>
        <specDesc key="att.dynam.ges"/>
        <specDesc key="att.dynam.log"/>
        <specDesc key="att.dynam.vis"/>
        <specDesc key="att.enclosingchars"/>
        <specDesc key="att.ending.anl"/>
        <specDesc key="att.ending.ges"/>
        <specDesc key="att.ending.log"/>
        <specDesc key="att.ending.vis"/>
        <specDesc key="att.event"/>
        <specDesc key="att.fermatapresent"/>
        <specDesc key="att.grpSym.anl"/>
        <specDesc key="att.grpSym.ges"/>
        <specDesc key="att.grpSym.log"/>
        <specDesc key="att.grpSym.vis"/>
        <specDesc key="att.handident"/>
        <specDesc key="att.horizontalalign"/>
        <specDesc key="att.id"/>
        <specDesc key="att.instrumentident"/>
        <specDesc key="att.internetmedia"/>
        <specDesc key="att.joined"/>
        <specDesc key="att.keySigs.log"/>
        <specDesc key="att.keySigs.vis"/>
        <specDesc key="att.labels.addl"/>
        <specDesc key="att.lang"/>
        <specDesc key="att.layer.anl"/>
        <specDesc key="att.layer.ges"/>
        <specDesc key="att.layer.log"/>
        <specDesc key="att.layer.vis"/>
        <specDesc key="att.layerDef.anl"/>
        <specDesc key="att.layerDef.ges"/>
        <specDesc key="att.layerDef.log"/>
        <specDesc key="att.layerDef.vis"/>
        <specDesc key="att.layerident"/>
        <specDesc key="att.lineloc"/>
        <specDesc key="att.linerend"/>
        <specDesc key="att.lyricstyle"/>
        <specDesc key="att.measure.anl"/>
        <specDesc key="att.measure.ges"/>
        <specDesc key="att.measure.log"/>
        <specDesc key="att.measurement"/>
        <specDesc key="att.medium"/>
        <specDesc key="att.meiversion"/>
        <specDesc key="att.meterconformance"/>
        <specDesc key="att.meterconformance.bar"/>
        <specDesc key="att.meters.log"/>
        <specDesc key="att.meters.vis"/>
        <specDesc key="att.mmtempo"/>
        <specDesc key="att.multinummeasures"/>
        <specDesc key="att.name"/>
        <specDesc key="att.note.anl"/>
        <specDesc key="att.note.ges"/>
        <specDesc key="att.note.log"/>
        <specDesc key="att.note.vis"/>
        <specDesc key="att.octave"/>
        <specDesc key="att.octavedefault"/>
        <specDesc key="att.octavedisplacement"/>
        <specDesc key="att.onelinestaff"/>
        <specDesc key="att.pad.anl"/>
        <specDesc key="att.pad.ges"/>
        <specDesc key="att.pad.log"/>
        <specDesc key="att.pad.vis"/>
        <specDesc key="att.part.anl"/>
        <specDesc key="att.part.ges"/>
        <specDesc key="att.part.log"/>
        <specDesc key="att.part.vis"/>
        <specDesc key="att.parts.anl"/>
        <specDesc key="att.parts.ges"/>
        <specDesc key="att.parts.log"/>
        <specDesc key="att.parts.vis"/>
        <specDesc key="att.pb.anl"/>
        <specDesc key="att.pb.ges"/>
        <specDesc key="att.pb.log"/>
        <specDesc key="att.pb.vis"/>
        <specDesc key="att.phrase.anl"/>
        <specDesc key="att.phrase.ges"/>
        <specDesc key="att.phrase.log"/>
        <specDesc key="att.phrase.vis"/>
        <specDesc key="att.pitch"/>
        <specDesc key="att.pitched"/>
        <specDesc key="att.placement"/>
        <specDesc key="att.plist"/>
        <specDesc key="att.pointing"/>
        <specDesc key="att.regularized"/>
        <specDesc key="att.relativesize"/>
        <specDesc key="att.responsibility"/>
        <specDesc key="att.rest.anl"/>
        <specDesc key="att.rest.ges"/>
        <specDesc key="att.rest.log"/>
        <specDesc key="att.rest.vis"/>
        <specDesc key="att.sb.anl"/>
        <specDesc key="att.sb.ges"/>
        <specDesc key="att.sb.log"/>
        <specDesc key="att.sb.vis"/>
        <specDesc key="att.scalable"/>
        <specDesc key="att.score.anl"/>
        <specDesc key="att.score.ges"/>
        <specDesc key="att.score.log"/>
        <specDesc key="att.score.vis"/>
        <specDesc key="att.scoreDef.anl"/>
        <specDesc key="att.scoreDef.ges"/>
        <specDesc key="att.scoreDef.log"/>
        <specDesc key="att.scoreDef.vis"/>
        <specDesc key="att.section.anl"/>
        <specDesc key="att.section.ges"/>
        <specDesc key="att.section.log"/>
        <specDesc key="att.section.vis"/>
        <specDesc key="att.sequence"/>
        <specDesc key="att.slashcount"/>
        <specDesc key="att.slurpresent"/>
        <specDesc key="att.space.anl"/>
        <specDesc key="att.space.ges"/>
        <specDesc key="att.space.log"/>
        <specDesc key="att.space.vis"/>
        <specDesc key="att.staff.anl"/>
        <specDesc key="att.staff.ges"/>
        <specDesc key="att.staff.log"/>
        <specDesc key="att.staff.vis"/>
        <specDesc key="att.staffDef.anl"/>
        <specDesc key="att.staffDef.ges"/>
        <specDesc key="att.staffDef.log"/>
        <specDesc key="att.staffDef.vis"/>
        <specDesc key="att.staffgroupingsym"/>
        <specDesc key="att.staffGrp.anl"/>
        <specDesc key="att.staffGrp.ges"/>
        <specDesc key="att.staffGrp.log"/>
        <specDesc key="att.staffGrp.vis"/>
        <specDesc key="att.staffident"/>
        <specDesc key="att.staffloc"/>
        <specDesc key="att.startendid"/>
        <specDesc key="att.startid"/>
        <specDesc key="att.stemmed"/>
        <specDesc key="att.syl.anl"/>
        <specDesc key="att.syl.ges"/>
        <specDesc key="att.syl.log"/>
        <specDesc key="att.syl.vis"/>
        <specDesc key="att.syltext"/>
        <specDesc key="att.tempo.anl"/>
        <specDesc key="att.tempo.ges"/>
        <specDesc key="att.tempo.log"/>
        <specDesc key="att.tempo.vis"/>
        <specDesc key="att.textstyle"/>
        <specDesc key="att.tiepresent"/>
        <specDesc key="att.timestamp.musical"/>
        <specDesc key="att.timestamp.performed"/>
        <specDesc key="att.transposition"/>
        <specDesc key="att.tupletpresent"/>
        <specDesc key="att.typed"/>
        <specDesc key="att.typography"/>
        <specDesc key="att.visibility"/>
        <specDesc key="att.visualoffset"/>
        <specDesc key="att.visualoffset.ho"/>
        <specDesc key="att.visualoffset.to"/>
        <specDesc key="att.visualoffset.vo"/>
        <specDesc key="att.visualoffset2"/>
        <specDesc key="att.visualoffset2.ho"/>
        <specDesc key="att.visualoffset2.to"/>
        <specDesc key="att.visualoffset2.vo"/>
        <specDesc key="att.width"/>
        <specDesc key="att.xy"/>
        <specDesc key="att.xy2"/>
     </p>
    </div>
    <div type="div3" xml:id="sharedModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.addressLike"/>
          <specDesc key="model.annotLike"/>
          <specDesc key="model.biblLike"/>
          <specDesc key="model.biblPart"/>
          <specDesc key="model.captionLike"/>
          <specDesc key="model.controleventLike"/>
          <specDesc key="model.dateLike"/>
          <specDesc key="model.editionLike"/>
          <specDesc key="model.editorialLike"/>
          <specDesc key="model.endingLike"/>
          <specDesc key="model.eventLike"/>
          <specDesc key="model.identifierLike"/>
          <specDesc key="model.incipLike"/>
          <specDesc key="model.instrDefLike"/>
          <specDesc key="model.keyAccidLike"/>
          <specDesc key="model.keySigLike"/>
          <specDesc key="model.labelLike"/>
          <specDesc key="model.layerDefLike"/>
          <specDesc key="model.layerLike"/>
          <specDesc key="model.lbLike"/>
          <specDesc key="model.layerPart"/>
          <specDesc key="model.mdivLike"/>
          <specDesc key="model.metaLike.score"/>
          <specDesc key="model.measurementLike"/>
          <specDesc key="model.milestoneLike.music"/>
          <specDesc key="model.milestoneLike.text"/>
          <specDesc key="model.nameLike"/>
          <specDesc key="model.noteModifierLike"/>
          <specDesc key="model.numLike"/>
          <specDesc key="model.paracontentPart"/>
          <specDesc key="model.pLike"/>
          <specDesc key="model.partLike"/>
          <specDesc key="model.partsLike"/>
          <specDesc key="model.pbLike"/>
          <specDesc key="model.rendLike"/>
          <specDesc key="model.repositoryLike"/>
          <specDesc key="model.scoreDefLike"/>
          <specDesc key="model.scoreLike"/>
          <specDesc key="model.scorePart"/>
          <specDesc key="model.sectionLike"/>
          <specDesc key="model.sectionPart"/>
          <specDesc key="model.staffDefLike"/>
          <specDesc key="model.staffDefPart"/>
          <specDesc key="model.staffGrpLike"/>
          <specDesc key="model.staffLike"/>
          <specDesc key="model.staffPart"/>
          <specDesc key="model.textcomponentLike"/>
          <specDesc key="model.textphraseLike"/>
          <specDesc key="model.textphraseLike.limited"/>
          <specDesc key="model.titleLike"/>
          <specDesc key="model.startLike.header"/>
          <specDesc key="model.editorialDeclPart"/>
          <specDesc key="model.encodingPart"/>
          <specDesc key="model.figbassLike"/>
          <specDesc key="model.fLike"/>
          <specDesc key="model.frontPart"/>
          <specDesc key="model.headerPart"/>
          <specDesc key="model.physDescPart"/>
          <specDesc key="model.pubStmtPart"/>
          <specDesc key="model.controleventLike.cmn"/>
          <specDesc key="model.layerPart.cmn"/>
          <specDesc key="model.eventLike.cmn"/>
          <specDesc key="model.eventLike.measureFilling"/>
          <specDesc key="model.measureLike"/>
          <specDesc key="model.measurePart"/>
          <specDesc key="model.ossiaLike"/>
          <specDesc key="model.sectionPart.cmn"/>
          <specDesc key="model.eventLike.mensural"/>
          <specDesc key="model.layerPart.mensural"/>
          <specDesc key="model.staffDefPart.mensural"/>
          <specDesc key="model.eventLike.neumes"/>
          <specDesc key="model.layerPart.neumes"/>
          <specDesc key="model.syllableLike"/>
          <specDesc key="model.syllablePart"/>
          <specDesc key="model.ornamentLike.cmn"/>
          <specDesc key="model.startLike.corpus"/>
          <specDesc key="model.appLike"/>
          <specDesc key="model.rdgPart.critapp"/>
          <specDesc key="model.choicePart"/>
          <specDesc key="model.editLike"/>
          <specDesc key="model.transcriptionLike"/>
          <specDesc key="model.facsimileLike"/>
          <specDesc key="model.figureLike"/>
          <specDesc key="model.graphicLike"/>
          <specDesc key="model.figDescLike"/>
          <specDesc key="model.tableLike"/>
          <specDesc key="model.chordTableLike"/>
          <specDesc key="model.harmLike"/>
          <specDesc key="model.controleventLike.harmony"/>
          <specDesc key="model.alignLike"/>
          <specDesc key="model.lyricsLike"/>
          <specDesc key="model.sylLike"/>
          <specDesc key="model.verseLike"/>
          <specDesc key="model.midiLike"/>
          <specDesc key="model.nameLike.agent"/>
          <specDesc key="model.nameLike.geogName"/>
          <specDesc key="model.nameLike.place"/>
          <specDesc key="model.nameLike.label"/>
          <specDesc key="model.locrefLike"/>
          <specDesc key="model.backLike"/>
          <specDesc key="model.divLike"/>
          <specDesc key="model.frontLike"/>
          <specDesc key="model.headLike"/>
          <specDesc key="model.lLike"/>
          <specDesc key="model.listLike"/>
          <specDesc key="model.quoteLike"/>
          <specDesc key="model.rdgPart.text"/>
          <specDesc key="model.lgLike"/>
          <specDesc key="model.graphicprimitiveLike"/>
          <specDesc key="model.symbolTableLike"/>
          <specDesc key="model.performanceLike"/>
        </specList>
     </p>
    </div>
  </div>-->
</div>
