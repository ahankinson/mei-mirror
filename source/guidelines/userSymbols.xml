<?xml version="1.0" encoding="UTF-8"?>
<!--
  © 2010 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Creative Commons Attribution-NoDerivs Unported License, 
  Version 3.0 (the "License"); you may not use this file except in compliance with the License.
  You may obtain a copy of the License at http://creativecommons.org/licenses/by-nd/3.0/.
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="userSymbols" n="0" xml:lang="en">
  <head>User-defined Symbols</head>
  <p>This chapter describes the elements, model classes, and attribute classes that are part of the
    MEI.usersymbols module.</p>
  <div type="div2" xml:id="usersymbolsOverview">
    <!-- Overview -->
    <head>Overview of the usersymbols Module</head>
    <p>The module described in this chapter makes available the following components:</p>
    <div type="div3" xml:id="usersymbolsElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="anchoredText"/>
          <specDesc key="curve"/>
          <specDesc key="line"/>
          <specDesc key="symbol"/>
          <specDesc key="symbolDef"/>
          <specDesc key="symbolTable"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="usersymbolsAttributeClasses">
      <head>Attribute Classes</head>
      <p>No attribute classes are defined in this module.</p>
    </div>
    <div type="div3" xml:id="usersymbolsModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.graphicprimitiveLike"/>
          <specDesc key="model.symbolTableLike"/>
        </specList>
      </p>
    </div>
  </div>
  <div>
    <head>Uses of the usersymbol module</head>
    <p> The elements provided by the usersymbol module may be used in two ways: <list type="ordered">
        <item>For defining lines, curves and text elements that cannot be represented by a more
          specific element.</item>
        <item>For defining reusable symbols and special graphical renditions.</item>
      </list>For this purpose, it provides three elements for graphics primitives, <gi>line</gi>,
      <gi>curve</gi> and <gi>anchoredText</gi>. At places where those primitives can be put, the <gi>symbol</gi>
      element can be used as well. The <gi>symbol</gi> element reuses symbols that were defined by
      <gi>symbolDef</gi> elements.</p>
    <div>
      <head>Defining reusable symbols</head>
      <p><gi>symbolDef</gi>s are using the graphics primitives to describe a symbol. They may also
        combine other symbols defined by other <gi>symbolDef</gi>s using the <gi>symbol</gi> element.</p>
      <figure>
          <head>Definition of a triangle percussion symbol</head>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <symbolDef xml:id="triangleSymbol">
          <line x="0" y="0" x2="2.55" y2="4.25"/>
          <line x="2.55" y="4.25" x2="5.1" y2="0"/>
          <line x="5.1" y="0" x2="0.85" y2="0"/>
        </symbolDef>
      </egXML>
      </figure>
      <figure>
        <head>Rendition of the above defined triangle</head>
        <graphic url="Images/modules/usersymbols/triangle.svg"/>
      </figure>
      <figure>
        <head>Symbol composed of the symbol defined above and additional graphics primitives</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <symbolDef xml:id="triangleSymbolWithStick">
            <symbol ref="#triangleSymbol"/>
            <line x="2.55" y="1.25" x2="5.95" y2="3.4"/>
          </symbolDef>
        </egXML>
      </figure>
      <figure>
        <head>Rendition of the composite triangle symbol</head>
        <graphic url="Images/modules/usersymbols/triangleWithStick.svg"/>
      </figure>
    </div><div>
      <head>Elements without semantic implications</head>
      <p>The graphics primitives and symbols can be used directly in the music to describe text and
        lines on a purely graphical level, without implying a specific logical meaning. If possible,
        more meaningful elements should be used. This means for example, "a tempo" or "da capo"
        should in general not be put inside <gi>anchoredText</gi>. Instead, <gi>tempo</gi> and <gi>dir</gi>
        should be used. Likewise, slurs and ties should be encoded using the respective elements,
        not using <gi>curve</gi>, and for glissandi, <gi>gliss</gi> should be used instead of <gi>line</gi>.</p>
      <p>An example usage for <gi>line</gi>s would be the visualization of voice leading, which is not
        covered by a specific MEI element. </p>
      <figure xml:id="mignonFigure">
        <head>Voice leading visualization as found in an Edition Peters print of Album für die
          Jugend by Schumann, No. 35 (Mignon), measure 6. (Unknown date, plate number is
          10478.)</head>
        <graphic url="Images/modules/usersymbols/mignon.svg"/>
      </figure>
      <figure>
        <head>Encoding of the Schumann example</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <measure n="6">
            <staff n="1">
              <layer n="1">
                <rest dur="4" xml:id="r1"/>
                <beam>
                  <note pname="c" oct="4" dur="8" xml:id="n1"/>
                  <note pname="e" oct="4" dur="8" xml:id="n2"/>
                </beam>
                <beam>
                  <note pname="g" oct="4" dur="8" xml:id="n3"/>
                  <note pname="e" oct="4" dur="8" xml:id="n4"/>
                  <note pname="b" oct="4" dur="8" xml:id="n5"/>
                  <note pname="g" oct="4" dur="8" xml:id="n6"/>
                </beam>
                <slur startid="#n1" endid="#n6" curvedir="above"/>
              </layer>
              <layer n="2">
                <rest dur="4" sameas="#r1"/>
                <note stem.dir="down" pname="c" oct="4" dur="2" xml:id="n7" next="#n9"/>
              </layer>
            </staff>
            <staff n="2">
              <layer n="1">
                <note pname="g" oct="2" dur="2" dots="1" xml:id="n8"/>
                <note pname="b" oct="3" dur="4" xml:id="n9" prev="#n7 #n8"/>
                <slur startid="#n8" endid="#n9" curvedir="above"/>
              </layer>
            </staff>
            <line startid="#n7" endid="#n9" rend="dotted"/>
          </measure>
        </egXML>
      </figure>
    </div><div>
      <head>Defining a specific graphical rendition for a semantic element</head>
      <p>Usersymbols can define the rendition of different elements in two ways. Some elements,
        namely <gi>dir</gi> and <gi>tempo</gi>, can have usersymbol elements as content. This can e.g. be
        used to indicate percussion instruments using pictograms.</p>
      <figure>
        <head>Indicating percussion instruments using pictograms</head>
        <figure>
          <graphic url="Images/modules/usersymbols/percussion.svg"/>
        </figure>
      </figure>
      <figure>
        <head>Encoding of above example</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <section>
            <scoreDef meter.count="4" meter.unit="4">
              <symbolTable>
                <symbolDef xml:id="triangleSymbol">
                  <line x="0" y="0" x2="2.55" y2="4.25"/>
                  <line x="2.55" y="4.25" x2="5.1" y2="0"/>
                  <line x="5.1" y="0" x2="0.85" y2="0"/>
                  <line x="2.55" y="1.25" x2="5.95" y2="3.4"/>
                </symbolDef>
                <symbolDef xml:id="cowbellSymbol">
                  <line x="1" y="0" x2="1.8" y2="4"/>
                  <line x="1.8" y="4" x2="4.2" y2="4"/>
                  <line x="4.2" y="4" x2="5" y2="0"/>
                  <line x="5" y="0" x2="1" y2="0"/>
                  <curve startho="1" startvo="4" bezier="0 1.5 0 1.5" endho="3" endvo="4"/>
                </symbolDef>
              </symbolTable>
              <staffGrp>
                <staffDef n="1" clef.shape="G" clef.line="2"/>
              </staffGrp>
            </scoreDef>
            <measure n="1">
              <staffDef n="1">
                <instrDef midi.instrname="Open_Triangle"/>
              </staffDef>
              <staff n="1">
                <layer>
                  <dir tstamp="1">
                    <symbol ref="#triangleSymbol"/>
                  </dir>
                  <note dur="1"/>
                </layer>
              </staff>
            </measure>
            <measure n="2">
              <staffDef n="1">
                <instrDef midi.instrname="Cowbell"/>
              </staffDef>
              <staff n="1">
                <layer>
                  <dir tstamp="1">
                    <symbol ref="#cowbellSymbol"/>
                  </dir>
                  <note dur="4"/>
                  <note dur="4"/>
                  <note dur="4"/>
                  <note dur="4"/>
                </layer>
              </staff>
            </measure>
          </section>
        </egXML>
      </figure>
      <p>A number of other elements can point to a symbol for rendering using the <att>altsym</att>
        attribute.</p>
      <figure>
          <head>Different treble clef renditions as written by Charpentier (source: <ref target="www.sscm-jscm.org/v12/no1/gosine.html">Journal of Seventeenth-Century Music,
            Volume 12, No. 1 (2006)</ref>, <ref target="http://www.sscm-jscm.org/v12/no1/gosine.html#ch10">figure 3</ref>)</head>
        <graphic url="Images/modules/usersymbols/charpentier.svg"/>
        </figure>
      <figure>
        <head>Defining two staffs, each using its own treble clef shape</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <scoreDef>
            <symbolTable>
              <symbolDef xml:id="clefA">
                <curve startho="1.2" startvo=" 4   " bezier="-1.2   0.1 -0.9 -0.8 " endho="1.1" endvo=" 6.6"/>
                <curve startho="1.1" startvo=" 6.6 " bezier=" 1     0.9  0.1  1.6 " endho="3  " endvo=" 5.3"/>
                <curve startho="3  " startvo=" 5.3 " bezier="-0.1  -2.6  0    2.3 " endho="0.6" endvo="-0.1"/>
                <curve startho="0.6" startvo="-0.1 " bezier=" 0.07 -1.3 -0.2 -1.63" endho="2.4" endvo=" 0.23"/>
                <curve startho="2.4" startvo=" 0.23" bezier=" 0.2   1.3  0.5  0.62" endho="0.8" endvo=" 0.81"/>
              </symbolDef>
              <symbolDef xml:id="clefB">
                <curve startho="2.5" startvo=" 1.3 " bezier="-0.7   0.1   0.3   0.92" endho="0.7" endvo="-0.2"/>
                <curve startho="0.7" startvo="-0.2 " bezier="-0.27 -0.76 -1.25 -1.26" endho="2  " endvo="-0.74"/>
                <curve startho="2  " startvo="-0.74" bezier=" 1.4   1.8   0.4  -1   " endho="1.6" endvo=" 4.36"/>
                <curve startho="1.6" startvo=" 4.36" bezier="-0.89  2.2  -1.1   1.6 " endho="3.5" endvo=" 6.06"/>
                <curve startho="3.5" startvo=" 6.06" bezier=" 0.8  -1.2   0     0   " endho="3.7" endvo=" 2.66"/>
              </symbolDef>
            </symbolTable>
            <staffGrp>
              <staffDef n="1">
                <clef shape="G" line="2" altsym="#clefA"/>
              </staffDef>
              <staffDef n="2">
                <clef shape="G" line="2" altsym="#clefB"/>
              </staffDef>
            </staffGrp>
          </scoreDef>
        </egXML>
      </figure>
    </div>
  </div>
  <div>
    <head>Positioning and coordinates</head>
  <div xml:id="coordinateSystem">
      <head>Axis orientation</head>
      <p>MEI uses the classic axis directions where the x-axis points from left to right and the
        y-axis points from bottom up. (This is compatible with PostScript's axis orientation, while
        SVG's y-axis points in the opposite direction.)</p>
    </div>
    <div>
      <head>Units</head>
      <p>There are two types of units used by MEI: Staff units (data.INTERLINE) and units of the
        output coordinate system. Units of the output coordinate system can be translated to
        physical real world distances by means of the <att>page.unit</att> and <att>page.scale</att> of a
        <gi>scoreDef</gi> element. Real world units are multiplied by the value of <att>page.scale</att> to get
        the corresponding value in output coordinate units.</p>
      <p>If an element is scaled using the <att>scale</att> attribute, the actual size of the units changes
        accordingly.</p>
    </div>
    <div>
      <head>Positioning</head>
      <p>An element may be positioned using either absolute or relative coordinates. If absolute
        start point coordinates are specified using <att>x</att>/<att>y</att> coordinates (or their relatives <att>x2</att>/<att>y2</att>
          for endpoints) they take precedence over relative positions specified by <att>ho</att>/<att>vo</att>/<att>to</att> (or
        <att>startho</att>/<att>startvo</att>/<att>startto</att>). Analogously, <att>x2</att>/<att>y2</att> override <att>endho</att><att>endvo</att>/<att>endto</att>.</p>
      <p>If <att>to</att>/<att>startto</att>/<att>endto</att> are used, the start or end point is x-aligned with the indicated
        timestamp.</p>
      <p>If relative start coordinates (<att>ho</att>/<att>vo</att> or <att>startho</att>/<att>startvo</att>) are used, the origin of the to
        be used coordinate system for the start point is the first one found by the following search
        schema:</p>
      <list type="ordered">
        <item>If <att>startid</att> is present, the origin of the referenced element.</item>
        <item>If the element is inside running text (e.g. inside <gi>tempo</gi>), the end of the
          preceding text or element.</item>
        <item>Otherwise, the origin of the containing element.</item>
      </list>
      <p>The start point is offset from this origin by the value of the start coordinates
          (<att>ho</att>/<att>vo</att> or <att>startho</att>/<att>startvo</att>), using staff
        units.</p>
      <p>Analogously, the endpoint is determined, using end coordinates (<att>endho</att>/<att>endvo</att>). If <att>endid</att>
        is specified, it takes precedence over <att>startid</att>.</p>
      <p>Examples of origins are:</p>
      <list>
        <item><gi>staff</gi> and <gi>layer</gi>: The horizontal origin is the starting point of the measure,
          the vertical one is the bottom staff line</item>
        <item><gi>note</gi>: The horizontal origin is the left end of the notehead, the vertical one the
          center of the notehead.</item>
        <item><gi>clef</gi>: The horizontal origin is the left end of the clef, the vertical one the
          line specified by <gi>clef</gi>/<att>line</att> (or <att>clef.line</att>).</item>
        <item>For elements containing text: The left end of the baseline.</item>
        <item><gi>symbolDef</gi>: As <gi>symbolDef</gi>s aren't rendered directly, their coordinate system
          and origin are considered virtual. When they are referenced by <gi>symbol</gi> or <att>altsym</att>, the
          origin of the context, i.e. the referencing symbol, is used.</item>
      </list>
      <p>If neither absolute nor relative coordinates are specified, determining visually suitable
        start points (and endpoints for <gi>lines</gi> and <gi>curve</gi>s) is left to the rendering
        application. Not always a value of 0 will be assumed for absent relative coordinates. A
        typical example where a rendering application may not choose the origins of absent relative
        start and end coordinates to be the start point as well is the line connecting two notes in
        the above <ref target="#mignonFigure">Schumann example</ref>.</p>
    </div>
    <div>
      <head>Curve shape</head>
      <p>If neither <att>bezier</att> nor <att>bulge</att> are present, the renderer determines a suitable shape. If
        present, it will be respecting the curvature direction specified by <att>curvedir</att>.</p>
      <p><att>bezier</att> and <att>bulge</att> define the shape of a curve in two different ways.
        If both are present, a rendering application may choose either one. They override
          <att>curvedir</att>.</p>
      <p><att>bezier</att> defines the inner control points of a cubic Bézier curve, i.e. a Bézier
        curve with two inner control points. The coordinates are given a space separated list, first
        x and y offsets for the first control point, then x and y offsets for the second one. The x
        and y offsets are given in staff units (or inside the context of <gi>symbolDef</gi> in
        abstract units). The offsets for the first inner control point are relative to the start
        point, the ones for the second inner control point are relative to the end point.</p>
      <p>{PROBLEM: Samples converted from MusicXML seem to use MusicXML tenth, which doesn't make
        sense in the context of MEI.}</p>
      <p><att>bulge</att> allows to specify the curve shape by a number of interpolation points. The
        interpolation points are given by their distance from the line connecting the start and end
        point. The distance values are stored as a space separated list.</p>
      <p>The interpolation points are calculated as follows: If <att>bulge</att> provides
          <formula>n</formula> distance values, the connection line is divided into
          <formula>n+1</formula> subsegments of equal length. The interpolation points are found by
        drawing a perpendicular line of the respective length at each subsegment joint. Positive
        distance values are drawn to the left of the connection line (left when traveling from start
        to end), negative ones to the right.</p>
      <figure>
        <head>Rendering a bulge attribute with value "2 1"</head>
        <graphic url="Images/modules/usersymbols/bulge.svg"/>
      </figure>
      <p>The interpolation algorithm used by the rendering application is implementation
        dependant.</p>
    </div>
  </div>
  
  <div>
    <head>Line rendition</head>
    <p>The <att>rend</att> attribute of lines and curves can take on the following values:</p>
    <list>
      <item>
        narrow
      </item>
      <item>
        medium
      </item>
      <item>
        wide
      </item>
      <item>
        dashed
      </item>
      <item>
        dotted
      </item>
    </list>
    <p>These attributes are only qualitative. The actual line width, dot and dash distance, dash
      length and line ending shapes are implementation dependant.</p>
  </div>
  <div>
    <head>Limitations</head>
    <p>The usersymbol module does currently not support continuous composite lines or filled areas.
      As mentioned above, the rendition of lines is highly implementation dependant. Coordinate
      system transforms are restricted to scaling using <att>scale</att>.</p>
    <p>{QUESTION: What is the significance of att.coordinated on <gi>symbolDef</gi>?}</p>
  </div>
</div>